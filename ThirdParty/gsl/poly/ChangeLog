2013-10-13  Rhys Ulerich <rhys.ulerich@gmail.com>

	* test.c Update stale names from "gsl_poly_eval_dp" to
	"gsl_poly_eval_derivs" in the test log.  Thanks to Mark
	Jourdain for pointing out the inconsistency.

2011-04-13  Brian Gough  <bjg@network-theory.co.uk>

	* solve_quadratic.c (gsl_poly_solve_quadratic): simplify the case
	where b==0 and disc>0
	(gsl_poly_solve_quadratic): delay the evaluation of the
	discriminant until it is needed

2009-07-09  Brian Gough  <bjg@network-theory.co.uk>

	* zsolve_init.c (gsl_poly_complex_workspace_free): handle NULL
	argument in free

2009-05-09  Brian Gough  <bjg@network-theory.co.uk>

	* zsolve_cubic.c (gsl_poly_complex_solve_cubic): test R2 < Q3
	directly, to avoid argument of acos exceeding 1 due to
	extended precision.

	* solve_cubic.c (gsl_poly_solve_cubic): ditto

2008-07-03  Brian Gough  <bjg@hp2.network-theory.co.uk>

	* gsl_poly.h: use new inline declarations

	* inline.c: handle inline functions in separate file

	* dd.c: move gsl_poly_dd_eval to inline.c

	* Makefile.am (INCLUDES): use top_srcdir instead of top_builddir

2008-04-28  Brian Gough  <bjg@network-theory.co.uk>

	* dd.c (gsl_poly_dd_taylor): use new descending loop convention

2007-12-17  Brian Gough  <bjg@network-theory.co.uk>

	* eval.c: added functions for complex polynomials

2005-07-03  Brian Gough  <bjg@network-theory.co.uk>

	* test.c (main): added tests for linear case

	* zsolve_quadratic.c (gsl_poly_complex_solve_quadratic): handle
	the linear case

	* solve_quadratic.c (gsl_poly_solve_quadratic): handle the linear
	case

2005-05-19  Brian Gough  <bjg@network-theory.co.uk>

	* Makefile.am (noinst_HEADERS): removed norm.c (unused)

Sun Dec  2 22:02:31 2001  Brian Gough  <bjg@network-theory.co.uk>

	* dd.c: added divided differences code from Dan, Ho-Jin

Wed Oct 31 18:42:10 2001  Brian Gough  <bjg@network-theory.co.uk>

	* qr.c (qr_companion): increased maximum number of iterations from
 	30 to 60

Thu Jun 28 11:24:51 2001  Brian Gough  <bjg@network-theory.co.uk>

	* test.c (main): fixed a subtle bug in the test where the array
 	for the complex results was too small by a factor of two

Mon Apr 30 12:36:08 2001  Brian Gough  <bjg@network-theory.co.uk>

	* eval.c (gsl_poly_eval): added eval function  from specfunc

Tue Aug 24 12:02:47 1999  Brian Gough  <bjg@network-theory.co.uk>

	* zsolve.c: added general solver using QR method

1999-08-22  Mark Galassi  <rosalia@lanl.gov>

	* Makefile.am (libgslpoly_a_SOURCES): for now commented out
	zsolve.c, since it has some strange errors that make it look like
	it was not committed.

Tue Aug 17 14:23:47 1999  Brian Gough  <bjg@network-theory.co.uk>

	* zsolve_cubic.c (gsl_poly_complex_solve_cubic): compute the
 	discriminant without division so that it is exact for exact inputs

	* solve_cubic.c (gsl_poly_solve_cubic): compute the discriminant
 	without division so that it is exact for exact inputs

	* changed the way roots are counted to make all the routines
 	consistent. Conincident roots are no longer a special case, now
 	they are made up of separate roots which happen to have the same
 	values.

	* zsolve_quadratic.c (gsl_poly_complex_solve_quadratic): in the
 	case of a multiple root set all the returned values r0 = r1 =
 	root, rather than just setting one and leaving the others
 	potentially unset.

	* solve_quadratic.c (gsl_poly_solve_quadratic):  ditto

Tue Aug  3 19:36:26 1999  Brian Gough  <bjg@network-theory.co.uk>

	* gsl_poly.h: changed all functions to take separate variables for
 	roots (z0, z1, z2) of variable-length arrays

Sat Feb 20 12:13:46 1999  Brian Gough  <bjg@netsci.freeserve.co.uk>

	* split out polynomial root finding algorithms into a new poly/
 	directory

