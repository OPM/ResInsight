# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import App_pb2 as App__pb2
import Definitions_pb2 as Definitions__pb2


class AppStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
            '/rips.App/GetVersion',
            request_serializer=Definitions__pb2.Empty.SerializeToString,
            response_deserializer=App__pb2.Version.FromString,
        )
        self.Exit = channel.unary_unary(
            '/rips.App/Exit',
            request_serializer=Definitions__pb2.Empty.SerializeToString,
            response_deserializer=Definitions__pb2.Empty.FromString,
        )
        self.GetRuntimeInfo = channel.unary_unary(
            '/rips.App/GetRuntimeInfo',
            request_serializer=Definitions__pb2.Empty.SerializeToString,
            response_deserializer=App__pb2.RuntimeInfo.FromString,
        )


class AppServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetVersion(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exit(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRuntimeInfo(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AppServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetVersion': grpc.unary_unary_rpc_method_handler(
            servicer.GetVersion,
            request_deserializer=Definitions__pb2.Empty.FromString,
            response_serializer=App__pb2.Version.SerializeToString,
        ),
        'Exit': grpc.unary_unary_rpc_method_handler(
            servicer.Exit,
            request_deserializer=Definitions__pb2.Empty.FromString,
            response_serializer=Definitions__pb2.Empty.SerializeToString,
        ),
        'GetRuntimeInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetRuntimeInfo,
            request_deserializer=Definitions__pb2.Empty.FromString,
            response_serializer=App__pb2.RuntimeInfo.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'rips.App', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
