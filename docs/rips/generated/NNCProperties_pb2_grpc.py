# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Case_pb2 as Case__pb2
import Definitions_pb2 as Definitions__pb2
import NNCProperties_pb2 as NNCProperties__pb2


class NNCPropertiesStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.GetAvailableNNCProperties = channel.unary_unary(
            '/rips.NNCProperties/GetAvailableNNCProperties',
            request_serializer=Case__pb2.CaseRequest.SerializeToString,
            response_deserializer=NNCProperties__pb2.AvailableNNCProperties.FromString,
        )
        self.GetNNCConnections = channel.unary_stream(
            '/rips.NNCProperties/GetNNCConnections',
            request_serializer=Case__pb2.CaseRequest.SerializeToString,
            response_deserializer=NNCProperties__pb2.NNCConnections.FromString,
        )
        self.GetNNCValues = channel.unary_stream(
            '/rips.NNCProperties/GetNNCValues',
            request_serializer=NNCProperties__pb2.NNCValuesRequest.SerializeToString,
            response_deserializer=NNCProperties__pb2.NNCValues.FromString,
        )
        self.SetNNCValues = channel.stream_unary(
            '/rips.NNCProperties/SetNNCValues',
            request_serializer=NNCProperties__pb2.NNCValuesChunk.SerializeToString,
            response_deserializer=Definitions__pb2.ClientToServerStreamReply.FromString,
        )


class NNCPropertiesServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetAvailableNNCProperties(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNNCConnections(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNNCValues(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNNCValues(self, request_iterator, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NNCPropertiesServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetAvailableNNCProperties': grpc.unary_unary_rpc_method_handler(
            servicer.GetAvailableNNCProperties,
            request_deserializer=Case__pb2.CaseRequest.FromString,
            response_serializer=NNCProperties__pb2.AvailableNNCProperties.SerializeToString,
        ),
        'GetNNCConnections': grpc.unary_stream_rpc_method_handler(
            servicer.GetNNCConnections,
            request_deserializer=Case__pb2.CaseRequest.FromString,
            response_serializer=NNCProperties__pb2.NNCConnections.SerializeToString,
        ),
        'GetNNCValues': grpc.unary_stream_rpc_method_handler(
            servicer.GetNNCValues,
            request_deserializer=NNCProperties__pb2.NNCValuesRequest.FromString,
            response_serializer=NNCProperties__pb2.NNCValues.SerializeToString,
        ),
        'SetNNCValues': grpc.stream_unary_rpc_method_handler(
            servicer.SetNNCValues,
            request_deserializer=NNCProperties__pb2.NNCValuesChunk.FromString,
            response_serializer=Definitions__pb2.ClientToServerStreamReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'rips.NNCProperties', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
