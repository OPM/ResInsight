var relearn_searchindex = [
  {
    "breadcrumb": "ResInsight \u003e Getting Started",
    "content": "User Interface ResInsight has two main windows, one for 3D related visualizations and one for 2D graphs and plots.\n3D Main Window Plot Main Window Switching Between the Two Main Windows The two main windows has a toolbar button each, that directly opens and raises the other window. Each of the windows can also be closed freely, but if both are closed, ResInsight exits.\nDocking Windows Each of the main windows has a central area and several docking windows surrounding it. The different docking windows can be managed from the Windows menu or directly using the local menu bar of the docking window.\nProject Tree – contains all application objects in a tree structure. Property Editor – displays all properties for the selected object in the Project Tree Process Monitor – displays output from Octave when executing Octave scripts Result Info – displays info for the selected object in the 3D scene Result Plot – displays curves based on result values for the selected cells in the 3D scene Messages – displays occasional info and warnings related to operations executed. Result Info and Result Plot is described in detail in Result Inspection Note\rUse several Project Trees and Property Editors: If you want to pin the property editor for a certain object, you can add a new Project Tree and Property Editor by using the command Windows-\u003eNew Project and Property View.\nToolbars A selected subset of actions are presented as controls in the toolbar. The different sections in the toolbar can be dragged and positioned anywhere as small floating toolbars. Management of the toolbar is done by right-clicking on the toolbar and then manipulating the displayed menu.\nManaging 3D Views and Plot Windows In the main area of the application, several 3D views or plot windows can be open at the same time. One of them will be active and the active view can be either maximized to use the whole main area, or restored so that you can see the open windows.\nStandard window management for applying minimized, normal and maximized state is available in the upper right corner.\nCommands to arrange the windows in the standard ways are available from the Windows menu\nTile Windows – distribute all open view windows to fill available view widget space The order of the tiled windows are determined by the window positions and the type of view at the time of running the tile command. The leftmost window are tiled first, then the next leftmost and so on. Master views are tiled before slave views. Cascade Windows – organize all open view windows slightly offset on top of each other Close All Windows – close all open view windows Editing 3D Views and Plot Windows Content Most of the settings and features of ResInsight is accessible through the Project Tree and the Property Editor. Selecting an item in the Project Tree activates the corresponding Window, and shows the item properties in the Property Editor available for editing.\nToggling a checkbox next to an item in the Project Tree will toggle visibility in the window. Toggling a checkbox for a collection of items will affect the visibility for all items in the collection . Right-click menu commands are also available to do special operations on a selected set of items.\nResInsight stores all views and settings in a Project File to easily continue the work in a subsequent session.\nModel Navigation describes how to interact and manipulate the 3D model.\nCases and Their Types A Case in ResInsight means a Grid model with a particular set of results or property data. There are three different types of Eclipse cases and one type of Geomechanical cases.\nEclipse Cases The following Eclipse cases can be imported into ResInsight via the File-\u003eImport-\u003eEclipse Cases menu, see Import Eclipse Cases:\nResult Case This is a Case based on the results of an Eclipse simulation, read from a grid file together with static and restart data. Multiple Cases can be selected and read from a folder.\nInput Case This Case type is based on a *.GRDECL file, or a part of an Eclipse Input file. This Case type supports loading single ASCII files defining Eclipse Cell Properties, and also to export modified property sets to ASCII files. Each of the Eclipse properties are listed as separate entities in the Project Tree, and can be renamed and exported. See Grid Import and Property Export Statistics Case This is a Case type that belongs to a Grid Case Group and makes statistical calculations based on the source cases in the Grid Case Group. See Grid Case Groups and Statistics .\nSummary Case This is the case type listed in the Plot Main Window, and represents an *.SMSPEC file. These Cases are available for Summary Plotting. See Summary Plots .\nGeomechanical cases There are only one type of geomechanical cases, namely the ABAQUS-odb case type. When ResInsight is compiled with ABAQUS-odb support, *.odb files can be imported by selecting the menu item: File-\u003eImport-\u003eGeo Mechanical Cases-\u003e Import Geo Mechanical Model.\nThe geomechanical cases are sorted into its own folder in the project tree named Geomechanical Models as opposed to the Grid Models folder where the Eclipse cases and Grid Case Groups resides.\nSee Build Instructions on how to compile ResInsight with odb-support.\nGrid Case Groups A Grid Case Group is a group of Eclipse Result Cases with identical grids, but generally different active cells, initial values and results. These cases are called Source Cases. The purpose of a Grid Case group is to make it easy to calculate statistics across the source cases both for static and dynamic Eclipse Properties. See Grid Case Groups and Statistics .",
    "description": "User Interface ResInsight has two main windows, one for 3D related visualizations and one for 2D graphs and plots.\n3D Main Window Plot Main Window Switching Between the Two Main Windows The two main windows has a toolbar button each, that directly opens and raises the other window.",
    "tags": [],
    "title": "Overview",
    "uri": "/getting-started/overview/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Getting Started",
    "content": "As described in Overview, ResInsight has two main windows, one for 3D related visualizations and one for 2D graphs and plots. The content and appearance of displayed information is managed and controlled by the Project Tree and the Plots windows. Some of their general functionality is described and exemplified below.\nMultiple selection and collective actions Multiple selection of items in ResInsight offers an entrance to powerful combinations and collective actions. To exemplify, consider the plot of Bottom Hole Pressure for a number of wells atop this page. By multi-selection in Plots, you may for instance change the color of multiple curves as shown below.\nSeveral options are available for multi selection of items which can be used in combination for efficiency and convenience:\nCtrl + left mouse button for selecting individual items Shift + left mouse button for selecting a range of consecutive items Item right-click menu: offers context sensitive actions, e.g.: Sub Items On: select all sub-items of an item Sub Items Off: deselect all sub-items of an item Toggle Sub Items: deselect previously selected sub-items and select previously not selected sub-items On - Others Off: Turns on selected plot and turns off all other plots Context sensitive help ResInsight offers context sensitive help for any item in project tree. Most convenient is just to press the F1 help key for any selected item. Alternatively, you may right-click an item and invoke menu item Search Help For.",
    "description": "As described in Overview, ResInsight has two main windows, one for 3D related visualizations and one for 2D graphs and plots. The content and appearance of displayed information is managed and controlled by the Project Tree and the Plots windows. Some of their general functionality is described and exemplified below.\nMultiple selection and collective actions Multiple selection of items in ResInsight offers an entrance to powerful combinations and collective actions. To exemplify, consider the plot of Bottom Hole Pressure for a number of wells atop this page. By multi-selection in Plots, you may for instance change the color of multiple curves as shown below.",
    "tags": [],
    "title": "Project Tree",
    "uri": "/getting-started/projecttree/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "Installation See the following for common install procedures and options:\nLinux Installation Windows Installation Release Notes Sign up to be notified of new releases For the complete list of releases and updates, please visit ResInsight on Github.",
    "description": "Installation See the following for common install procedures and options:\nLinux Installation Windows Installation Release Notes Sign up to be notified of new releases For the complete list of releases and updates, please visit ResInsight on Github.",
    "tags": [],
    "title": "Releases",
    "uri": "/releases/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "3D Views are the windows displaying the Grid Models. The visualization is controlled by the Project Tree item representing the View and their sub items.\nEach item has a set of properties that can be edited in the Property Editor.\nSeveral views can be added to the same case by right-clicking the case or a view and select New View. You can also Copy and then Paste a view into a Case. All the settings are then copied to the new view.\nViews of Eclipse models and Geomechanical models has a lot in common, but Eclipse views has some features that applies to Eclipse simulations only.\nCommon view features View properties Grid appearance can be controlled from the Property Editor when a view is selected. This includes background color and z scaling. In addition, cell visibility controls of inactive and invalid cells.\nVisibility of the grid box with labels displaying the coordinates for the reservoir can also be controlled using Show Grid Box.\nCell Result The Cell Result item defines which Eclipse or Geomechanical property the 3D View uses for the main cell color. The property can be chosen in the property panel of the Cell Result item. The mapping between cell values and color is defined by the Legend Definition\ralong with some appearance settings on the Legend itself. (Number format etc.)\nPlease refer to Result Color Legend for details.\nRange Filters and Property Filters In order to see different sets of cells, and cells inside the reservoir, Views use cell filters. Please refer to Cell Filters to read more about them.\nInfo Box The Info Box controls the visibility of the animation progress, the Case description box, and the results histogram displayed in the top right corner of the view.\nThe Animation Progress shows which time step you are viewing.\nThe Info Text shows general info about the case, the selected results, and some statistics. Mobile Volume Weighted Mean is the mean of the current Cell Property weighted by the Mobile pore volume. Mobile pore volume is defined in every cell as: MULTPV * PORV(1-SWCR). If MULTPV data is not present, it is ignored in the equation. The same applies to SWCR data.\nThe Histogram shows a histogram of the complete time series of the currently loaded Cell Result together with:\nThe mean value ( a blue line ) P10 and P90 ( red lines ) Statistics Options Statistics Time Range – controls whether all time steps or only the current time step are included when statistics is computed. Flow Diagnostic results can only use the current time step option. Statistics Cell Range – controls if visible cells or all active cells is included when statistics is computed. Note\rThe Info Box settings can be activated by clicking on the Info Text in the 3D view.\nGrids The Grids node contains child nodes for Main Grid, LGRs and Temporary LGRs where each grid’s visibilty can be controlled. The LGRs node contains all LGRs loaded from file, while Temporary LGRs contains all temporary LGRs (see Completions LGR). Toggling Grids off will hide all grids cell geometry. This option is used to display geometry for faults and intersections. This feature is also available as a toolbutton called Hide grid cells.\nIntersections Intersections are used to cut the geometry and show result values mapped onto this geometry. Please refer to Intersections for details.\nActivate items by clicking Selected overlay items in the 3D view can activate a corresponding item in the Property Editor. This is implemented for Info box and result color legends. Please note that this feature is activated by clicking inside the texture/colored part of the legend.\nEclipse features Change Data Source for View A view is usually located in the Views folder below the Eclipse case. If you create a view in the top level Views folder, it is possible to switch the case the view is connected to. Views created in a Grid Case Ensemble has the same property, making it easy to quickly navigate between the different cases in an ensemble.\nIf you need to keep individual view settings for each case, the rotation and zoom can be stored using the option Store View Settings for Case.\nCell Edge Results The Cell Edge Result visualization mode is one of ResInsight’s special features. Its main use is to show the MULT(X, Y, Z) properties at the same time. This will show the MULT property values different from 1.0 along the correct edges of the cells. In effect this highlights the faults and makes it easy to verify all the MULT values in one go.\nResInsight supports all properties ending with X, Y, Z and X-, Y-, Z-. However, it is only the MULT property that ignores values of 1.0.\nWhen selecting a result variable for cell edge, a second legend shows up in the 3D view showing the variation in values for this second property. Color legend management is available when selecting the Legend Definition item belonging to the Cell Edge Result item.\nSelect Custom Edge Result to specify one cell result to be mapped onto all cell edges. This way two cell results can easily be compared and visualized in the same view. The Custom Edge Result can either be a static or dynamic result.\nSeparate Fault Result Default result mapping on faults is using the result specified in Cell Result. If a different result mapping is wanted, enable the checkbox and select the result from the result selection dialog in the Property Editor. A second legend for the fault result is added to the view.\nSimulation Wells This item controls the visualization of the Eclipse simulation wells. Please refer to Simulation Wells to read more.\nWell Connection Factors This item controls the visualization of well connection factors. See Visualization and Inspection of Well Connection Factors for details.\nFractures This item controls the visualization of fractures. See Fractures for details.\nFaults Visualization of the faults in the model is controlled by this item. Please refer to Faults to read more.",
    "description": "3D Views are the windows displaying the Grid Models. The visualization is controlled by the Project Tree item representing the View and their sub items.\nEach item has a set of properties that can be edited in the Property Editor.\nSeveral views can be added to the same case by right-clicking the case or a view and select New View. You can also Copy and then Paste a view into a Case. All the settings are then copied to the new view.",
    "tags": [],
    "title": "3D Views",
    "uri": "/3d-main-window/3dviews/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data",
    "content": "Two similar calculators use expressions, summary curve calculator and grid cell calculator. These two variants share the text parsing for calculator expressions.\nGrid Property Calculator\nSummary Curve Calculator\nResInsight supports a subset of the features supported in the exprtk parsing library. Scripting features like for/while loops are not supported. The full documentation for the expression parser is available at C++ Mathematical Expression Toolkit Library\nOperators and Functions Possible operations and functions are found by right-clicking in the expression window.\nComment lines Create a comment line by prefixing with // or ##\n// Valid comment line 2\r## Valid comment line 1\rAssignment Operators OPERATOR DEFINITION := Assignment ## Example\rMY_VARIABLE := b + c\rBasic Operators OPERATOR DEFINITION + Addition - Subtraction * Multiplication / Division % Modulus ^ Power ## Example\ra := (b * c) + d / 10.5\rConditionals if-then-else statements can be used to assign values based on the individual values in a vector. The following case will assign 0.01 if the TRANX is below 0.01, else copy the original TRANX value.\n## Example\rNEW_TRANX := if((TRANX \u003c 0.01), 0.01, TRANX)\rScalar Functions FUNCTION DEFINITION avg Average max Maximum min Minimum sum Sum ## Example: Use the accumulated sum for all PORV values to compute the normalized PORV\rNORMALIZED_PORV := x/sum(PORV)\rTrigonometry Functions FUNCTION DEFINITION acos Arc cosine (in radians) acosh Inverse hyperbolic cosine (in radians) asin Arc sine (in radians) asinh Inverse hyperbolic sine (in radians) atan Arc tangent (in radians) atanh Inverse hyperbolic tangent (in radians) cos Cosine cosh Hyperbolic cosine cot Cotangent csc Cosecant deg2rad Convert x from degrees to radians deg2grad Convert x from degrees to radians rad2deg Convert x from radians to degrees grad2deg Convert x from radians to degrees sec Secant sin Sine sinc Sine cardinal sinh Hyperbolic sine tan Tangent tanh Hyperbolic tangent Vector Functions FUNCTION DEFINITION abs Absolute value ceil Rounding up floor Rounding down frac Fractional portion of input log Natural logarithm log10 Base 10 logarithm pow Power round Round x to the nearest integer sgn Sign of x, -1 where x \u003c 0, +1 where x \u003e 0, else zero sqrt Square root trunc Integer portion of input",
    "description": "Two similar calculators use expressions, summary curve calculator and grid cell calculator. These two variants share the text parsing for calculator expressions.\nGrid Property Calculator\nSummary Curve Calculator\nResInsight supports a subset of the features supported in the exprtk parsing library. Scripting features like for/while loops are not supported. The full documentation for the expression parser is available at C++ Mathematical Expression Toolkit Library",
    "tags": [],
    "title": "Calculator Expressions",
    "uri": "/calculated-data/calculatorexpressions/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Configuration of cloud services is described in Cloud Services - Authorization.\nSummary Ensembles from SUMO Summary ensemble data can be accessed from SUMO. ResInsight will store the required information to the data source, and fetch data from the cloud during project import.\nSelect Cloud Data, this will show available fields with cases in the Data Source Property Editor Select Field and Case, and a list of available ensembles are displayed Select Ensembles and push Add Ensembles. This operation creates a cloud ensemble data source and a summary plot connected to this data source. Use the button Add Data Sources if you want to avoid creation of summary plots Example of summary ensembles Example of summary plot with SUMO data Well Paths from OSDU From the right-click menu of Wells, select Import Well Paths from OSDU. A wizard will be displayed where field and well can be selected for import.\nThe imported well path will store required information to the location in OSDU, and the well path trajectory will be fethed during project import.\nExample of well paths from OSDU",
    "description": "Configuration of cloud services is described in Cloud Services - Authorization.\nSummary Ensembles from SUMO Summary ensemble data can be accessed from SUMO. ResInsight will store the required information to the data source, and fetch data from the cloud during project import.\nSelect Cloud Data, this will show available fields with cases in the Data Source Property Editor Select Field and Case, and a list of available ensembles are displayed Select Ensembles and push Add Ensembles. This operation creates a cloud ensemble data source and a summary plot connected to this data source. Use the button Add Data Sources if you want to avoid creation of summary plots Example of summary ensembles",
    "tags": [],
    "title": "Cloud Services",
    "uri": "/import/cloudservices/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Authorization Currently supported cloud services use OAuth 2.0, the industry-standerd protocol for authentication. The first time a user initiates data from a cloud service, a browser window will appear for the user to enter username/password followed by additional two-factor authentication. A text string usually called a token is created, containing the access and authorization information required to access the cloud data source. This token is cached by ResInsight in the .resinsight folder in your home folder. A token is by default valid for several days.\nIf you experience issues with connection to cloud data, the local cached tokens can be deleted. The next time you access to cloud services, a brower window for authentication is displayed.\nUse of cloud services is supported on both Windows and Linux.\nhttps://auth0.com/intro-to-iam/what-is-oauth-2\nConfiguration The configuration settings for cloud services can be seen in Preferences-\u003eImport/Export. The settings can be loaded from a JSON file in your home folder or on a shared folder on the file system.\nhome_folder/.resinsight/osdu_config.json\rhome_folder/.resinsight/sumo_config.json\rlocation_of_executable/../share/cloud_services/osdu_config.json\rlocation_of_executable/../share/cloud_services/osdu_config.json",
    "description": "Authorization Currently supported cloud services use OAuth 2.0, the industry-standerd protocol for authentication. The first time a user initiates data from a cloud service, a browser window will appear for the user to enter username/password followed by additional two-factor authentication. A text string usually called a token is created, containing the access and authorization information required to access the cloud data source. This token is cached by ResInsight in the .resinsight folder in your home folder. A token is by default valid for several days.",
    "tags": [],
    "title": "Cloud Services - Authorization",
    "uri": "/import/cloudservicesauthorization/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "ResInsight supports the following type of Eclipse input data:\n*.GRID and *.EGRID files along with their *.INIT and restart files *.XNNN and *.UNRST. Grid and Property data from *.GRDECL files. Note\rRelease 2018.11 supports import of simulations from Intersect. To be able to import into ResInsight, the Intersect simulation must be exported into Eclipse file format.\nEclipse Results ResInsight offers several ways to import Eclipse (grid) files. Use one of the following commands in the File-\u003eImport-\u003eEclipse Cases menu:\nImport Eclipse Case: Brings up the standard file selection dialog. Select *.EGRID or *.GRID Eclipse files for import. Multiple selections are allowed. Import Eclipse Cases Recursively: Brings up the recursive file selection dialog. This dialog is described in detail on the Summary Plots page. Import Eclipse Case (Time Step Filtered): See description Import Input Eclipse Case: See description Create Grid Case Group : Import a set of Eclipse files and places the cases in a grid case group See File Selection Dialog for how to import multiple files. All cases must have identical IJK to be part of a grid case group. Create Grid Case Ensemble : Import a set of Eclipse files and places the cases in a grid case ensemble. The grid models can have varying IJK resolution. If you have identical IJK for all cases, consider uting a Grid Case Group for reduced memory usage and improved performance. Changing the grid case a view is connected to is described in 3D Views\nThe Reload Case command can be used to reload a previously imported case, to make sure it is up to date. This is useful if the grid or result files changes while a ResInsight session is active.\nNote\rYou can select several grid files in one go by multiple selection of files (Ctrl + left mouse button, Shift + left mouse button).\nResult Index File If enabled, ResInsight will generate an index file when reading the eclipse result files for the first time. This file will significantly reduce the time used to open the case next time. The file is named \u003ccasename\u003e.RESINSIGHT_IDX See Preferences: Behavior When Loading Data\nTime Step Filtered Eclipse Result Some Eclipse files have an enormous amount of time steps. If only a selection of the time steps really are needed for the session, the time steps can be filtered before loading. This can possibly speed up the import a great deal. Filtering can be done in the following way.\nSelect File-\u003eImport-\u003eEclipse Cases-\u003e Import Eclipse Case (Time Step Filtered) and select an *.EGRID or *.GRID Eclipse file for import. A dialog will appear.\nFiltering can be done by adjusting the following parameters:\nFirst and last time step Step filter type and with step interval size First and last time step to include in the import can be chosen in their respective drop down list. All time steps found in the file are included in both lists.\nFilter Type is set to All by default. This means that all time steps between the first and last chosen time step will be imported. The alternative to All is to skip time steps in a number of Days, Weeks, Months, Quarters or Years. The skipping interval is set in the text field below. After editing the Interval field, press tab to update the Filtered Time Steps preview, or click anywhere in the dialog. Click Ok to import when the filter is ready.\nFiltering can also be done after import, in a case’s Property Window.\nAfter clicking Reload Case, the time steps in the toolbar will be updated.\nEclipse ASCII Input Data Select File-\u003eImport-\u003eEclipse Cases-\u003e Import Input Eclipse Case and select a *.GRDECL file. The case is imported, and a view of the case is created Right-click the Input Properties in the generated Input Case and use the right-click menu to import additional Eclipse Property data files. Appending additional properties to a binary case If a binary or text Eclipse case is loaded, additional properties can be appended to this binary case. Make sure that the number of values in the GRDECL file matches the total number of cells in the binary case.\nAppending Additional Properties\nFor export of currently selected cell result values to text file, see Export: Eclipse Properties\nHandling Missing or Wrong MAPAXES The X and Y grid data can be negated in order to make the Grid model appear correctly in ResInsight. This functionality is accessible in the Property Editor for all Eclipse Case types as the toggle buttons Flip X Axis and Flip Y Axis as shown in the example below.",
    "description": "ResInsight supports the following type of Eclipse input data:\n*.GRID and *.EGRID files along with their *.INIT and restart files *.XNNN and *.UNRST. Grid and Property data from *.GRDECL files. Note\rRelease 2018.11 supports import of simulations from Intersect. To be able to import into ResInsight, the Intersect simulation must be exported into Eclipse file format.\nEclipse Results ResInsight offers several ways to import Eclipse (grid) files. Use one of the following commands in the File-\u003eImport-\u003eEclipse Cases menu:",
    "tags": [],
    "title": "Eclipse Cases",
    "uri": "/import/eclipsecases/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Summary data can be imported as a single summary file or an ensemble of summary files.\nBasic Summary Import Summary data is located in two files, summary vector names in *.SMSPEC and curve data in *.UNSMRY.\nFor import of ensemble datasets, see Ensemble File Dialog.\nOrigin Files During summary file import, ResInsight checks whether the summary file is restarted, i.e. has an origin file. If an origin file is found, the Origin Files dialog is displayed.\nDepending on what triggered the summary file import, the dialog shows slightly different information. If the summary file import was triggered by a grid file import, the dialog displays information about grid files in addition to the summary origin file(s). If the summary file was imported directly, information about grid files are not relevant and thus not displayed.\nThe dialog contents are organized in groups:\nCurrent Grid and Summary Files or Current Summary Files: This group displays the name of the main summary file to import. If the import is triggered by a grid file import, the name of the grid file is also displayed. Origin Summary Files: This group displays the names of the origin summary file(s) found. If there are more than one file listed, it means that the found origin file also has an origin file. ResInsight will search the “chain” of summary origin files until it reaches the end. Import Options There are three options to control how origin summary file are imported Unified: The main summary files and all origin files are imported into one single summary case Separate Cases: The main files and all origin files are imported into separate summary cases Skip: Only the main summary file is imported. The origin summary files are skipped. Origin Grid Files: If the summary file import was triggered by a grid file import, this group is visible. It contains a list of the grid files associated to the origin summary files Import Options There are two options to control how the grid files are imported Separate Cases: All “origin” grid files are imported into separate grid cases Skip: Only the main grid file is imported. The “origin” grid files are skipped. By default the file names are displayed using relative path based on the common root folder for all files. In order to display the full path, check the Show full paths checkbox. Regardless of the checkbox state, there is always a tooltip showing the full path for every file. It is also possible to copy a full path file name to the clipboard. Right click on the file name and select Copy file name.\nIf the user selected multiple summary files or grid files, this dialog will be displayed for every file that has an origin summary file. In this case the button OK to All appears. When this button is clicked, the rest of the files will be imported silently using the same options.\nNaming The name of a summary case can be changed by interactive edit of the name in the Project Tree (by clicking or using F2) or selecting the summary case in the Property Editor and edit the name.\nSummary Data File Formats ResInsight is able to import summary data in several file formats. Default exported by Eclipse is *.SMSPEC/.UNSMRY.\nFor best performance, consider using the ESMRY File Format.\nSMSPEC/UNSMRY File Format Eclipse will by default export summary data to *.SMSPEC and *.UNSMRY. Data is organized by simulation time step and extraction of data for one summary vector can be time consuming for large data sets.\nESMRY File Format *.ESMRY files contains the same data as SMSPEC/UNSMRY. The data in these files are organized in a different way that will give significantly better performance when accessing single summary vectors compared to SMSPEC/UNSMRY.\nResInsight will by default use this file format.\nh5 File Format Eclipse is able to produce summary data in a file format with the extension *.H5 with the same content as *.UNSMRY.",
    "description": "Summary data can be imported as a single summary file or an ensemble of summary files.\nBasic Summary Import Summary data is located in two files, summary vector names in *.SMSPEC and curve data in *.UNSMRY.\nFor import of ensemble datasets, see Ensemble File Dialog.\nOrigin Files During summary file import, ResInsight checks whether the summary file is restarted, i.e. has an origin file. If an origin file is found, the Origin Files dialog is displayed.",
    "tags": [],
    "title": "Eclipse Summary Data",
    "uri": "/import/eclipsesummarydata/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Ensemble File Import When using the standard file selection dialog, the user is limited to select files in one directory only. If the interesting files are distributed over multiple directories, the dialog has to be opened once for each directory. The recursive file selection dialog is created to circumvent this limitation. This dialog is able to search a directory tree for files matching a specified pattern.\nNote\rThis dialog is used for import of different file types like *.EGRID, *.SMSPEC, *.TS, *.GRDECL, …\nThe dialog consists of the following fields:\nPath Pattern: The path filter uses normal wildcard file globbing, like in any unix shell. When the filter ends with a single “**” (eg. “/home/*”), however, ResInsight will search recursively in all subdirectories from that point. This is indicated by “…” in the Effective Filter label below. File Pattern: The search pattern that applies to the file name. * Matches any number of any characters except the path separator ? Matches one character exception the directory separator [abc] Matches one of the specified characters. Ex. a, b or c *[!D] Exclude files ending with the character ‘D’ (file extension is not considered) File Type: The available file types will depend on the type of data to import. When importing summary data, there will be several items, and one with SMSPEC. File Extensions: List of file extensions, ie “.EGRID .GRID”. The extension text is independent to the file type defined above, e.g. CSV data can be imported from a file with extension “TXT” Use ‘realization-*’ in filter : Replace the text “realization-12” with “realization-*” Ensemble grouping : Group ensemble by Main folder or Sub Folder (Used by FMU workflow) Effective Filter: The effective filter displays the resulting full path search pattern. It is updated on the fly as the user edits the pattern fields. A text string of “…” indicates a complete recursive directory search. Ensemble File Structure Multiple summary files defining an ensemble can be organized differently in folders. ResInsight support two different modes, Sub Folder and Main Folder.\nSub Folder Example folder structure\nreal-1/case-1\r/case-2\rreal-2/case-1\r/case-2\rreal-3/case-1\r/case-2\rUsing the option Group By Sub Folder will identify case-1 and case-2 as the ensemble names. This folder structure is used by the FMU workflow.\nMain Folder Example folder structure\ncase-1/real-1\rcase-1/real-2\rcase-1/real-3\rcase-2/real-1\rcase-2/real-2\rcase-2/real-3\rUsing the option Group By Main Folder will identify case-1 and case-2 as the ensemble names. This folder structure is used by the Everest workflow.\nAfter pressing the Find button, a file search is performed in the root directory and the directories below matching the path pattern. The files found are presented in a list, where the user can check/uncheck each file individually.\nWhen the OK button is pressed, all checked files are imported.\nExamples of Use of Ensemble Import Dialog Ensemble Surface\nEnsemble Summary",
    "description": "Ensemble File Import When using the standard file selection dialog, the user is limited to select files in one directory only. If the interesting files are distributed over multiple directories, the dialog has to be opened once for each directory. The recursive file selection dialog is created to circumvent this limitation. This dialog is able to search a directory tree for files matching a specified pattern.\nNote\rThis dialog is used for import of different file types like *.EGRID, *.SMSPEC, *.TS, *.GRDECL, …",
    "tags": [],
    "title": "Ensemble File Dialog",
    "uri": "/import/ensemblefiledialog/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight is a powerful open source, cross-platform 3D visualization, curve plotting, and post processing tool for reservoir models and simulations. This chapter provides an overview of its functionality and installation.\nResInsight Documentation Overview resinsight.org - Documentation for latest stable release api.resinsight.org - Documentation of Python API beta.resinsight.org - Latest documentation (not yet released) https://github.com/CeetronSolutions/resinsight-tutorials - Tutorials and Examples",
    "description": "ResInsight is a powerful open source, cross-platform 3D visualization, curve plotting, and post processing tool for reservoir models and simulations. This chapter provides an overview of its functionality and installation.\nResInsight Documentation Overview resinsight.org - Documentation for latest stable release api.resinsight.org - Documentation of Python API beta.resinsight.org - Latest documentation (not yet released) https://github.com/CeetronSolutions/resinsight-tutorials - Tutorials and Examples",
    "tags": [],
    "title": "Getting Started",
    "uri": "/getting-started/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data",
    "content": "ResInsight offers a built-in property calculator for grid parameters. The Grid Property Calculator enables arithmetic expressions to be parsed and calculated for visualization purposes. The expression can be applied to one or multiple grid models, and the expression text can be stored to a file for later use.",
    "description": "ResInsight offers a built-in property calculator for grid parameters. The Grid Property Calculator enables arithmetic expressions to be parsed and calculated for visualization purposes. The expression can be applied to one or multiple grid models, and the expression text can be stored to a file for later use.",
    "tags": [],
    "title": "Grid Property Calculator",
    "uri": "/calculated-data/grid-property-calculations/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases",
    "content": "Install From Binary Packages on Linux Info\rPlease not that the distribution by the OPM Project will be updated some time after the release of a new version on GitHub.\nUbuntu On the command line do:\nsudo apt-get update\rsudo apt-get install software-properties-common\rsudo apt-add-repository ppa:opm/ppa\rsudo apt-get update\rsudo apt-get install resinsight\rsudo apt-get install octave-resinsight\rLaunch the application using the command ResInsight\nInfo\rFor further installation details, see the ResInsight distribution on Opm Project Downloading and Installing.\nInfo\rThe binary distributions does not support ABAQUS odb files. For building ResInsight with ABAQUS support, see Build Instructions.\nCustom Qt configuration If you are using a version of Qt that is not available in system path, you need to do the following to make runtime Qt paths available to ResInsight\nexport LD_LIBRARY_PATH=/path_to_qt\rexport QT_PLUGIN_PATH=/path_to_qt/plugins:$QT_PLUGIN_PATH\rDisplay Menu Icons in GNOME (Optional) By default, icons are not visible in menus in the GNOME desktop environment. ResInsight has icons for many menu items, and icons can be set visible by issuing the following commands (Tested on RHEL6) :\ngconftool-2 --type boolean --set /desktop/gnome/interface/buttons_have_icons true gconftool-2 --type boolean --set /desktop/gnome/interface/menus_have_icons true\rThis fix was taken from reply number 11 in this thread\nSetup Octave Interface (optional) Install Octave directly from the package manager in Linux. See the documentation for your particular distribution. Launch ResInsight, open Edit-\u003ePreferences Enter the path to the Octave command line interpreter executable octave-cli Workaround for crash using Virtual Box Uncheck Settings-\u003eDisplay-\u003eEnable 3D Acceleration. Disabling this option will cause OpenGL operations to be executed in software, so the the performance of graphics operations in ResInsight will be slower, but will not crash.\nHere is a pointer addressing the issue with Virtual Box, this is not testes by us:\nhttps://superuser.com/questions/541537/how-to-solve-issues-with-shader-model-in-virtualbox",
    "description": "Install From Binary Packages on Linux Info\rPlease not that the distribution by the OPM Project will be updated some time after the release of a new version on GitHub.\nUbuntu On the command line do:\nsudo apt-get update\rsudo apt-get install software-properties-common\rsudo apt-add-repository ppa:opm/ppa\rsudo apt-get update\rsudo apt-get install resinsight\rsudo apt-get install octave-resinsight\rLaunch the application using the command ResInsight",
    "tags": [],
    "title": "Linux Installation",
    "uri": "/releases/linux-installation/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "In this section the different settings that controls the default behavior of ResInsight is described. These settings can be controlled using the Preferences dialog available from the Edit -\u003e Preferences menu. Preferences are not stored in project files, but in a platform specific way for each user. Essential preferences are listed below.\nGeneral When changing the preferences, any default color, font or Z-scale Factor that has not been changed by the user in the various views, will be applied immediately. If the user has changed font sizes in specific plots or annotations from the default value, ResInsight will ask if the user wants the new defaults applied to all existing views and plots even where custom settings have been set.\nDefault Colors: This group contains the colors that will be applied to the 3D views:\nViewer Background Mesh Color Mesh Color Along Faults Well Label Color Default Font Sizes: This group contains fonts preferences when using ResInsight:\nViewer Font Size – The fonts used for axes labels, legends and info boxes in the 3d View. Annotation Font Size – The font used as default for Text Annotations. Well Label Font Size – The font used for all Well Path labels. Plot Font Size - The font used for plot legends, axes, and labels. 3D Views: This group of options controls visual settings to be used when creating new views:\nShow Grid Lines – Controls whether to show the grid lines by default for all cells or just along faults. Navigation mode – Defines the use of mouse for interaction with 3D model, c.f. Model Navigation. Default Z Scale Factor – Default depth scale for grid models. Show Box around Legends – Create a semi-transparent box containing each legend in the 3D Views. Enable Faults by Default – Controls default visibility of faults in views Show Info Box in New Projects – Controls default visibility Info Box in upper right corner Show Grid Box in New Projects – Controls default visibility of grid box Grid Behaviour When Loading Data\nCompute DEPTH Related Properties – If not present, compute DEPTH, DX, DY, DZ, TOP, BOTTOM when loading new cases. Load and Show SOIL – Control if SOIL is loaded and applied to grid per default. Fault Import\nImport Faults – Controls import of Faults. Include Inactive Cells in Fault Geometry – Controls display of inactive cells in Fault Geometry. Include File Absolute Path Prefix – Windows platform: Additional prefix used when searching for files on the file system. The prefix is used when searching for keywords like FAULTS and EQUIL. Well Import\nSkip Import of Simulation Well Data – Disable import of simulation well data for reducing case import time. Import Advanced MSW Data Model Reader\nSelect between ResData and opm-common Summary Origin Files: c.f. Origin Files for details. Summary Data Import including file format for summary data import, c.f. Ensemble Summary: ESMRY (opm-common) Import data from ESMRY files UNSMRY (resdata) Import data from native UNSMRY files h5 (HDF5) Import data from h5 files Plotting Summary Plots:\nCreate Plot On Summary Data Import: governs automatic creation of summary plots when importing a summary case No Plots: do not automatically create summary plots Use Data Vector Names: Create summary plots automatically based on given vector names, e.g. FOPT WOPT* Use Plot Templates: Create summary plots automatically based on default templates. Cross Plot Addresses: List of vector pairs defining cross plot curves separated by semicolon. If a well or group is selected, the corresponding well or group address is displayed and used. Default Curve Style for History Vectors: allows specifying symbols and/or lines as preference. Append History Vectors: automatically include the corresponding history vector when appending a simulated summary vector. Curve Color By Phase: distinguish each phase by separate color. Multi Plot Defaults: specification of number of rows and columns for each page containing multiple summary plots.\nPlot Templates: specification of folders and folder search depth for templates.\nPress Append to browse for folder to append. Specify Maximum Plot Template Folder Search Depth to restrict the depth of subdirectories to be searched for templates. General\nDate and Time format preferences. Page Setup: Physical page size, orientation, and margins. Note\rPlease consider the location and folders of your templates with care to cater for structured usage but also to limit the folder search depth for performance reasons.\nScripting Octave c.f. Octave Interface for details:\nOctave Executable Location – Define binary file location for Octave, usually without path on Linux and including path on Windows. Show text header when executing scripts – Enables the default output from octave when started. Python c.f. ResInsight Python API for details:\nEnable Python Script Server Show Python Debug Info Default Python Script Server Port Python Executable Location Script Files:\nShared Script Folder(s) – Defines the search paths for octave scripts Script Editor – The text editor to invoke when editing scripts Import/Export Cloud Services An authorization token is created and stored in your home folder for access to cloud services. If you experience issues with the cloud service, the token can be deleted using a button. The standard authentication dialog will be displayed the next time you try to access the related cloud service.\nCloud Services",
    "description": "In this section the different settings that controls the default behavior of ResInsight is described. These settings can be controlled using the Preferences dialog available from the Edit -\u003e Preferences menu. Preferences are not stored in project files, but in a platform specific way for each user. Essential preferences are listed below.\nGeneral When changing the preferences, any default color, font or Z-scale Factor that has not been changed by the user in the various views, will be applied immediately. If the user has changed font sizes in specific plots or annotations from the default value, ResInsight will ask if the user wants the new defaults applied to all existing views and plots even where custom settings have been set.",
    "tags": [],
    "title": "Preferences",
    "uri": "/misc/preferences/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "ResInsight supports the following type of ROFF input data:\n*.ROFF and *.ROFFASC containing data from RMS as Roxar Open File Format (ROFF) in binary or ascii format. Roff Data Roff Data can be imported from File-\u003eImport-\u003eRoff Grid Models-\u003eImport Roff Case menu. Select a grid file and additional files with properties in the import dialog. The grid will be displayed and used in the same way as an Eclipse grid model.\nOperations on 3D Grid Models",
    "description": "ResInsight supports the following type of ROFF input data:\n*.ROFF and *.ROFFASC containing data from RMS as Roxar Open File Format (ROFF) in binary or ascii format. Roff Data Roff Data can be imported from File-\u003eImport-\u003eRoff Grid Models-\u003eImport Roff Case menu. Select a grid file and additional files with properties in the import dialog. The grid will be displayed and used in the same way as an Eclipse grid model.",
    "tags": [],
    "title": "ROFF Grid Models",
    "uri": "/import/roffgridmodels/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "This section describes how wells defined in the simulation are displayed, and how to control the different aspects of their visualization.\nCommands Several commands are available as right-click commands on a simulation well. These commands are available either by right-clicking the well in the 3D View or in the Project Tree.\nNew Well Log Extraction Curve – Creates a new Well Log curve based on the selected simulation well, the current time step and cell property. ( See Well Log Plots ) New Well Log RFT Curve – Creates a new RFT curve in a well log plot based on the selected simulation well. This option is only present if the current simulation well has RFT data. ( See Well Log Plots ) New RFT Plot – See [Well Log Plots](/plot-window/rftplot/. Plot Production Rates – Creates a summary plot of the selected wells production rates, along with the bottom hole pressure.\n( See Summary Plots ) Plot Well Allocation – Creates or modifies the default Well Allocation Plot to show the well. allocation for the selected well. If the case has no Fluxes the well flow rates are shown instead.\n( See Flow Diagnostics Plots ) Show Contributing Wells – This command sets up a 3D View by adding filters and modifying the Cell Result based on Flow Diagnostic Calculations to show which regions and wells that contribute to the selected well by doing: Add a property filter of Time Of Flight to/from the selected well to show only the cells that contribute to/are influenced by the well. Sets the Cell Result to show Tracer With Max Fraction based on All Injectors or All Producers (the opposite of the selected well) Toggles the visibility of the other Simulation wells to show only wells contributing to/influenced by the selected well. New Fracture – Creates a new fracture along the simulation well. (See Fracture instances) New Intersection – creates a new intersection based on the selected simulation well.\n( See Well Log Plots ) Overall Settings for Simulation Wells The Property Panel of the Simulation Wells item in the Project Tree contains options that are applied across all the wells, while the visualization of each single well can be controlled by the options in the property panel of that particular well, and will override the overall settings in the Simulation Wells item.\nIf an option is overridden in any of the wells, this will be indicated in the corresponding top level toggle which will be partially checked. Toggling such a setting will overwrite the ones set on the individual level.\nIn the following are the different parts of the Simulation Wells property panel explained.\nVisibility These options controls the visibility of different aspects of the simulation wells.\nWells Trough Visible Cells Only – This option will only show wells with connections to cells deemed visible by the combined result of Range Filters and Property Filters. Label – Controls visibility of well name labels in the 3D View Well head – Controls visibility of the arrow displaying the production status of the well Pipe – A symbolic pipe can be drawn between the well connection cells to illustrate the well. This option controls the visibility of the pipes. Spheres – This option toggles the visibility of spheres drawn at the center of each well connection cell. Disks – Visualization of production and injection rates and cumulative production and injection with oil, gas, and water phases. Communication Lines – Toggles the visibility of well communication lines. These arrows shows the communication between wells. Broader arrows indicate higher level of communication. These arrows are based on Flow Diagnostics calculations, and are only available if the eclipse results includes fluxes. Arrows representing communication in the opposite direction from what is expected (eg. producers supporting another well due to cross flow) are displayed in a layer “under” the other arrows, to make them easier to see. Well Cells and Fence Show Well Cells – This option toggles whether to add the well connection cells to the set of visible cells. If no cell filters are active, toggling this option will conveniently hide all other cells, displaying only the requested well cells. Show Well Cell Fence – This options toggles whether to add all cells in a given direction ( I, J or K) to the set of visible cells, which has a connecting cell within its set. Well Fence direction – Controls whether to add extensions of the well cells in the I, J or K direction to the set of visible cells Size Scaling Well Head Scale – Scales the arrow displaying the production status of the well Pipe Radius Scale – Scaling the pipe radius by the average i,j cell size. Sphere Radius Scale – Scaling connection cell spheres radius by the average i,j cell size. Open Simulation Wells will be drawn with a slightly larger radius than closed wells. This makes open wells easier to see when they occupy the same cells as closed ones.\nColors Color Pipe Connections – Applies a red, green, blue or gray color to the section of the pipe touching a connection cell indicating the production status of the connection. Gas injection, oil production, water injection or closed respectively. Label Color – Sets the well label color in the 3D view. Individual Pipe Colors - Select how each pipe will be colored. The Individual Pipe Color setting has two different options:\nUnique Colors – Selecting this will apply unique colors from a pre-defined color palette to all the wells, overwriting the colors they had. Uniform Default Color – Selecting this will apply the same color (made available in the Uniform Well Color option to all simulation wells. Well Pipe Geometry Type – Controls whether the pipe will go from cell center to cell center or in a smoother trajectory. Branch Detection – Enables splitting of wells into branches based on the positions of the connection cells. This option applies to ordinary wells only and has no effect on multi segment wells (MSW). Advanced Well Cell Transparency – Controls the transparency level for the well cells. Well Head Position – Controls the depth position of the wellhead. Either relative to the top of the active cells in the relevant IJ-column, or relative to the highest active cell overall. Disks Disks may be used to visualize production and injection rates and cumulative production and injection with oil, gas, and water phases shown in green, red, and blue, respectively. Optionally, the quantity of production and injection can be displayed.\nDisplay of Disks are enabled from Simulations Wells, c.f. figure below. Property Type defaults to predefined production and injection properties but also allows for selection of a single property. When showing Quantity Labels, it is often useful to also activate Show Label Background.\nIndividual Simulation Well options Each of the wells has a set of individual settings which corresponds to the setting on the global level. See the documentation of Overall Settings for Simulation Wells.\nExcept for the Size Scaling, these options will override the corresponding setting on the global level, and will result in a partially checked state on the corresponding toggle in the Simulation Wells property panel. The Size Scaling options, however, works relative to the scaling level set on the top level.\nWell Pipes of Multi Segment Wells ResInsight reads the MSW information in the result files and uses that to create a topologically correct visualization of the Multi Segment Well. Valves are visulized on the pipe geometry.\nReading this information is somewhat time consuming, and can be turned off in Preferences .\nGeometry Approximation If the import of MSW data is disabled, or MSW data is not present, the topology of the well is estimated. This feature works in most cases, but can generate invalid well geometry in some cases.\nPicking Reveals Segment/Branch Info Branch and segment info of a MSW-connected-Cell is shown in the Result Info window when picking a cell in the 3D View. This can be handy when relating the visualization to the input files.",
    "description": "This section describes how wells defined in the simulation are displayed, and how to control the different aspects of their visualization.\nCommands Several commands are available as right-click commands on a simulation well. These commands are available either by right-clicking the well in the 3D View or in the Project Tree.\nNew Well Log Extraction Curve – Creates a new Well Log curve based on the selected simulation well, the current time step and cell property. ( See Well Log Plots ) New Well Log RFT Curve – Creates a new RFT curve in a well log plot based on the selected simulation well. This option is only present if the current simulation well has RFT data. ( See Well Log Plots ) New RFT Plot – See [Well Log Plots](/plot-window/rftplot/. Plot Production Rates – Creates a summary plot of the selected wells production rates, along with the bottom hole pressure.\n( See Summary Plots ) Plot Well Allocation – Creates or modifies the default Well Allocation Plot to show the well. allocation for the selected well. If the case has no Fluxes the well flow rates are shown instead.\n( See Flow Diagnostics Plots ) Show Contributing Wells – This command sets up a 3D View by adding filters and modifying the Cell Result based on Flow Diagnostic Calculations to show which regions and wells that contribute to the selected well by doing: Add a property filter of Time Of Flight to/from the selected well to show only the cells that contribute to/are influenced by the well. Sets the Cell Result to show Tracer With Max Fraction based on All Injectors or All Producers (the opposite of the selected well) Toggles the visibility of the other Simulation wells to show only wells contributing to/influenced by the selected well. New Fracture – Creates a new fracture along the simulation well. (See Fracture instances) New Intersection – creates a new intersection based on the selected simulation well.\n( See Well Log Plots ) Overall Settings for Simulation Wells The Property Panel of the Simulation Wells item in the Project Tree contains options that are applied across all the wells, while the visualization of each single well can be controlled by the options in the property panel of that particular well, and will override the overall settings in the Simulation Wells item.",
    "tags": [],
    "title": "Simulation Wells",
    "uri": "/wells-and-completions/simulationwells/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Export",
    "content": "ResInsight has several commands to create snapshots conveniently. 3 commands to take snapshots of existing Plot and 3D Views directly, and a more advanced export command that can automatically modify Eclipse 3D Views before snapshotting them.\nSnapshots of Existing Views The commands to snapshot existing views and plots are available from the toolbar and the Edit and File-\u003eExport menus in the main windows Snapshot to Clipboard A snapshot of the active view is copied to the clipboard using Edit -\u003e Copy Snapshot To Clipboard .\nSnapshot to File Image export of the currently active 3D View or Plot Window can be launched from File -\u003e Export -\u003e Snapshot To File .\nSnapshot All Views/Plots to File If a project contains multiple 3D Views or Plot Windows, all of them can be exported in one go using File -\u003e Export -\u003e Snapshot All Views To File . This will either export all the 3D Views or all the Plot Windows, depending on whether you invoke the command in the 3D Main Window or the Plot Main Window.\nThe files generated are stored in a folder named snapshots within the folder where the Project File resides.\nNote\rSnapshots of existing views can also be created and saved from the command line ( See Command Line Interface ).\nAdvanced Snapshot Export The Advanced Snapshot Export command is useful for exporting several images of a specified set of views while simultaneously changing some of their settings. By using this command it is easy to document all layers of a specific model, or generate images with identical setup across several different cases. It is also easy to export an image for each of the time steps in a case, or even a combination of all these parameters.\nThe Advanced Snapshot Export is available from the File-\u003eExport menu in the 3D Main Window Invoking the command will display the following dialog:\nThis table defines which 3D Views to modify, and how to modify them. Each row defines the modifications of a specific view, and for all the combinations a row specifies, a snapshot is generated.\nTo edit a row, the row must be activated by toggling it on in the Active column, then double click on the cell to edit.\nOptions represented by columns:\nView – Selects the view to modify. Result Type, Properties – Defines a list of eclipse result properties to cycle through when creating snapshots. If properties from both the dynamic and static list is needed, you must create a new row. Start Time, End Time – Defines the time step range to cycle through when creating snapshots. Range Filter Slice, Range Start, Range End – Defines a range filter slice that will be added to the view, and then cycled from Range Start to Range End when creating snapshots. Cases – Defines the cases to cycle while creating snapshots. Normally you can not change which case a view is displaying, but this option does temporarily. The number of exported snapshots from a row can easily end up being huge, so it is wise to use some caution. The total number will be Properties * Time Steps * Range Steps * Cases.\nRows can be deleted and created by right-clicking in the table. 5 rows are created for convenience by default.\nThe snapshots will be generated and saved to the folder displayed in the Export Folder field, when pressing the Export button. This might take quite some time, depending on you settings.",
    "description": "ResInsight has several commands to create snapshots conveniently. 3 commands to take snapshots of existing Plot and 3D Views directly, and a more advanced export command that can automatically modify Eclipse 3D Views before snapshotting them.\nSnapshots of Existing Views The commands to snapshot existing views and plots are available from the toolbar and the Edit and File-\u003eExport menus in the main windows Snapshot to Clipboard A snapshot of the active view is copied to the clipboard using Edit -\u003e Copy Snapshot To Clipboard .",
    "tags": [],
    "title": "Snapshots",
    "uri": "/export/snapshots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Summary Plots are a display of curves based on Eclipse Summary Data which can be combined with imported observed data, grid cell time history curve, and pasted ascii curves.\nSummary plots are displayed on screen by maximum four rows by four columns of plots. In the example above, ResInsight displays two columns and two rows of plots, each plot comprising a single curve. However, a plot may contain an arbitrary number of curves. As shown in the screenshot above, essential helpers for setup of Summary Plots are:\nPlots: overview of established plots and their components Property Editor: settings for titles, legends, layout, axes, and appearance Data Sources: searching and sourcing data from case, field, regions, wells, groups, or ensemble Templates: overview, management and use of templates for summary plotting Plot Manager: powerful text-based selection of vectors for summary plotting Essential actions are presented as controls in the toolbar to increase productivity and ease of use.\nCreating Summary Plots Using Data Sources to create Summary Plots Having imported Eclipse Summary Data, Data Sources provides an easy approach to create Summary Plots:\nSearch or navigate Data Sources to find the desired source(s) and vector(s) Right-click selected vector(s) and select New Summary Plot Drag \u0026 Drop additional vector(s) to append curves into an existing plot or vacant plot area Creating a new summary plot of WBHP of Well B-1H and subsequent Drag \u0026 Drop of WGOR and WGORH into the same subplot produces the following. ResInsight will automatically make new axes if necessary. If units are the same as for WGOR and WGORH, a new axis is unnecessary.\nUsing Plot Manager to create Summary Plots Having imported Eclipse Summary Data, the Plot Manager provides an alternative and powerful approach to create Summary Plots by text-based selection of data sources and vectors to plot.\nSummary Plots and Functionality Multiple Summary Plots and Curves The Data Sources window enables efficient creation of multiple plots and curves by Right-clicking:\nUse Append Curves to append curves for the selected vectors into all existing plots. Use Append Plots for Wells to create separate plots for the selected vectors. If a plot contains curves pertinent to a single data source, you may easily append corresponding plots for other entries of the type by right-clicking or drag and drop. In the examples above, the curves are pertinent to the single data source well B-1H. Thus you may easily append corresponding plots for other wells by right-clicking as shown below.\nAlternatively, you may simply and efficiently drag and drop the selected wells into the plot area. In fact, you may drag the entire folder into plot area to append plots for all wells.\nSubsequently, you may:\nAdjust the number of columns and rows and preview the pages of plots using the toolbar Use keyboard PgUp/PgDown or scroll wheel to browse and validate the pages of plots Snapshot the curves or export to PDF-file via the toolbar-buttons or Edit menu The data source of displayed curves is rapidly changed by Summary Plot Source Stepping.\nVisual comparison of multiple summary curves ResInsight may ease comparison of multiple summary curves by selecting a plot in Plots and using the settings in Property Editor group Axes.\nThe different options are:\nY Axis Range: Defines the data source for Y Axis range to either individual, all subplots, all wells, all regions, or all realizations. Link Y Axes: When checked, the axes of all subplots will be treated to obtain plots with identical axes. Link Time Axis: When checked, the time axes of all subplots will identical. Auto Plot Settings: When checked, ResInsight creates axes with titles, ranges, tickmarks, and units for best possible appearance. Plot Mouse Interaction Value Tracking: When the mouse cursor is close to a curve, the closest curve sample is highlighted and the curve sample value is displayed in a tooltip. Selection: Left mouse button click can be used to select several items of the plot and display them in the Property Editor: The closest curve Each plot axis The summary plot itself if none of the above is hit and the Plots window is activated by the mouse click Window Zoom: Available by dragging the mouse with left mouse button pressed across plot area of interest. Wheel Zoom: The mouse wheel will zoom the plot in and out towards the current mouse cursor position presupposing use of mouse wheel is not disabled by toolbar button . You may simply double click a subplot to restore its default zoom level. Use toolbar button or View menu option Zoom All to restore default zoom level for the entire plot.\nFor scrolling multiple pages of plots by using the mouse wheel, disable Wheel Zoom by the toolbar button .\nHighlighting a curve or axis A summary curve is highlighted when left-clicked in a plot. This eases detailed investigation of a specific curve in plots comprising many curves.\nAnother essential feature is to left-click an axis in a summary plot which will highlight the curves corresponding to the particular axis. As exemplified below, clicking the axis Gas Production Total highlights the WGPT curve and dims the other curves.\nSummary curves can also be activated and deactivated by clicking the check-boxes in Plots window. See also Plots right-click menu items, e.g. On - Others Off which is an effective way to deactivate all curves not selected.\nDuplicate plot, Copy and Paste An entire summary plot may be duplicated using the toolbar button Duplicate Plot.\nCopy and Paste of a summary plot, subplot (see below) or curve is also possible using the Plots right-click menu and standard keyboard shortcuts (CTRL-C/CTRL-V). This enables pasting a subplot or curve to wherever desired in the the Plots tree.\nFiltering of subplots Filtering of subplots allows the user to disable/hide subplots containing data below a user defined threshold. To activate filtering of subplots, click a plot in Plots window, set the Y-axis Threshold in Property Editor, and click Apply Filter.\nSplitting a plot into subplots A plot with many curves can easily be split into multiple subplots. Right-click a composite plot in Plots and select Split Into Single Curve Plots to split into subplots each comprising one curve.\nAccessing Plot Data Right-clicking a plot in Plots window and selecting Show Plot Data will open a window containing the plot data as text columns. The window displays plot data by day, week, month, quarter, half year and year.\nResampling Method\nFor aggregated values (*OPT and similar), the resampled value is calculated based on linear resampling.\nFor rate values (*OPR), the total volume in the requested resample interval is computed. The rate value is then computed by\n$Rate_{period} = \\frac{TotalVolumePeriod}{period}$\nNo extrapolation of rate values is performed. This means that the rate for the last time period can appear lower than the previous time period if the last reported rate is early in the last resampling period.\nThe text content of this window is easy to copy and paste into Excel or other tools for further processing. It is also possible to save the text data to a file by the right-click command Export to File.\nEditing Summary Plots A color selection dialog can be opened by clicking on the color icon in the Project Tree. The settings of each plot are listed in the Plots window for overview and are controlled by its sub-items and the Property Editor. Editing a Summary Curve By selecting a specific summary curve in the Plots window, its properties are displayed by the Property Editor.\nThe Property Editor organizes the available options into the following groups:\nSummary Vector – Options to select case, vector to plot, resampling, axis specification, and error bars. Stacking - Options to control stacking of curves optionally with phase colors. Appearance – Options to control curve color, symbols, line style etc. Curve Name – Controls how the curve is labeled in the legend. Curve Type The Curve Type can automatically be derived based on the name of the summary vector name, either Accumulated(ends with “T”) or Rate. The curve type can be manually specified if Custom curve type is selected. This option can be especially useful for imported curves.\nOther actions are available via right-click menu for selected curve. For instance, the Y-Axis for one or more curves can be switched for using the right-click command Switch Plot Axis.\nDefault Time Axis Properties Time axis properties are displayed by clicking the Time Axis subitem of a summary plot in Plots window.\nCustom Time Axis Properties The time labels are automatically defined based on the available date range. The tick marks can be controlled in details by setting Tickmark Type to Custom. Then a tickmark interval and tickmark interval step can be defined.\nIn the screenshot above, the interval is set to three years, and the plot displays labesl with three years between each.\nY-axis Properties Y-axis properties are displayed by clicking one of the left/right axis subitems of a summary plot in Plots window.\nThe property groups are:\nTitle Text: Caters for automatic or user specification of title and inclusion of vector name, acronym, and units in plot. Title Layout: Positioning of title (Center or At End) and font size. Axis Values: Logarithmic scale, inversion of axis, legend number formatting, scale factor, max/max range, and font size. Changing content of a Summary Plot Right-clicking an existing summary plot in Plots and selecting Edit Summary Plot initiates the Summary Plot Editor which offers complete functionality to navigate and select vectors from all summary types.",
    "description": "Summary Plots are a display of curves based on Eclipse Summary Data which can be combined with imported observed data, grid cell time history curve, and pasted ascii curves.\nSummary plots are displayed on screen by maximum four rows by four columns of plots. In the example above, ResInsight displays two columns and two rows of plots, each plot comprising a single curve. However, a plot may contain an arbitrary number of curves. As shown in the screenshot above, essential helpers for setup of Summary Plots are:",
    "tags": [],
    "title": "Summary Plots",
    "uri": "/plot-window/summaryplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Data Sources provides an overview of all data sources for summary plots by category to provide search, selection, and essential functionality pertinent to summary cases.\nAs seen above, Data Sources enables search and sourcing of data from case, field, regions, wells, groups, or ensemble. See Summary Plots which illustrates use of Data Sources for effective search and selection of data for summary plots.\nSearching for data sources Atop the Data Sources window, there is a search field for effective searches across all available data sources. As exemplified below, typing just a few letters initiates a search for vectors prefixed by wbh across all data groups listing all hits.\nSummary Cases functionality Right-clicking the Summary Cases entry in Data Sources displays the functionality pertinent to summary cases.\nDelta Summary Case and Delta Ensemble A Delta Summary Case or Delta Ensemble can be created as either the sum or difference between two existing summary cases or ensembles, respectively.\nTo create a delta summary case, for instance, right click and select New Delta Summary Case. The Property Editor for the new delta case allows to modify display name, the two base summary cases, and the arithmetic operator. In addition, it is possible to specify a specific time step to be used in delta computation. As exemplified below, the delta computation between two cases for a given parameter, e.g. WBHP, will be: $$WBHP_{delta}(t) = WBHP_{case1}(@02.01.2000) - WBHP_{case2}(t)$$ An existing delta summary case may be input to a new delta summary case.\nCurve calculator The Curve Calculator is a tool to perform vector calculations on a set of curves. The created curves can be stored for later use.\nSummary Case functionality Right-clicking a specific Summary Case in Data Sources displays the functionality pertinent to a single summary case.\nThe highlighted menu item, right-clicking a summary case in Data Sources and select Replace will redisplay all configured plots with data from another case.\nPlease also note the menu options to create summary plot from Template which is a powerful and effective way to create summary plots with a specific appearance and content. When invoking a well-specific template on Summary Case level as shown above, the convention is that ResInsight selects the first well listed under as data source.",
    "description": "Data Sources provides an overview of all data sources for summary plots by category to provide search, selection, and essential functionality pertinent to summary cases.\nAs seen above, Data Sources enables search and sourcing of data from case, field, regions, wells, groups, or ensemble. See Summary Plots which illustrates use of Data Sources for effective search and selection of data for summary plots.",
    "tags": [],
    "title": "Data Sources",
    "uri": "/plot-window/summaryplotdatasources/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Importing Seismic Data ResInsight supports the following seismic file formats:\nSEGY: file format developed by the Society of Exploration Geophysicists for storing geophysical data VDS: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenVDS ZGY: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenZGY A seismic file is imported by right-clicking the Seismic item in Project Tree or by using menu item File-\u003eImport-\u003eImport Seismic.\nTo look at seismic data, create a Seismic View. Combined display of both grid model geometry and seismid data is described in Seismic Sections.\nDifference Cube The difference between two seismic cubes can be created using the following workflow:\nSelect two seismic cubes with identical geometry (same count of XLines and Inlines located at identical geometrical locations) From the right-click menu select “Create Seismic Difference” A new seismic data source is created, and data can be mapped onto seismic intersections Property Editor The Property Editor for seismic data lists the available properties:\nGeneral: Name and file for fast random access Color Mapping: Colors: Color Legend applicable to all Seismic Sections using this data set Override Data Range: option to override data range by specifying clip value, c.f. below File Information: key information such as ranges and data channels To improve visualization of seismic data, the data range can be overridden by checking Override Data Range and specify Clip Value.\nThe Seismic Histogram may provide valuable information for deciding how to map the data values to colors.\nClip Value: Defines the maximum and minimum value for color legend Mute Value: All values below the specified threshold is set to zero Conversion of SEGY files for fast random access ResInsight converts SEG-Y files to VDS to obtain fast random access. Selecting a SEG-Y file (*.sgy, *.segy) thus triggers the Convert SEG-Y to VDS file format dialog shown below.\nThe options for conversion of SEG-Y files are:\nInput/Output files: specifying path and file name of input SEG-Y and output VDS file Convert Options: Depth (Z) Unit: specifying unit of depth for display purposes (no conversion performed) Depth (Z) Offset Override: correction of incorrect or missing depth offset on file Header Definition File: optional file specifying OpenVDS SEG-Y Import Options. Subsequent to SEG-Y conversion, please check resulting key information for correctness by inspecting File Information of the Property Editor, notably Inline, Xline, and Z ranges. In case of discrepancy, the conversion of SEG-Y file has to be performed anew by specifying Depth (Z) Offset Override or specifying a JSON file as described in the documentation of the OpenVDS SEG-Y Import Tool.\nA further option is to run the OpenVDS SEG-Y Import Tool from command line as the OpenVDS SEGYImport tool is part of your ResInsight intallation.",
    "description": "Importing Seismic Data ResInsight supports the following seismic file formats:\nSEGY: file format developed by the Society of Exploration Geophysicists for storing geophysical data VDS: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenVDS ZGY: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenZGY A seismic file is imported by right-clicking the Seismic item in Project Tree or by using menu item File-\u003eImport-\u003eImport Seismic.",
    "tags": [],
    "title": "Seismic Data",
    "uri": "/import/seismicdata/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Log ASCII Standard (LAS) is a standard file format common in the oil-and-gas industry to store well log information.\nImporting a LAS file Log ASCII Standard (LAS) files can be imported using the command: File-\u003eImport-\u003e Well Data-\u003eImport Well Logs from File.\nResInsight will look for the the well name in the imported LAS-files among the existing Well Paths. If a match is found, the LAS-file is placed as a child of that well path. If not, a new empty well path entry is created with the imported LAS-file under it. A well path may have more than one LAS-files as children.\nIf the LAS-file does not contain a well name, the file name is used instead.\nMoving a LAS file If ResInsight’s automatic well matching fails and a LAS-file is matched with the wrong well path, it is possible to move the LAS-file to the correct well path. Select the LAS-file right-click menu click Move LAS File to Well Path and select destination well path.\nLook for an Existing Well Path Well names may vary slightly among different files from the same well. When importing a well log file, ResInsight have to look for an existing well path item to ensure that the well log data and well path are imported to the correct well path item. The lookup is based on name comparison this way:\nFirst remove any prefix (like xxxxx1111/1111- or xxxxx1111/1111_) Then try an exact name match If not found, try to match the names ignoring all spaces, dashes and underscores If still no match, no existing well was found and a new one is created Supported Date Formats During LAS import, ResInsight parses a date on file according to the following expressions. Supported separators between day, month, and year are space, underscore, hyphen, and dot.\nExpression Description d day as number without a leading zero (1 to 31), e.g. 7 dd day as a two digit number (01 to 31), e.g. 07 M month as number without a leading zero (1-12), e.g. 8 MM month as a two digit number (01-12), e.g. 08 MMM short month name in uppercase or lowercase (‘Jan’ to ‘Dec’), e.g. AUG yy year as a two digit number (00-99), e.g. 19 yyyy year as a four digit number, e.g. 2019 Examples of supported date expressions are listed in the following table.\nExpression Example yyyy MM dd 2019 08 16 yyyy-MM-dd 2019-08-16 yyyy MMM dd 2019 Aug 16 MMM dd yyyy Aug 16 2019 d.M.yy 1.8.89 dd_MM_yyyy 16_08_2019 dd.MMM.yyyy 16.Aug.2019",
    "description": "Log ASCII Standard (LAS) is a standard file format common in the oil-and-gas industry to store well log information.\nImporting a LAS file Log ASCII Standard (LAS) files can be imported using the command: File-\u003eImport-\u003e Well Data-\u003eImport Well Logs from File.\nResInsight will look for the the well name in the imported LAS-files among the existing Well Paths. If a match is found, the LAS-file is placed as a child of that well path. If not, a new empty well path entry is created with the imported LAS-file under it. A well path may have more than one LAS-files as children.",
    "tags": [],
    "title": "Log ASCII Standard File",
    "uri": "/import/lasfile/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Best Practices",
    "content": "Performance Hints As the simulation models grow in size, the requirements on processing resources and memory are increasing. ResInsight have some options that can improve performance by transformation of data or reduction of data input.\nSummary Data Summary data is usually available as SMSPEC and UNSRMY files. UNSMRY files are stored in a binary format, and all data for one time step is stored one section. When extracting data for all time steps for a single summary vector, data must be read from multiple sections. This can give bad performance for large datasets.\nFor best performance, transform these data files to ESMRY File Format\nSummary Data Import\nGrid Data ResInsight has two grid import readers, ResData and opm-common.\nopm-common ResInsight now offers the option to import geometry exclusively for active cells. This feature is particularly beneficial for large grids where active cells constitute only a small fraction of the total, significantly reducing memory usage. This optimization ensures efficient handling of large models while maintaining full functionality for active cells. Enable this option using the checkbox Only Load Active Cell Geometry\nFeatures currently not supported when using opm-common\nRelative Permeability plots PVT plots Flow Diagnostics Preferences",
    "description": "Performance Hints As the simulation models grow in size, the requirements on processing resources and memory are increasing. ResInsight have some options that can improve performance by transformation of data or reduction of data input.\nSummary Data Summary data is usually available as SMSPEC and UNSRMY files. UNSMRY files are stored in a binary format, and all data for one time step is stored one section. When extracting data for all time steps for a single summary vector, data must be read from multiple sections. This can give bad performance for large datasets.",
    "tags": [],
    "title": "Performance Hints",
    "uri": "/best-practices/performancehints/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "The Project File ResInsight stores all views and settings in a Project File with the extension *.rsp to easily continue work in a subsequent session. This file only contains references to the real data files, and does not in any way copy the data itself. Data files generated by ResInsight are also referenced by the Project File.\nNote\rThe *.rsp file is an XML file, and can be edited by any text editor.\nExternal File References Editing the Project File is one effective way to replace source cases and other file references. At top of a Project File, the section ReferencedExternalFiles contains aliases to file paths which can be modified using a text editor. It is also possible to use automated tools to modify these text strings.\n\u003cReferencedExternalFiles\u003e $PathId_001$ D:/resinsight-data/norne/NORNE_ATW2013.EGRID; $PathId_002$ D:/resinsight-data/NorneODB/norne_case2.odb; $PathId_003$ D:/resinsight-data/norne/NORNE_ATW2013.SMSPEC; $PathId_004$ D:/resinsight-data/summary_templates; \u003c/ReferencedExternalFiles\u003e",
    "description": "The Project File ResInsight stores all views and settings in a Project File with the extension *.rsp to easily continue work in a subsequent session. This file only contains references to the real data files, and does not in any way copy the data itself. Data files generated by ResInsight are also referenced by the Project File.\nNote\rThe *.rsp file is an XML file, and can be edited by any text editor.",
    "tags": [],
    "title": "Project File and Caching",
    "uri": "/misc/projectfile/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "Revision History A backup of a project file is added to a project file database when the project file is saved. The backup file is named with the extension *.rspdb and is stored in the same directory as the project file. The backup file is created with the same content as the project file at the time of the save operation.\nRestore Revision from Backup All revisions in the project database can be restored using the tool restore-projectfile-versions. Specify the project file database and the output directory where the revisions should be restored. The tool will create a copy of the project file for each revision in the output directory.\nextract-projectfile-versions \u003cprojectfiledatabase.rspdb\u003e \u003coutput-directory\u003e\rOpen the restored project files in ResInsight to inspect the content of the project file at the time of the save operation.",
    "description": "Revision History A backup of a project file is added to a project file database when the project file is saved. The backup file is named with the extension *.rspdb and is stored in the same directory as the project file. The backup file is created with the same content as the project file at the time of the save operation.\nRestore Revision from Backup All revisions in the project database can be restored using the tool restore-projectfile-versions. Specify the project file database and the output directory where the revisions should be restored. The tool will create a copy of the project file for each revision in the output directory.",
    "tags": [],
    "title": "Project File Revisions",
    "uri": "/misc/projectfilerevisions/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Scripting",
    "content": "ResInsight provides a robust programming interface that allows you to interact with a running ResInsight instance using Python 3. This interface enables you to:\nStart ResInsight from Python Communicate with a running ResInsight instance Load a ResInsight project file Load data files such as Eclipse EGRID files and summary files Extract data to Python for further processing and automation Export snapshots of graphics For configuration and detailed information, please refer to the ResInsight Python API.",
    "description": "ResInsight provides a robust programming interface that allows you to interact with a running ResInsight instance using Python 3. This interface enables you to:\nStart ResInsight from Python Communicate with a running ResInsight instance Load a ResInsight project file Load data files such as Eclipse EGRID files and summary files Extract data to Python for further processing and automation Export snapshots of graphics For configuration and detailed information, please refer to the ResInsight Python API.",
    "tags": [],
    "title": "Python Interface",
    "uri": "/scripting/pythoninterface/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "The Summary Plot Manager is a separate ResInsight dialog window where the user can select which vectors to plot in a summary plot. This dialog is intented to be used from the keyboard with easy access to operations for management of summary plots. This dialog can be opened by using CTRL-K from anywhere in the Plot Window.\nThe user writes a text string defining the summary vectors and optionally data sources for curves to be plotted. Example: wopt:A? iter*. This text string will filter all WOPT vectors for wells with two characters where the first character is A. Additionally, this will filter select ensemble datasources starting with the string iter\nResInsight will automatically compupte the difference between a simulated and observed vector if both are available (WOPT/WOPTH). This will be displayed as WOPT_DIFF. These difference vectors can be included in the filter if the Include Difference Vectors is checked.\nThe resulting vectors and data sources are displayed in the corresponding lists below the filter text.\nWhen the intended vectors and data sources is defined, the currently selected summary plot can be updated using buttons Append Curve or Replace Curves. Press button Create New Plot to create a new plot.\nKeyboard shortcuts Operation Shortcut Display Summary Manager CTRL-K Append Curves SHIFT-Enter Replace Curves CTRL-Enter Create New Plot ALT-Enter Filter text examples Filter Text Description wop* All vectors starting with WOP for all wells wopt:* WOPT for all wells wopt:a* WOPT for all wells starting with character A *opt* All vectors having opt as a sub string (FOPT, FOPR, GOPT, GOPR, WOPT, WOPR, …) wopt:* real-1? WOPT for all wells for all realizations starting with text real-1 and one additional character wopt:* iter-* WOPT for all wells for all ensembles starting with text iter-1 and one additional character wopt:* iter-1:real-2* WOPT for all wells for all realizations starting with text iter-1:real-2",
    "description": "The Summary Plot Manager is a separate ResInsight dialog window where the user can select which vectors to plot in a summary plot. This dialog is intented to be used from the keyboard with easy access to operations for management of summary plots. This dialog can be opened by using CTRL-K from anywhere in the Plot Window.",
    "tags": [],
    "title": "Summary Plot Manager",
    "uri": "/plot-window/summaryplotmanager/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "Window Tiling Tiling of windows can be accessed from the tool bar. The default tiling will organize the windows in a grid pattern. It is also possible perform tiling of the windows horizontally or vertically. This feature is availble from the Windows menu at the main menbu bar.\nDefault Horizontally Vertically Window Management The window management system was updated in release 2022.06.1. ResInsight stores application window visibility and location between sessions. It is also possible to store the window configuration to a file for later reuse.\nThe window management is available from the Windows menu.\nSee the following demonstration of some of the Window Management features:",
    "description": "Window Tiling Tiling of windows can be accessed from the tool bar. The default tiling will organize the windows in a grid pattern. It is also possible perform tiling of the windows horizontally or vertically. This feature is availble from the Windows menu at the main menbu bar.\nDefault Horizontally Vertically Window Management The window management system was updated in release 2022.06.1. ResInsight stores application window visibility and location between sessions. It is also possible to store the window configuration to a file for later reuse.",
    "tags": [],
    "title": "Window Management",
    "uri": "/misc/windowmanagement/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "This is the main window of ResInsight for all 3D related functionality and visualization. As seen, the 3D Main Window has a central area and several docking windows surrounding it. The different docking windows cover the following:\nProject Tree – contains all application objects in a tree structure. Property Editor – displays all properties for selected object in the Project Tree Process Monitor – displays output from Octave when executing Octave scripts Result Info – displays info for the selected object in the 3D scene Result Plot – displays curves based on result values for the selected cells in the 3D scene Messages – displays occasional info and warnings related to operations executed. In addition, a selected subset of actions are presented as controls in the toolbar. The following subchapters describe the functionality and visualization pertinent to the 3D Main Window.",
    "description": "This is the main window of ResInsight for all 3D related functionality and visualization. As seen, the 3D Main Window has a central area and several docking windows surrounding it. The different docking windows cover the following:\nProject Tree – contains all application objects in a tree structure. Property Editor – displays all properties for selected object in the Project Tree Process Monitor – displays output from Octave when executing Octave scripts Result Info – displays info for the selected object in the 3D scene Result Plot – displays curves based on result values for the selected cells in the 3D scene Messages – displays occasional info and warnings related to operations executed. In addition, a selected subset of actions are presented as controls in the toolbar. The following subchapters describe the functionality and visualization pertinent to the 3D Main Window.",
    "tags": [],
    "title": "3D Main Window",
    "uri": "/3d-main-window/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "The main results to post process in ResInsight are Cell Results. A Cell Result is one value, or a small set of values per cell over a region of the grid. A Cell Result is also referred to as a Property.\nCell Results are used in several operations and settings:\nCell Colors Cell Edge Result (Eclipse Only) Separate Fault Result (Eclipse Only) Property Filters Well Log Extraction Curves Cell Result Time History Curves In the property panel of all those, the same options are used to define the Cell Result of interest.\nIn the following we will describe these options.\nEclipse Result Types Results and difference options are displayed by the Property Editor.\nThe different result types are:\nDynamic – Time varying properties of an Eclipse simulation and derived properties calculated by ResInsight, c.f. Derived Results Static – Eclipse properties that does not vary with time and derived properties calculated by ResInsight, c.f. Derived Results SourSimRL – Available if SourSimRL results have been imported, c.f. SourSimRL Import Generated – Results generated by an Octave Script Input Property – Directly imported Eclipse properties from ascii files Formation Names – Lists only the Active Formation Names selected on the case, c.f. Formations Flow Diagnostics – Flow diagnostic results derived from a flux field, c.f. below Injection Flooding – Calculation of derived property based on one or more selected simulation tracers, c.f. below Difference options are:\nDifference Case – Base case for calculation of difference Base Time Step – Base time step for calculation of difference For some cell face results, it is possible to normalize the results by cell face area.\nNote\rThe difference option is not applicable for TERNARY result display.\nFlow Diagnostic Results ResInsight has embedded Flow Diagnostics calculations made available using the Flow Diagnostics result type. These results make it easier to see how and where wells interact with the reservoir and each other. It is possible to select exactly what wells to investigate, and even the possible opposite flow part of the well.\nSee also Flow Diagnostics Plots and Flow Characteristics Plot\nMethod The calculations are performed by a library called opm-flowdiagnostics developed by SINTEF Digital.\nThis method is based on the presence of a flux field, and will use the flux field written to the Eclipse result data file (Cell Properties: FLRGAS, FLRWAT, FLROIL) if available. If these are not available, the flux field is estimated by algorithms in the opm-flowdiagnostics-applications library based on pressure differences, relative and absolute permeability and viscosity. Other effects are not included.\nA more elaborate description of the technique and how it can be utilized, can be found at Sintef’s web site. The MRST tool described is a Matlab predecessor of the flow diagnostics calculations developed for ResInsight.\nThe methodology is also described in: The application of flow diagnostics for reservoir management SPE J., Vol. 20, No. 2, pp. 306-323, 2015. DOI: 10.2118/171557-PA\nCross Flow and Opposite Flow The opposite flow of a well denotes the flow that is opposite to the expected normal state of the well. E.g. parts of a producer might actually be injecting due to cross flow, and an injector could be producing in some sections. Each well is assigned an opposite flow name by adding “-XF” to the end of the name. “-XF” was chosen as a reference to Cross Flow.\nIn this way, a producer will have two tracer names: The “well name” as a producer tracer, and “well name-XF” as an injector tracer.\nDefining Results There are several options available to define the particular result you want to target, as shown below:\nThere are two main selections you need to make: The tracers and the result property\nTracers – Option to select how/what tracers to use. Available options are: All Injectors and Producers – Selects all the wells, including the opposite flow tracers All Producers – Selects all producer tracers, including the opposite flow tracers of injectors. All Injectors – Selects all injector tracers, including the opposite flow tracers of producers. By Selection – Displays lists of all the injector tracers and producer tracers side-by-side allowing any to be selected freely. Both lists of selectable tracers can be filtered by typing in parts of the name. The tracers will have a suffix of [I/P] if they are both injector and producer, thus appearing in both lists. All producers communicating with the selected injectors (and vice-versa) can be selected with the “Add Communicator” buttons. Phases – Select the fluid phase you are interested in: All, Oil, Gas or Water. If one of the separate phases are selected, only the Time Of Flight result property will be available in the list below. Result property – Displays a list of the available results: Residence Time – The time for some fluid in the cell to reach a producer, or the time it takes to reach the cell from an injector. The option changes name depending on the selection of injectors and producers and will be Forward Time of Flight if only injectors are selected and Reverse Time of Flight if only producers are selected. When selecting several tracers, the time of flight values from each of the tracers are weighted by their cell fraction before they are averaged. The suffix (Average) will then be added to the option label. Tracer Cell Fraction (Sum) – The volume fraction of a cell occupied by the selected tracers. The injector and producer tracers counts as independent in this regard, so the sum of fractions for all the producer tracers will be 1.0 and the same for the injector tracers. If both types of tracers are selected, the total sum will normally reach 2.0. Drainage/Flooding Regions – Shows which of the selected tracers that has the largest fraction in each cell. This is shown as a category result displaying a color for each tracer, and the names in the legend. If only injectors are selected, this option will be labelled Drainage Regions and if only producers are selected, it is called Flooding Regions. Injector Producer Communication – The communication in a cell between a set of producers and a set of injectors is calculated as the sum of producer fractions multiplied by the sum of injector fractions in the cell. This produces values between 0.0 and 1.0 where high values indicate that both the injectors and the producers have a high influence. On-Demand Calculation The flow diagnostics results are only calculated when asked for, and only for requested time steps. This means that statistics based on all time steps are not available for these results.\nInjection Flooding This result type is used to plot derived results based on a selection of simulated tracers, typically seawater injection. Currently the only derived property available is Water Flooded PV. Please refer to Derived Results for more information.\nTracers – Lists the available simulation tracers from the Eclipse Case. The list is produced by showing only the properties with names ending with the letter “F”. Select the tracers you want to investigate. Result Property – Select the variable you want to calculate. (Number Of Flooded PV is currently the only one) Geomechanical Results Geomechanical results are sorted in different Result Positions:\nNodal – Results given a value per node in the grid Element Nodal – Results with values per element node Integration Point – Results with values per integration point. These are displayed in the same way as element nodal results. Element Nodal on Face – Results with values transformed to element faces or intersections. See Element Nodal on Face for more information Formation Names – Lists the Active Formation Names selected on the case. ( See Formations ) Element – Imported element property table results. One value pr element. See Element Property Table Import Several derived cell properties are calculated. Please refer to Derived Results for more information.\nRelative Result Options This group of options controls time-lapse results to be calculated. ( See Relative Results for more information )\nSelect Color Result In the 3D view, the result property for a selected cell can be found by right-clicking on the 3D view and choosing Select Color Result. The corresponding result property will be shown in the Property Editor.",
    "description": "The main results to post process in ResInsight are Cell Results. A Cell Result is one value, or a small set of values per cell over a region of the grid. A Cell Result is also referred to as a Property.\nCell Results are used in several operations and settings:\nCell Colors Cell Edge Result (Eclipse Only) Separate Fault Result (Eclipse Only) Property Filters Well Log Extraction Curves Cell Result Time History Curves In the property panel of all those, the same options are used to define the Cell Result of interest.\nIn the following we will describe these options.",
    "tags": [],
    "title": "Cell Results",
    "uri": "/3d-main-window/cellresults/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Scripting",
    "content": "ResInsight supports several command line parameters that can be used to automate some tasks using shell scripts.\nCommand line parameters are prefixed using a double dash. This convention is used on all platforms to make it possible to reuse scripts across different platforms. See GNU Standards for Command Line Interfaces.\nExamples on how command line options are used are given below\nCommand line options General Parameter Description --help, --? Displays help text and version info --project \u003cfilename\u003e Open project file \u003cfilename\u003e. --last Open last used project. --size \u003cwidth\u003e \u003cheight\u003e Set size of the main application window. --console Launch as a console application without graphics --server [\u003cportnumber\u003e] Launch as a GRPC server. Default port is 50051 --startdir \u003cfolder\u003e Set startup directory. Command files Parameter Description --commandFile \u003ccommandFile\u003e Execute a command file. See command file documentation. --commandFileProject \u003cfilename\u003e Project to use if performing case looping for command file. Used in conjunction with commandFileReplaceCases. Snapshots Parameter Description --savesnapshots all|views|plots| Save snapshot of all views or plots to project file location sub folder ‘snapshots’. Option ‘all’ will include both views and plots. Application closes after snapshots have been written. --multiCaseSnapshots \u003cgridListFile\u003e For each grid file listed in the \u003cgridListFile\u003e file, replace the first case in the project and save snapshot of all views. Case handling Parameter Description --case \u003ccasename|filename\u003e [\u003ccasename|filename\u003e] Imports the Eclipse cases specified by case name with or without extension.If \u003ccasename\u003e, import the corresponding grid file and summary file. If \u003cfilename\u003e has extension .GRRID/.EGRID, import the grid file and corresponding summary file. If \u003cfilename\u003e has extension .SMSPEC, import the summary file (does not open the grid file) --replaceCase [\u003ccaseId\u003e] \u003cnewGridFile\u003e Replace grid in \u003ccaseId\u003e or first case with \u003cnewGridFile\u003e. Repeat parameter for multiple replace operations. --replaceSourceCases [\u003ccaseGroupId\u003e] \u003cgridListFile\u003e Replace source cases in \u003ccaseGroupId\u003e or first grid case group with the grid files listed in the \u003cgridListFile\u003e file. Repeat parameter for multiple replace operations. --commandFileReplaceCases [\u003ccaseId\u003e] \u003ccaseListFile\u003e Supply list of cases to replace in project, performing command file for each case. Project to replace cases must be set with commandFileProject. If caseId is not supplied, first case is replaced. When supplying caseId, multiple cases may be replaced at once, by supplying several caseIds and a file containing a list of grid-files to replace with for each caseId. Note\rReduce project load time using –replaceSourceCases ResInsight stores data computed by statistics calculation in a cache file. When a project file is loaded, data from this cache is also imported. For large cases, the cached data can be large. When replacing source cases during batch, this data is never used and can be removed from the cache using the following workaround: Open the project file used to produce statistics Select the statistics object in the project tree Click the button Edit (Will DELETE current result) Save the project file Summary plotting The summary plotting command option follows the following syntax:\nresinsight --summaryplot [\u003cplotOptions\u003e] \u003ceclipsesummaryvectorfilters\u003e \u003ceclipsedatafiles\u003e where: \u003cplotOptions\u003e denote summary plot options, see table below \u003ceclipsesummaryvectorfilters\u003e has the syntax \u003cvectorname\u003e[:\u003citem\u003e[:\u003csubitem\u003e[:i,j,k]]] \u003ceclipsedatafiles\u003e lists a set of Eclipse data files with or without extension\rThe summary plotting command option creates one summary plot for each of the the summary vectors matched by\n\u003ceclipsesummaryvectorfilters\u003e using all listed Eclipse data files in each plot.\nEclipse summary vector filters specify a list of vectors separated by spaces following the syntax noted above. Wildcards can be used in the specification. Brief examples are:\nWOPT:*: One total oil production curve for each well. FOPT FWPT: Two curves with oil and water total production. BPR:15,28,*: Oil phase pressure for all blocks along k as separate curves. Please note no space in expression. Examples are listed below.\nAs long as only summary vectors are requested, only the corresponding SMSPEC file will be opened for each case. However, if a grid property is requested, the corresponding EGRID and restart data will be loaded as well.\nSpecifying summary plot options is optional, c.f. table below.\nOption Description -help Shows help text and ignores any other option. -h Includes history vectors read from summary file if the vectors exist. Only history vectors from the first summary case in the project will be included. -nl Omits legend in plot. -s Creates only one plot including all the defined vectors and cases. -n Scales all curves into the range 0.0-1.0. Useful when using -s. -e Imports all the cases as an ensemble, and create ensemble curves sets instead of single curves. -c \u003cparametername\u003e Same as -e, but colors the curves by the ensemble parameter . -cl \u003cparametername\u003e Same as -c, but uses logarithmic legend. Testing Parameter Description --regressiontest \u003cfolder\u003e System command --updateregressiontestbase \u003cfolder\u003e System command --unittest Execute integration tests --ignoreArgs System command See also the Regression Test System for a more in-depth explanation.\nExamples Most examples are also available from the test section.\nCreate snapshots of all views for multiple cases A list of cases is defined in CaseList.txt, containing the following\nReal0/BRUGGE_0000.EGRID Real10/BRUGGE_0010.EGRID Real30/BRUGGE_0030.EGRID Real40/BRUGGE_0040.EGRID\rThe command line used to run this example is shown here:\nResInsight --project BatchTest.rsp --multiCaseSnapshots CaseList.txt --size 500 500\rThis will instruct ResInsight to read the project file BatchTest.rsp. All cases will be replaced one by one in ResInsight, and snapshots of all views will be written to file.\nReplace a single case and take snapshots of all views The command line used to run this example is shown here:\nResInsight --project BatchTest.rsp --replaceCase \"Real10\\BRUGGE_0010.EGRID\" --savesnapshots\rThis will instruct ResInsight to read the project file BatchTest.rsp. The specified case Real10\\BRUGGE_0010.EGRID will be imported into the project, and snapshots of all views will be written to file.\nReplace source cases in a case group and create snapshot A list of cases is defined in CaseList2.txt, containing the following\nReal0/BRUGGE_0000.EGRID Real10/BRUGGE_0010.EGRID\rThe command line used to run this example is shown here:\nResInsight --project BatchStatistics.rsp --replaceSourceCases CaseList2.txt --savesnapshots\rThis will instruct ResInsight to read the project file BatchStatistics.rsp. All cases specified will be imported in the case group specified in the project file. Statistics will be computed, and snapshots for all views will be written to file.\nReplace source cases in multiple case groups and create snapshots Multiple source case groups can be updated by repeating the replaceSourceCases parameter.\nThe command line used to run this example is shown here:\nResInsight --project BatchStatistics.rsp --replaceSourceCases 0 CaseList2.txt --replaceSourceCases 1 CaseList3.txt --savesnapshots\rThis will instruct ResInsight to read the project file BatchStatistics.rsp. Source cases for case group 0 is given in CaseList2.txt, and source cases for case group 1 is given in CaseList3.txt. Statistics will be computed, and snapshots for all views will be written to file.\nThe possibility to replace multiple cases can also be applied for single case replace (parameter replaceCase).\nSummary plotting The following command line performs a summary plot for FOPT based on Eclipse summary file 1_R001_REEK-0.SMSPEC.\nResInsight --summaryplot FOPT 1_R001_REEK-0 Based on file 1_R001_REEK-0.SMSPEC, the following command line performs a summary plot for FOPT and any WOPT-vector for well op_2. The trailing option -s gathers the vectors into a single summary plot.\nResInsight --summaryplot -s FOPT WOPT*:op_2 1_R001_REEK-0\rAdding to previous example, the following command line also plots the 3D grid property SOIL for cell (20, 21, 1).\nResInsight --summaryplot FOPT WOPT*:op_2 SOIL:20,21,1 1_R001_REEK-0",
    "description": "ResInsight supports several command line parameters that can be used to automate some tasks using shell scripts.\nCommand line parameters are prefixed using a double dash. This convention is used on all platforms to make it possible to reuse scripts across different platforms. See GNU Standards for Command Line Interfaces.\nExamples on how command line options are used are given below\nCommand line options General Parameter Description --help, --? Displays help text and version info --project \u003cfilename\u003e Open project file \u003cfilename\u003e. --last Open last used project. --size \u003cwidth\u003e \u003cheight\u003e Set size of the main application window. --console Launch as a console application without graphics --server [\u003cportnumber\u003e] Launch as a GRPC server. Default port is 50051 --startdir \u003cfolder\u003e Set startup directory. Command files Parameter Description --commandFile \u003ccommandFile\u003e Execute a command file. See command file documentation. --commandFileProject \u003cfilename\u003e Project to use if performing case looping for command file. Used in conjunction with commandFileReplaceCases. Snapshots Parameter Description --savesnapshots all|views|plots| Save snapshot of all views or plots to project file location sub folder ‘snapshots’. Option ‘all’ will include both views and plots. Application closes after snapshots have been written. --multiCaseSnapshots \u003cgridListFile\u003e For each grid file listed in the \u003cgridListFile\u003e file, replace the first case in the project and save snapshot of all views. Case handling Parameter Description --case \u003ccasename|filename\u003e [\u003ccasename|filename\u003e] Imports the Eclipse cases specified by case name with or without extension.If \u003ccasename\u003e, import the corresponding grid file and summary file. If \u003cfilename\u003e has extension .GRRID/.EGRID, import the grid file and corresponding summary file. If \u003cfilename\u003e has extension .SMSPEC, import the summary file (does not open the grid file) --replaceCase [\u003ccaseId\u003e] \u003cnewGridFile\u003e Replace grid in \u003ccaseId\u003e or first case with \u003cnewGridFile\u003e. Repeat parameter for multiple replace operations. --replaceSourceCases [\u003ccaseGroupId\u003e] \u003cgridListFile\u003e Replace source cases in \u003ccaseGroupId\u003e or first grid case group with the grid files listed in the \u003cgridListFile\u003e file. Repeat parameter for multiple replace operations. --commandFileReplaceCases [\u003ccaseId\u003e] \u003ccaseListFile\u003e Supply list of cases to replace in project, performing command file for each case. Project to replace cases must be set with commandFileProject. If caseId is not supplied, first case is replaced. When supplying caseId, multiple cases may be replaced at once, by supplying several caseIds and a file containing a list of grid-files to replace with for each caseId. Note\rReduce project load time using –replaceSourceCases ResInsight stores data computed by statistics calculation in a cache file. When a project file is loaded, data from this cache is also imported. For large cases, the cached data can be large. When replacing source cases during batch, this data is never used and can be removed from the cache using the following workaround:",
    "tags": [],
    "title": "Command Line Interface",
    "uri": "/scripting/commandlineinterface/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data",
    "content": "The summary curve calculator is a tool to do calculations on a set of curves. The created curves can be stored for later use in the project.\nThe calculator can be run by pressing the calculator icon in the menu bar, or by right-clicking on either a summary case or the summary plot collection.\nExpressions can be saved to a text file using the Export Calculations button. The default location for calculations can be set in Preference-\u003eImport/Export.\nMore details on mathematical operations are described in Calculator Expressions\nCalculation Settings To make a new calculated curve, click on New Calculation. This will add a new calculation to Calculated Summaries. Before choosing which curves to do calculations on, a calculation expression must be made. The default expression Calculation_1 := x + y will do a vector addition on the curves which x and y are placeholders for, and assign it to the calculation Calculation_1.\nTo assign a summary address to a variable, select a summary vector in Data Sources, and drag/drop this vector into the address field in the Curve Calculator. Further details on variable assignment is covered in section Summary Address Selection.\nBy default, a calculation defined for one well will be distributed to all other wells. This feature can be disabled by unticking Distribute to other items\nUnit It is possible to add a unit to the calculated curve, in the field Unit beneath the expression field. This will be used as the label on the y-axis when the curve is displayed in plots.\nSummary Address Selection An expression consists of placeholders (variables) for curves (summary address). By clicking Parse Expression, the variables will appear in the table below the settings. To assign a summary address to a variable, select a summary vector in Data Sources, and drag/drop this vector into the address field in the Curve Calculator.\nIt is also possible to select the address by pressing the Edit button. This action will open a Summary Address Selection dialog. Use the dialog to select a summary address and press OK.\nGenerating Curves After assigning summary addresses to all variables, click Calculate to evaluate the expression. The curve is saved and can be accessed in the Plot Editor.\nCalculation for Ensembles All calculation expressions are available for ensemble plotting. Use the calculation objects the same way as they are used for single summary cases.\nReferences The similar concept is also used for Grid Property Calculator",
    "description": "The summary curve calculator is a tool to do calculations on a set of curves. The created curves can be stored for later use in the project.\nThe calculator can be run by pressing the calculator icon in the menu bar, or by right-clicking on either a summary case or the summary plot collection.\nExpressions can be saved to a text file using the Export Calculations button. The default location for calculations can be set in Preference-\u003eImport/Export.",
    "tags": [],
    "title": "Curve Calculator",
    "uri": "/calculated-data/curvecalculator/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Export",
    "content": "Eclipse Properties can be exported to Eclipse ASCII files. This is particularly useful when a new property is generated using Octave. The generated property can be exported for further use in the simulator.\nExport Command To export the property currently active in the 3D View, activate the right-click menu on a Cell Result item in the Project Tree.\nThe following dialog will appear:\nExport File Name – The path to exported file Eclipse Keyword – The keyword to use for the property in the eclipse file Undefined Value – This value is written to the file for all values that are flagged as undefined in ResInsight For import this type of property data see Import: Eclipse Cases\nFile Format The exported file has the following format, that matches the Eclipse input format:\n-- Exported from ResInsight\r\u003ckeyword\u003e\r\u003cOne number per cell separated by spaces\u003e\r/",
    "description": "Eclipse Properties can be exported to Eclipse ASCII files. This is particularly useful when a new property is generated using Octave. The generated property can be exported for further use in the simulator.\nExport Command To export the property currently active in the 3D View, activate the right-click menu on a Cell Result item in the Project Tree.",
    "tags": [],
    "title": "Eclipse Properties",
    "uri": "/export/eclipseproperties/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "ResInsight can be built with support for reading and displaying geomechanical analysis models produced by ABAQUS in the *.odb format. This is only possible if you or your organization has a copy of the ODB-Api from Simulia, and a valid license to use it.\nIf you have, and would like to a use these features, please see Build Instructions for a description on how to build ResInsight and how to include the support for odb-files.\nGeo Mechanical Data Support Geo-mechanical data can be imported using the Import -\u003e Geo Mechanical Cases menu. Here three options are present: Import Geo Mechanical Model, Import Geo Mechanical Model (Time Step Filtered) (both for odb files) and Import Element Property Table.\nResInsight supports the elements C3D8R, C3D8 and C3D8P which are all HEX8 cells. It is also assumed that there are no other element topologies present in the odb file, and that there are only one part. For IJK-based range filters to work, it is also assumed that the elements in the part is topologically arranged as a complete box.\nResInsight loads the second frame within each odb-step, and present those as the time series for each result.\nAll the result fields in the odb-file is then available for post processing in ResInsight, but stresses and strains are converted to pressure-positive tensors as normally used in geomechanics, instead of the normal tension-positive tensors that ABAQUS stores.\nPressure and stress are always displayed using the Bar unit.\nOther derived results are also calculated, and are described in Derived Results ResInsight Features Most of the central features of ResInsight visualization setup also applies to ABAQUS Odb models, like range filters and property filters. Well Paths will also show up along with the odb models.\nThe Octave interface, however, does not support the odb-data yet.\nTime Step Filtered Import By choosing the Import Geo Mechanical Model (Time Step Filtered) option, it is possible to limit the amount of time steps that are imported to improve the speed and reduce the memory use. If this option is chosen a tile step filter dialog is shown after selecting the file to import.\nThe data can be filtered by skipping Days, Weeks, Months or Years in the top Filter Type drop down list and the range of time steps can be picked in the First Time Step and Last Time Steps lists. Furthermore, the final selection can be fine tuned by selecting or deselecting individual time steps in the Select From N Time Steps list. ResInsight will ignore any data that doesn’t match these time steps and will thus reduce the amount of data imported.",
    "description": "ResInsight can be built with support for reading and displaying geomechanical analysis models produced by ABAQUS in the *.odb format. This is only possible if you or your organization has a copy of the ODB-Api from Simulia, and a valid license to use it.\nIf you have, and would like to a use these features, please see Build Instructions for a description on how to build ResInsight and how to include the support for odb-files.",
    "tags": [],
    "title": "Geomechanical Data",
    "uri": "/import/geomechanicaldata/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data \u003e Grid Property Calculator",
    "content": "ResInsight offers a built-in property calculator for grid parameters. The Grid Property Calculator enables arithmetic expressions to be parsed and calculated for visualization purposes. The expression can be applied to one or multiple grid models, and the expression text can be stored to a file for later use.\nExpressions can be saved to a text file using the Export Calculations button. The default location for calculations can be set in Preference-\u003eImport/Export.\nMore details on mathematical operations are described in Calculator Expressions\nInvoking the Grid Property Calculator Invoke the the Grid Property Calculator by pressing the calculator icon in the menu bar or by right-clicking Cell Result in Project Tree.\nExample using Grid Property Calculator As shown, the Grid Property Calculator is invoked by right-clicking Cell Result in Project Tree. As seen below, the Grid Property Calculator is per default prefilled with the simple summation Calculation_1 := x + y. This simple summation suffices for exemplifying its use. However, you may change name of the calculation and add additional variables and arithmetic operators in the Expression field.\nNote\rIf statements are also supported with the following syntax NEW_TRANX := if((TRANX \u003c 0.01), 0.01, TRANX)\nThe next step is to define the variables x and y. An easy way to define each variable is to drag and drop properties from Data Sources. See screenshot below for drag and drop of SOIL from Data Sources to the row of variable x in Grid Property Calculator (emphasized in red). Continue with drag and drop of SGAS to define y.\nFinally, press Calculate to perform the actual calculation.\nThe calculated result is accessable via Property Editor as Type Generated Result Property.\nReference Procedure using Grid Property Calculator Invoke the the Grid Property Calculator by right-clicking Cell Result in Project Tree. Define the expression for calculation by the involved variables and arithmetic operators Type the name of calculation, required variables and aritmetic operators into Expression Press button Parse Expression to verify the expression and referrals to actual variables Define each actual variable referred by the expression, either manually or by drag and drop from Data Sources Press Calculate to perform the actual calculation Access the calculated result in Property Editor as Type Generated Result Property Storage of Expressions to File Use Import Calculations and Export Calculations to store and load expressions to and from a file.",
    "description": "ResInsight offers a built-in property calculator for grid parameters. The Grid Property Calculator enables arithmetic expressions to be parsed and calculated for visualization purposes. The expression can be applied to one or multiple grid models, and the expression text can be stored to a file for later use.\nExpressions can be saved to a text file using the Export Calculations button. The default location for calculations can be set in Preference-\u003eImport/Export.",
    "tags": [],
    "title": "Grid Property Calculator",
    "uri": "/calculated-data/grid-property-calculations/gridpropertycalculator/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "ResInsight can require a considerable amount of memory to hold all the grids and necessary result variables. If the requirements starts approaching the available physical memory on the workstation, ResInsight may become unstable and crash, as the operating system starts freeing memory to avoid system failure. To help alleviate this, ResInsight has some built-in memory management tools.\nMemory Indicator The tools are available from the memory indicator in the bottom right corner of the main 3D window.\nIf the available physical memory dips below 5% of the total physical memory on Windows, a warning will be displayed in the memory indicator. This threshold is 17.5% on Linux, as the memory manager on Linux is more likely to start stopping processes when memory is low. The amount of memory used will also be displayed in progress bars during operations in ResInsight if the available memory is less than 50% of total physical memory. In any case, ResInsight is likely to be stopped without warning by the operating system if the amount of used memory starts approaching the total physical memory on the computer.\nMemory Management Tool It is possible to click on the memory used indicator to open up a dialog allowing the user to clear results from memory when they are no longer required. Any tool that is not currently used in a view may be cleared by selecting the result and clicking the Clear Checked Data From Memory. Note that, depending on your operating system, this may not result in a reduction in the memory reserved by the application. However, the actual use will have gone down and it may now be possible to run more operations without running out of memory.\nDetailed usage of memory can be seen by clicking Show Memory Report. By default, results will be shown for the active case. However, a specific case may be selected in the top drop down list. The pictures below show the dialog for both Eclipse and Abaqus results.",
    "description": "ResInsight can require a considerable amount of memory to hold all the grids and necessary result variables. If the requirements starts approaching the available physical memory on the workstation, ResInsight may become unstable and crash, as the operating system starts freeing memory to avoid system failure. To help alleviate this, ResInsight has some built-in memory management tools.",
    "tags": [],
    "title": "Memory Management",
    "uri": "/misc/memorymanagement/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Best Practices",
    "content": "Summary Data Summary data is usually available as SMSPEC and UNSRMY files. UNSMRY files are stored in a binary format, and all data for one time step is stored one section. When extracting data for all time steps for a single summary vector, data must be read from multiple sections. This can give bad performance for large datasets.\nESMRY File Format *.ESMRY files contains the same data as SMSPEC/UNSMRY. The data in these files store all data for a summary vector in one section to give significantly better performance when accessing single summary vectors compared to SMSPEC/UNSMRY.\nResInsight will by default use this file format.\nIf no ESMRY files are available, ResInsight can produce these files. This can be configured in Preferences. Note that all summmary data is read and write into a new ESMRY file. This operation will take some time, and can take minutes for a large ensemble.",
    "description": "Summary Data Summary data is usually available as SMSPEC and UNSRMY files. UNSMRY files are stored in a binary format, and all data for one time step is stored one section. When extracting data for all time steps for a single summary vector, data must be read from multiple sections. This can give bad performance for large datasets.\nESMRY File Format *.ESMRY files contains the same data as SMSPEC/UNSMRY. The data in these files store all data for a summary vector in one section to give significantly better performance when accessing single summary vectors compared to SMSPEC/UNSMRY.",
    "tags": [],
    "title": "Summary Data Import",
    "uri": "/best-practices/summarydata/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Summary Plot Source Stepping enables the user to efficiently step through multiple vectors, wells, summary cases, ensembles, groups, regions, blocks, and aquifers for plotting purposes. Source stepping is available from both the Source Stepping Toolbar and the Property editor as described below.\nSource Stepping using the toolbar The toolbar for source stepping is:\nFollowing this example, the available options are:\nExplicitly setting Step By to vector WBHP by Change existing plot to display previous or next vector by pressing one of the buttons Step previous or next vector and add a plot by the buttons Step previous or next vector and add a curve by the buttons Source Stepping using the Property Editor Source Stepping is also available through the Property Editor. By selecting a subplot in Plots as in the example below, the Data Sources section of the Property editor emerges. As seen, ResInsight per default lists the most probable stepping dimensions by a consideration of the actual plot being a vector of a specific well.\nChange Well Data Source from 3D View If multiple plots are using well as data source, the plot content can be uptedate by clicking on well geometry in 3D. This can be efficient if there are many wells in a model.\nCreate plots based on well summary vectors Make sure source stepping Step By is set to Well Activate the update of plots by clicking on button with tool tip text “Update wells used in plots from well selections in 3D view.” Open a 3D view, click on wells The well data source in changed, and plot content will be updated accordingly Source Stepping dimensions ResInsight decides default step dimensions based on a consideration of visible curves in the current plot or subplot. For instance, well stepping is set as default if all curves display data from the same well, c.f. examples above. However, the complete set of source stepping dimensions is always available in both the toolbar and Property Editor:\nVector Well Summary Case Ensemble Group Region Block Aquifer When clicking a next or previous button, all curves are changed to display data for the selected source stepping dimension. For instance, when clicking with Well as source stepping dimension, all curves in the current plot are changed to display data for previous/next well.",
    "description": "Summary Plot Source Stepping enables the user to efficiently step through multiple vectors, wells, summary cases, ensembles, groups, regions, blocks, and aquifers for plotting purposes. Source stepping is available from both the Source Stepping Toolbar and the Property editor as described below.\nSource Stepping using the toolbar The toolbar for source stepping is:",
    "tags": [],
    "title": "Summary Plot Source Stepping",
    "uri": "/plot-window/summarysourcestepping/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "ResInsight can import well paths from simple Ascii files. In addition, ResInsight is able to retrieve well paths from an Equinor internal web service.\nResInsight also supports creation of your own user-defined well paths. See Create Well Paths\nAscii Well Paths The command File -\u003e Import -\u003e Well Data -\u003e Import Well Paths From File will read the well paths in the selected file, and create one entry for each well path under the Wells item in the Project Tree.\nImporting well paths from OSDU Well path trajectories can be downloaded from an OSDU cloud service. When storing the project file, the reference to the OSDU trajectory is stored. This will ensure that authentication and access is checked before the trajectory is downloaded.\nDownload of OSDU trajectories will not work if the project is used on a server, as the user is required to authenticate before download of data.\nThe command File -\u003e Import -\u003e Well Data -\u003e Import Well Paths From OSDU launches a wizard to guide you through the process of selecting the well paths you need. Having completed the wizard, the imported wells are accessible as Items under the Wells item in the Project Tree.\nOSDU Cloud Service\nInfo\rAccess to Cloud Data Make sure you have access to “OSDU - Base acces” and “Linux Exclusion Conditional Access”.\nWell Path Visualization All the imported well paths are available below the Wells item in the Project Tree.\nThe visible wells are always shown in all the 3D Views in the complete project, so the toggles and settings control the overall project visibility of the Well Paths. The Property Editor of the Wells item is shown below\nGlobal well path visibility – This option forces the well paths on or off, ignoring the individual settings unless it is set to Individual. Clip Well Paths – This option hides the top of the Well Paths to avoid displaying the very long lines from the reservoir to the sea surface. Well Path clipping depth distance – This number is the distance from the top of the reservoir to the clipping depth. Individual Well Path A well path will hold well log data and well path data imported from files. A well path file is placed inside the well path item, while one or more well log files are placed as child items under the well path in the project tree.\nImporting Well Log Files Well log data is imported from LAS-files.\nWell Path Property Editor The well path property editor lets the user control the appearance of the well path and associate the well path to a simulation well. It also gives some information about the well path metadata.\nAppearance group – Settings in this group affect the well path appearance in the 3D view File group – Information about the well path file Simulation Well group – Associated simulation well. ResInsight will try to associate each well path with a simulation well. This is done in the exact same way as looking up an existing well path. If the auto-association fails, the user can set the correct simulation well here. Well Info group – Metadata for the well path Well Picks group – Information about imported well picks file containing data for the current well path Casing Design Some Casing Design elements can be assigned to the well path by selecting Create Casign Design from the right-click menu of the well path.\nThis will create a new child object for the Well Path, named Casing Design. In the Casign Design Property editor well path containment properties such as Casing (with Casing Shoe) and Liner can be added to the well path along with a start and end depth and a diameter.\nThese can be visualised in the 3D View and Well Log Plots on a Well Log Track.\nAscii Well Paths File Format The supported ASCII format is quite flexible but the main requirements are:\nEach data line must contain four numbers: X Y TVD(MSL) MD(RKB) separated with white-space. Lines starting with \"--\" or \"#\" is considered to be comment lines A line starting with none-number-characters are used as a well name after the following rules: If the line contains a pair of : \"'\", \"`\", \"´\", \"’\" or \"‘\" the text between the quotation marks is used as a well name. If the line contains the case insensitive string “name” with an optional “:” after then the rest of the line is used as a well name. If there are no quotes or “name”’s, the complete line is used as a well name. If there are several consecutive name-like lines, only the last one will be used If a well name is found, a new well is created and the following data points are added to it. Example 1: WELLNAME: WELL1 6507.1\t725\t2542\t2590 6523.5\t757\t2549\t2626.6 6523.5\t760\t2559\t2637.1 -999 WELLNAME: WELL2 550.7 1020.2 2410 2410 551 1004.1 2422.2 2430.2 555.2 993.9 2425 2441.6 -999\rExample 2: X Y TVD(MSL) MD(RKB) Name Well_1 6507.1\t725\t2542\t2542 6523.5\t757\t2549\t2578.6 6523.5\t760\t2559\t2589.1 -- A Comment new well This is not its name Name Well_2 550.7\t1020.2\t2410\t2520 551\t1004.1\t2422.2\t2540.2 # a comment inside the data 555.2\t993.9\t2425\t2551.6 3Q AHB-J 5507.0\t4638.5\t0.0\t0.0 5507\t4638.5\t1628.6\t1628.6",
    "description": "ResInsight can import well paths from simple Ascii files. In addition, ResInsight is able to retrieve well paths from an Equinor internal web service.\nResInsight also supports creation of your own user-defined well paths. See Create Well Paths\nAscii Well Paths The command File -\u003e Import -\u003e Well Data -\u003e Import Well Paths From File will read the well paths in the selected file, and create one entry for each well path under the Wells item in the Project Tree.",
    "tags": [],
    "title": "Well Paths",
    "uri": "/wells-and-completions/wellpaths/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases",
    "content": "ResInsight Installation Download ZIP binary distribution from https://github.com/OPM/ResInsight/releases Extract content from ZIP file Start ResInsight.exe Info\rThe binary distribution does not support ABAQUS odb files. For building ResInsight with ABAQUS support, see Build Instructions.\nOctave Installation (optional) Download Octave-4.0.0 and install it. (Newer versions will not work) Launch ResInsight.exe, open Edit-\u003ePreferences. On the Octave tab, enter the path to the Octave command line interpreter executable.\n( Usually C:\\Your\\Path\\To\\Octave-x.x.x\\bin\\octave-cli.exe ) Info\rA binary package of ResInsight will normally not work with other Octave versions than the one it is compiled with.\nInfo\rYou have to point to the cli binary in the windows octave installation. The octave.exe will not work as it is launching the octave GUI.\nFAQ Windows Firewall notice ResInsight can communicate with Python and other cloud services. A Windows Firewall message might appear when you launch the application. Choose Allow to ensure correct behavior for these features.\nSmartscreen warnings When launching ResInsight at the first time, a Smartscreen warning might be displayed. This is a security feature by Microsoft, and will warn the user when an unknown program is launched. This warning is displayed once for each installation.\nPress the More info link in the upper left section.\nNotice the information and digital signature by Ceetron Solutions AS.\nPress Run anyway, and the application starts. This warning is only displayed once.",
    "description": "ResInsight Installation Download ZIP binary distribution from https://github.com/OPM/ResInsight/releases Extract content from ZIP file Start ResInsight.exe Info\rThe binary distribution does not support ABAQUS odb files. For building ResInsight with ABAQUS support, see Build Instructions.\nOctave Installation (optional) Download Octave-4.0.0 and install it. (Newer versions will not work) Launch ResInsight.exe, open Edit-\u003ePreferences. On the Octave tab, enter the path to the Octave command line interpreter executable.\n( Usually C:\\Your\\Path\\To\\Octave-x.x.x\\bin\\octave-cli.exe ) Info\rA binary package of ResInsight will normally not work with other Octave versions than the one it is compiled with.",
    "tags": [],
    "title": "Windows Installation",
    "uri": "/releases/windows-installation/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Getting Started",
    "content": "Integrated ResInsight Help If you need the user manual for an object, you can use the right-click menu of the object and select Search Help for:. This will open up the user manual for the selected object from resinsight.org.\nResInsight Online Tutorials ResInsight Tutorial Videos (YouTube) ResInsight Tutorials ResInsight Help Menu ResInsight Help menu options are:\nAbout – Opens a dialog with information on ResInsight version, enabled features, and technical information of subsystems. Command Line Help – Provides an overview of ResInsight Command line parameters and their syntax. Summary Command Line Help – Provides an overview of ResInsight Summary command line parameters and their syntax. Users Guide – Opens the ResInsight documentation in your default browser Search Help – Searches the ResInsight documentation for help on the selected item in Project Tree. Please note that the function key F1 is a shortcut to this menu option. ResInsight Documentation Overview resinsight.org - Documentation for latest stable release api.resinsight.org - Documentation of Python API beta.resinsight.org - Latest documentation (not yet released)",
    "description": "Integrated ResInsight Help If you need the user manual for an object, you can use the right-click menu of the object and select Search Help for:. This will open up the user manual for the selected object from resinsight.org.\nResInsight Online Tutorials ResInsight Tutorial Videos (YouTube) ResInsight Tutorials ResInsight Help Menu",
    "tags": [],
    "title": "Help Menu and Documentation",
    "uri": "/getting-started/helpmenuanddocumentation/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "ResInsight is able to import transient results from the simulation software SourSimRL to combine reservoir souring simulation data with an Eclipse case for analysis and visualization. Results from SourSimRL in its sourres binary format can be imported using the SourSim File Name field as shown below:\nImporting such a file will enable result type called SourSimRL as explained in Eclipse Result Types",
    "description": "ResInsight is able to import transient results from the simulation software SourSimRL to combine reservoir souring simulation data with an Eclipse case for analysis and visualization. Results from SourSimRL in its sourres binary format can be imported using the SourSim File Name field as shown below:\nImporting such a file will enable result type called SourSimRL as explained in Eclipse Result Types",
    "tags": [],
    "title": "SourSimRL Results",
    "uri": "/import/soursimrlresults/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "When the user is requested to specify a list of integer values, it can be useful to input the list using a text string. This can be a selection of K slices, a selection of realisations or a selection of integer values in a integer cell result.\nSupported text format 5,10-13,20-26:2\rThis text will produce an integer array with values\n[5, 10, 11, 12, 13, 20, 22, 24, 26]\rUsing the syntax “20-26:2” will produce integer values in the range at a step of 2, resulting in [20, 22, 24, 26]",
    "description": "When the user is requested to specify a list of integer values, it can be useful to input the list using a text string. This can be a selection of K slices, a selection of realisations or a selection of integer values in a integer cell result.\nSupported text format 5,10-13,20-26:2\rThis text will produce an integer array with values\n[5, 10, 11, 12, 13, 20, 22, 24, 26]\rUsing the syntax “20-26:2” will produce integer values in the range at a step of 2, resulting in [20, 22, 24, 26]",
    "tags": [],
    "title": "Advanced Text Input",
    "uri": "/misc/advancedtextinput/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data \u003e Grid Property Calculator",
    "content": "Calculate statistics for sum of mobile oil for an ensemble Workflow description\nImport an ensemble of grid models with identical IJK into a Grid Case Group. Create a view on one of the source grid models, and create a cell filter for the region of interest. Create an expression for mobile oil MOBILE_OIL := if(((SOIL-SOWCR) \u003c 0.00), 0.00, PORV*(SOIL-SOWCR)) Select a subset of time steps. This will significantly affect performance for for large grids with many time steps. Create an expression to aggregate values for all visible cells SUM_MOBILE_OIL := sum(MOBILE_OIL) Use the result from the previous calculation as input to the variable, use MOBILE_OIL from the Generated category. Make sure Apply to All Cases is checked. The individual values for each realization and time step is displayed as text in Messages. The statistics for each time step is displayed at the bottom. See draft workflow with screenshots here: https://github.com/OPM/ResInsight/discussions/10913",
    "description": "Calculate statistics for sum of mobile oil for an ensemble Workflow description\nImport an ensemble of grid models with identical IJK into a Grid Case Group. Create a view on one of the source grid models, and create a cell filter for the region of interest. Create an expression for mobile oil MOBILE_OIL := if(((SOIL-SOWCR) \u003c 0.00), 0.00, PORV*(SOIL-SOWCR)) Select a subset of time steps. This will significantly affect performance for for large grids with many time steps. Create an expression to aggregate values for all visible cells SUM_MOBILE_OIL := sum(MOBILE_OIL) Use the result from the previous calculation as input to the variable, use MOBILE_OIL from the Generated category. Make sure Apply to All Cases is checked. The individual values for each realization and time step is displayed as text in Messages. The statistics for each time step is displayed at the bottom.",
    "tags": [],
    "title": "Aggregation of Grid Cell Values",
    "uri": "/calculated-data/grid-property-calculations/aggregationofgridcellvalues/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Build From Source",
    "content": "Dependencies and Prerequisites This page is mainly build instructions for Ubuntu, but some comments are also added for RHEL8.\nBasic instructions without Python binding and GRPC.\nConfiguration and build Tool Minimum version gcc 11 python 3.8 Qt 6.4 It is possible to use Qt 6.4 for building ResInsight, but some install features introduced in Qt 6.5 are not supported. Qt 6.7 has some changes related to theming that is causing some unwanted visual effects. This is currently investigated.\nUpdate apt installer\nsudo apt update\rInstall GCC and related tools\nsudo apt install build-essential curl zip unzip tar flex bison\rSet default compiler\nDependencies for RHEL8\nyum install curl zip unzip tar flex bison perl-IPC-Cmd gcc-toolset-10 freeglut\rClone and update sub modules git clone https://github.com/OPM/ResInsight\rcd ResInsight\rgit submodule update --init\rBuild and install required dependencies using vcpkg vcpkg is located in the folder ThirdParty/vcpkg. The packages to be installed is specified in vcpkg.json. The actual install of the selected packages are done in the CMake configure step.\nThirdParty/vcpkg/bootstrap-vcpkg.sh\rQt - package manager Qt6 can be installed using the package manager for Ubuntu\napt install qt6-base-dev qt6-base-private-dev qt6-charts-dev qt6-networkauth-dev libqt6svg6-dev\rUbuntu 22.04 : Qt 6.2.4\rUbuntu 24.04 : Qt 6.4.2\rPlease note that 6.4 is fully supported for build, but some install features are not supported.\nQt - aqtinstall Here is a short description on how to install a custom Qt version.\naqtinstall is a Python tool used to install precompiled versions of Qt. Other ways to install Qt is described official Qt documentation\nCreate a root folder for Qt installations. In this folder, create a virtual environment for aqtinstall:\npython3 -m venv myvenv\rsource myvenv/bin/activate\rpip3 install aqtinstall\raqt install-qt linux desktop 6.6.3 -m qtcharts qtnetworkauth\rBuild ResInsight Install Ninja build tool\nsudo apt-get install ninja-build\rThe configuration flags for a basic build is given in CMakePresets.json in the root of the repository. Configuration flags specific for the system to build on can be specified in CMakeUserPresets.json. This file is ignored by git.\nCreate a copy of CMakeUserPresets-example.json and rename to CMakeUserPresets.json Update the path to your local installation of Qt6 for the key CMAKE_PREFIX_PATH in CMakeUserPresets.json Set current working folder to the root folder of the ResInsight repository. Execute the following commands to build ResInsight:\ncmake . --preset=linux-base\rcd build\rninja\rCMake Configuration",
    "description": "Dependencies and Prerequisites This page is mainly build instructions for Ubuntu, but some comments are also added for RHEL8.\nBasic instructions without Python binding and GRPC.\nConfiguration and build Tool Minimum version gcc 11 python 3.8 Qt 6.4 It is possible to use Qt 6.4 for building ResInsight, but some install features introduced in Qt 6.5 are not supported. Qt 6.7 has some changes related to theming that is causing some unwanted visual effects. This is currently investigated.",
    "tags": [],
    "title": "Build Instructions Ubuntu",
    "uri": "/releases/build-from-source/build-instructions-ubuntu/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Scripting",
    "content": "The command file interface allows a sequence of specified commands to be run in order from the command line. The interface is used by supplying the command file as a command line parameter. Once the command file is finished executing, ResInsight will exit.\nIt is possible to use these commands directly from a Python script. For further details, please see the ResInsight Python API.\nCommand List Case Control Commands openProject closeProject setStartDir loadCase createGridCaseGroup createStatisticsCase replaceCase replaceSourceCases Export Commands setExportFolder exportMultiCaseSnapshots exportSnapshots exportProperty exportPropertyInViews exportWellPathCompletions exportSimWellFractureCompletions exportMsw exportWellPaths exportVisibleCells exportFlowCharacteristics Other Commands runOctaveScript setMainWindowSize computeCaseGroupStatistics setTimeStep scaleFractureTemplate setFractureContainment createMultipleFractures createLgrForCompletions createSaturationPressurePlots Syntax The command file is comprised of a set of commands to be executed in order. Each command must begin on a separate line, i.e. there cannot be two commands on the same line.\nThe line starts with the command name, followed by parenthesis. Within the parenthesis, parameters can be supplied. Each parameter must be named, followed by an equals sign and its value.\nAs an example; openProject(path=\"/path/to/ResInsightProject.rsp\") will execute the command openProject with the parameter path. path is a string, see Types for a list of all types a parameter can have.\nNot all parameters are required, in which case they can be omitted and their value will be defaulted. The order of parameters does not matter.\nCommand file examples are displayed in sections like this.\rTypes There are different types of parameters that can be supplied.\nType Input Example Integer Number 5 Double Decimal number 3.14 String Sequence of characters contained in quotes (\"\")1 “/path/to/file” Enum Choice of a set of given options ALL Boolean true or false true List Multiple choices of another type, written within square brackets ([]) separated by a comma (,) [1, 2, 3] 1 The backslash (\\) character is used as an escape character within strings, so to use a quote within a string, use \"escape \\\" with \\\"\". To input a literal backslash character, use \"\\\\\".\nCase Control Commands openProject Opens a ResInsight project file.\nParameter Description Type Required path File path to the project file String ✔ openProject(path=\"/home/user/ResInsightProject.rsp\")\rcloseProject Closes the current open project.\ncloseProject()\rsetStartDir Set startup directory.\nParameter Description Type Required path Path to directory to use as startup directory String ✔ setStartDir(path=\"/home/user\")\rloadCase Import Eclipse case from file.\nParameter Description Type Required path File path to the case to load String ✔ loadCase(path=\"/home/user/reservoir.EGRID\")\rcreateGridCaseGroup Create a Grid Case Group from a list of files.\nParameter Description Type Required casePaths List of Paths to Case Files String ✔ createStatisticsCase Create a Statistics Case in a Grid Case Group.\nParameter Description Type Required caseGroupId ID to the Case Group Integer ✔ createGridCaseGroup(path=[\"/home/user/reservoir.EGRID\", \"/home/user/other_reservoir.EGRID\"])\rcreateStatisticsCase(caseGroupId=0)\rreplaceCase Replaces a case in the current project with the specified new case.\nopenProject must be called before this command to set which project file is to be used when replacing cases. This command re-opens the project with the new case replaced. To replace more than one case at the same time, use replaceSourceCases.\nParameter Description Type Required newGridFile File path to the new grid file to replace with String ✔ caseId ID of the case to replace. Defaults to first case Integer replaceCase(newGridFile=\"/home/user/otherReservoir.EGRID\", caseId=4)\rreplaceSourceCases Replaces multiple source cases in the current project.\nopenProject must be called before this command to set which project file is to be used when replacing cases. This command re-opens tje project with the cases replaced.\nParameter Description Type Required gridListFile File path to file containing list of cases to replace with String ✔ caseGroupId ID of group to replace cases in. Defaults to first group Integer replaceSourceCases(gridListFile=\"C:/resinsight/replacement_files.txt\")\rExport Commands exportMultiCaseSnapshots Replaces the first case in the current project with each case in the given file and saves snapshots of all views.\nopenProject must be called before this command to set which project file is to be used when replacing cases.\nFolder to output snapshots should be set using setExportFolder with SNAPSHOTS type.\nParameter Description Type Required gridListFile File path to file containing list of cases to create snapshots of String ✔ exportMultiCaseSnapshots(gridListFile=\"C:\\\\resinsight\\\\replacement_files.txt\")\rexportSnapshots Export snapshots of specified type.\nFolder to output snapshots should be set using setExportFolder with SNAPSHOTS type.\nParameter Description Type Required type Type of snapshots to export. Choices: ALL, VIEWS, PLOTS. Defaults to ALL Enum prefix Exported file name prefix. Defaults to no prefix String caseId ID of case for export, defaults to -1 meaning all cases Integer exportSnapshots(type=PLOTS)\rexportProperty Exports property values for all cells in the grid to file in Eclipse format.\nParameter Description Type Required caseId ID of case for export Integer ✔ timeStep The time step index for export Integer ✔ property Name of property to export String ✔ eclipseKeyword Eclipse keyword used as text in export header. Defaults to the value of property parameter String undefinedValue Value to use for undefined values. Defaults to 0.0 Double exportFile Filename for export. Defaults to the value of property parameter String exportProperty(caseId=1, timeStep=4, property=\"SOIL\")\rexportPropertyInViews Exports property values for all cells in the grid to file in Eclipse format. Use specified cell result in view to define the export property. One file per view will be exported.\nParameter Description Type Required caseId ID of case to export property from Integer ✔ viewNames Name of views to export from. If not specified, all views are exported List of String undefinedValue Value to use for undefined values. Defaults to 0.0 Double exportPropertyInViews(caseId=1)\rexportPropertyInViews(caseId=1, viewNames=[\"view A\", \"view 4\"])\rexportWellPathCompletions Export well path completions.\nParameter Description Type Required caseId ID of case to export well paths for Integer ✔ timeStep The time step to export completions for Integer ✔ wellPathNames Names of well paths to export for. Defaults to all checked wells. If a list of well names are provided, those wells are included even if unchecked List of String fileSplit How the files are split. Choices: UNIFIED_FILE, SPLIT_ON_WELL, SPLIT_ON_WELL_AND_COMPLETION_TYPE. Defaults to SPLIT_ON_WELL_AND_COMPLETION_TYPE Enum compdatExport Chose whether transmissibilities are exported. Choices: TRANSMISSIBILITIES, WPIMULT_AND_DEFAULT_CONNECTION_FACTORS. Defaults to TRANSMISSIBILITIES Enum includePerforations Whether main bore perforations should be included. Defaults to true Boolean includeFishbones Whether fishbones should be included. Defaults to true Boolean excludeMainBoreForFishbones Whether main bore completions should be excluded for cells with fishbones. Defaults to false Boolean combinationMode Combination mode. Choices: INDIVIDUALLY, COMBINED. Defaults to INDIVIDUALLY Enum exportWellPathCompletions(caseId=3, timeStep=5, includeFishbones=false)\rexportSimWellFractureCompletions Export fracture completions for simulation wells.\nParameter Description Type Required caseId ID of case to export simulation well fracture completions for Integer ✔ viewName The name of the view to export simulation well fracture completions for. Since view names are not unique, all views sharing the given name will be used String ✔ timeStep The time step to export completions for Integer ✔ simulationWellNames Names of simulation wells to export for. Defaults to all checked wells. If a list of names are provided, those wells are included even if unchecked List of String fileSplit How the files are split. Choices: UNIFIED_FILE, SPLIT_ON_WELL, SPLIT_ON_WELL_AND_COMPLETION_TYPE. Defaults to UNIFIED_FILE Enum compdatExport Chose whether transmissibilities are exported. Choices: TRANSMISSIBILITIES, WPIMULT_AND_DEFAULT_CONNECTION_FACTORS. Defaults to TRANSMISSIBILITIES Enum exportSimWellFractureCompletions(caseId=3, viewName=\"View 2\", timeStep=5)\rexportMsw Export multi-segment wells.\nParameter Description Type Required caseId ID of case to export well paths for Integer ✔ wellPath Name of well path to export well segments for String ✔ exportMsw(caseId=1, wellPath=\"MainWell\")\rexportWellPaths Export well paths.\nParameter Description Type Required wellPathNames Names of well paths to export for. Defaults to all checked wells. If a list of well names are provided, those wells are included even if unchecked List of String mdStepSize Spacing (measured depth) between each sample along the well path. Default to 5.0 Double exportWellPaths(wellPathNames=[\"B-1H\", \"B-2H\"], mdStepSize=1.5)\rexportVisibleCells Export visible cells\nParameter Description Type Required caseId ID of case to export cells for Integer ✔ viewName Name of the view associated with the specified case Double ✔ exportKeyword The keyword to export. Choices: FLUXNUM or MULTNUM. Default: FLUXNUM Enum visibleActiveCellsValue Value to use for visible active cells. Default: 1 Integer hiddenActiveCellsValue Value to use for hidden active cells. Default: 0 Integer inactiveCellsValue Value to use for inactive cells. Default: 0 Integer exporVisibleCells(caseId=0, viewName=\"View 1\", exportKeyword=MULTNUM)\rexportFlowCharacteristics Export Flow Characteristics data to text file in CSV format\nParameter Description Type Required caseId ID of case Integer ✔ timeSteps Time step indices List of Integer ✔ injectors Injector names List of Strings producers Producer names List of Strings fileName Export file name Integer minimumCommunication Minimum Communication, defaults to 0.0 Integer aquiferCellThreshold Aquifer Cell Threshold, defaults to 0.1 Integer exportFlowCharacteristics(caseId=0, timeSteps=[1, 5, 6], injectors=[\"INJA\", \"INJB\"], producers=[\"PROD_F\"], fileName=\"myData.csv\")\rsetExportFolder Set the folder to export different types of data to. Set this before attempting to export data to ensure it is exported to desired location.\nParameter Description Type Required type Type of export folder to set. Choices: COMPLETIONS, SNAPSHOTS, PROPERTIES, STATISTICS Enum ✔ path Directory to export the given type to String ✔ createFolder If true, create the folder when required. Default false. Boolean setExportFolder(type=SNAPSHOTS, path=\"/home/user/snapshots\")\rOther runOctaveScript Execute an Octave script.\nParameter Description Type Required path Path to the octave script to execute Integer ✔ caseIds The cases to run the octave script on. Defaults to running the script without a specified case List of Integer runOctaveScript(path=\"/home/user/octave/something.m\", caseIds=[1,2,6])\rsetMainWindowSize Resize the main window to the specified size.\nParameter Description Type Required width The width to set for the main window Integer ✔ height The height to set for the main window Integer ✔ setMainWindowSize(width=1920, height=1200)\rcomputeCaseGroupStatistics Compute statistics for statistics cases.\nParameter Description Type Required caseIds IDs of statistics cases to compute. Default is all statistics cases List of Integer computeCaseGroupStatistics(caseIds=[5])\rcomputeCaseGroupStatistics(caseIds=[2,4,8])\rsetTimeStep Set the time step for a given case. The time step is used for all views on the case.\nParameter Description Type Required caseId ID of case to set time step for Integer ✔ timeStep Index of time step to switch to Integer ✔ setTimeStep(caseId=1, timeStep=8)\rscaleFractureTemplate Scale fracture template parameters.\nParameter Description Type Required id ID of fracture template Integer ✔ halfLength Half Length scale factor Double height Height scale factor Double dFactor D-factor scale factor Double conductivity Conductivity scale factor Double scaleFractureTemplate(id=1, width=2, height=1.5)\rsetFractureContainment Set fracture template containment parameters.\nParameter Description Type Required id ID of fracture template Integer ✔ topLayer Top layer containment Integer ✔ baseLayer Base layer containment Integer ✔ setFractureContainment(id=1, topLayer=2, baseLayer=7)\rcreateMultipleFractures Create multiple fractures on one or more well paths.\nParameter Description Type Required caseId Case ID Integer ✔ templateId Fracture template id Integer ✔ wellPathNames Well path names. Default: All well paths List of Strings minDistFromWellTd Min distance from well path tip. Default: 100.0 m Double maxFracturesPerWell Max fractures per well. Default: 100 Integer topLayer Top K layer. Default: Top layer from current model Integer baseLayer Base K layer. Default: Bottom layer from current model Integer spacing Distance between fractures. Default: 300.0 m Double action How to handle existing fractures. Choices: APPEND_FRACTURES, REPLACE_FRACTURES. The replace option will delete all existing fractures before adding new ones. Default: APPEND_FRACTURES Enum createMultipleFractures(caseId=0, templateId=1, wellPathNames=[\"B-1H\", \"B-2H\"], action=REPLACE_FRACTURES)\rcreateLgrForCompletions Create temporary LGRs for completions on the selected well paths. The splitType parameter controls which main grid cells to split into LGRs. The LGR_PER_CELL option splits only those main grid cells that intersect with a completion. The LGR_PER_COMPLETION option splits all main grid cells that are located within an IJK bounding box covering all intersected cells for each completion. The LGR_PER_WELL works like the previous option, but the bounding box covers intersected cells for all completions on a well path.\nParameter Description Type Required caseId ID of case to create LGRs for Integer ✔ timeStep The time step to create LGRs for Integer ✔ wellPathNames Names of well paths to export for. Defaults to all checked wells. If a list of well names are provided, those wells are included even if unchecked List of String refinementI Size of the LGR along the I axis, in each main grid cell. Integer ✔ refinementJ Size of the LGR along the J axis, in each main grid cell. Integer ✔ refinementK Size of the LGR along the K axis, in each main grid cell. Integer ✔ splitType How to split the LGRs. Options: LGR_PER_CELL, LGR_PER_COMPLETION, LGR_PER_WELL. Default option is LGR_PER_COMPLETION Enum createLgrForCompletions(caseId=0, timeStep=0, wellPathNames=[\"B-1H\", \"B-2H\"], refinementI=2, refinementJ=3, refinementK=4, splitType=LGR_PER_WELL)\rcreateSaturationPressurePlots Create saturation pressure plots for the specified cases.\nParameter Description Type Required caseIds IDs of cases to create plots for. Default is all cases List of Integer createSaturationPressurePlots(caseIds=[0])",
    "description": "The command file interface allows a sequence of specified commands to be run in order from the command line. The interface is used by supplying the command file as a command line parameter. Once the command file is finished executing, ResInsight will exit.\nIt is possible to use these commands directly from a Python script. For further details, please see the ResInsight Python API.\nCommand List Case Control Commands openProject closeProject setStartDir loadCase createGridCaseGroup createStatisticsCase replaceCase replaceSourceCases Export Commands setExportFolder exportMultiCaseSnapshots exportSnapshots exportProperty exportPropertyInViews exportWellPathCompletions exportSimWellFractureCompletions exportMsw exportWellPaths exportVisibleCells exportFlowCharacteristics Other Commands runOctaveScript setMainWindowSize computeCaseGroupStatistics setTimeStep scaleFractureTemplate setFractureContainment createMultipleFractures createLgrForCompletions createSaturationPressurePlots Syntax The command file is comprised of a set of commands to be executed in order. Each command must begin on a separate line, i.e. there cannot be two commands on the same line.",
    "tags": [],
    "title": "Command File",
    "uri": "/scripting/commandfile/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "ResInsight lets the user create new/custom well paths by clicking in the 3D view. A self created well path will behave the same way as an imported well path.\nBuilding a multilateral well path\nBuilding a well path Right click Wells in the project tree Select Create Well Path in the right-click menu. A new well node and a well targets node are created Click in the 3D view on locations where the well path should pass (well path targets) When finished placing targets, click on “Stop Picking Targets” in the property editor Well targets property editor fields:\nUTM Reference Point - Reference point. Defaults to the first target point clicked. Link Reference Point - All wells with this option checked will be moved as a group. Air Gap - Specify Air Gap, i.e. distance from Rotary Kelling Bushing to sea surface. Applies to well path export only. MD at First Target - Defines the measured depth at the first defined well target. Generate Target at Sea Level - Automatically create a target at sea level based on a reasonable well path from reservoir to sea level Well Targets Appearance\nControls the visibility and appearance of spheres at well target locations in addition to 3D interaction handles. The 3D interaction handles will be visible only when the Well Target object is selected, but the spheres will be always be visible if enabled.\nWell Targets\nList of all defined well targets. The editor will have a contrast background color when in picking state.\nRelative Coord - Target position relative to reference point. UTM Coords can be displayed using a checkbox option above the table. MD - Measured depth along the well path. DL in - Dog leg inwards [degrees/30m]. DL out - Dog leg outwards [degrees/30m]. Azi (deg) - Azimuth. Y axis is 0 degrees. If the Azi checkbox is ticked, the user can provide a fixed value for Azimuth. Inc (deg) - Inclination. Z axis is 0 degrees. If the Inc checkbox is ticked, the user can provide a fixed value for Inclination. The other columns defined by the “Est”-prefix displays the result of dog leg and direction values produced by the well path geometry estimation algorithm.\nA well path defined by well targets may be edited by either editing coordinates in the property editor or clicking and dragging targets in the 3D view.\nWell Target Interaction Operations When the well target handles are active in the 3D view, the following operations are possible when pressing left mouse button on well target handles:\nClicking and dragging the blue part of a target, it can be moved along the Z axis only. Clicking and dragging the magenta part of a target, it can be moved horizontally in the XY-plane.\nUser Interaction Description Mouse Move Modification of a single target Mouse Move + CTRL Modification of all well target on selected well (laterals excluded) Mouse Move + CTRL + SHIFT Modification of all well targets (laterals included) Well Path Duplication To duplicate an existing well path, select Duplicate from the right-click menu of a well path in the Project Tree or right-click on the well path geometry in the 3D view. This operation will create a new well path with a set of well targets.\nThe full geometry of the new well path is an estimate of the source well path, so the geometry might differ slightly.\nStarting well path at a fixed position The toggle Generate Target at Sea Level is on by default. If the well path is supposed to start at a predefined location at the sea level, the following procedure can be used:\nRight click Wells in the project tree Select Create Well Path in the right-click menu. A new well node and a well targets node are created. Clear Generate Target at Sea Level Right-click in the pink well target area, and select Insert new Target above In the UTM Reference Point field, enter the predefined UTM coordinate (usually, the depth is set to 0.0 for sea level) Continue clicking on geometry in the 3D view to add more well targets and make sure the first well target is defined by [0.00 0.00 0.00] to make sure the first target is located at the predefined UTM reference position Well Plan A well plan can be displayed by selecting Show Well Plan from the right-click menu of a generated well path.\n-- MDRKB CL Inc Azi TVDMSL NS EW Dogleg Build Turn 0.00000 0.00000 91.23218 67.46458 2560.64104 7320830.60875 456093.37763 0.00000 0.00000 0.00000 109.69761 109.69761 91.23218 67.46458 2558.28210 7320872.64113 456194.67560 0.00000 0.00000 0.00000 383.74602 274.04841 90.01335 94.84447 2555.24550 7320914.37090 456462.87518 3.00000 -0.13343 2.99727 518.95310 135.20708 88.73259 106.92696 2556.73062 7320888.88803 456595.39303 2.69569 -0.28418 2.68089 597.83872 78.88561 88.73259 106.92696 2558.47547 7320865.92593 456670.84259 0.00000 0.00000 0.00000 730.04479 132.20607 90.46303 138.71821 2559.42803 7320795.18191 456780.51358 7.22424 0.39267 7.21402 1087.97847 357.93368 92.23380 -164.19586 2550.23230 7320460.45997 456856.25443 4.78528 0.14842 -25.38856",
    "description": "ResInsight lets the user create new/custom well paths by clicking in the 3D view. A self created well path will behave the same way as an imported well path.\nBuilding a multilateral well path\nBuilding a well path Right click Wells in the project tree Select Create Well Path in the right-click menu. A new well node and a well targets node are created Click in the 3D view on locations where the well path should pass (well path targets) When finished placing targets, click on “Stop Picking Targets” in the property editor",
    "tags": [],
    "title": "Create Well Paths",
    "uri": "/wells-and-completions/createnewwellpaths/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Element property tables in ABQUS input file format can be imported into ResInsight and displayed as Element Results. This can be used to display material properties, or any scalar value on each element.\nTo view the data as a Color Result select the Result Position: Element ( See Geomechanical Results )\nA couple of property names are recognized and treated specially:\nMODULUS – Scaled by 1.0e-9 and shown as “Young’s Modulus” in the user interface RATIO – Shown as “Poisson’s Ratio” in the user interface File Format A couple of examples on the file format are shown below.\nResInsight searches for the first line containing *Distribution Table, then splits the following line by ,. These entries describes the expected property values to be found in the file.\nResInsight then searches for the data block by ignoring lines\nstarting with * and , does not have the expected column count when splitting the line by , When the datablock is found, the part of the line before . is stripped away, and first column is expected to be element ID\n** ELASTIC SETTING FOR EACH ELEMENT *Distribution Table, name=RSV_Res-1_Elastic_Table MODULUS, RATIO *Distribution, name=RSV_Res-1_ELASTICS, location=ELEMENT, Table=RSV_Res-1_Elastic_Table ** Description: Element-by-Element Elastic properties , 2. Res-1.210, 11198814808.2538, 0.19041 Res-1.209, 11207002032.1436, 0.19063 Res-1.208, 11222989223.0933, 0.19104 Res-1.207, 11202549454.349, 0.19051\r** DENSITY SETTING FOR EACH ELEMENT *Distribution Table, name=RSV_Res-1_Density_Table Density *Distribution, name=RSV_Res-1_DENSITIES, location=ELEMENT, Table=RSV_Res-1_Density_Table ** Description: Element-by-Element Densities , 1. Res-1.210, 2500 Res-1.209, 2500 Res-1.208, 2500 Res-1.207, 2500",
    "description": "Element property tables in ABQUS input file format can be imported into ResInsight and displayed as Element Results. This can be used to display material properties, or any scalar value on each element.\nTo view the data as a Color Result select the Result Position: Element ( See Geomechanical Results )\nA couple of property names are recognized and treated specially:\nMODULUS – Scaled by 1.0e-9 and shown as “Young’s Modulus” in the user interface RATIO – Shown as “Poisson’s Ratio” in the user interface File Format A couple of examples on the file format are shown below.",
    "tags": [],
    "title": "Element Property Table",
    "uri": "/import/elementpropertytable/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Export",
    "content": "The visible cells can be exported as a FLUXNUM or MULTNUM keyword that can be used in an Eclipse input data deck.\nYou can do this by using the command Export Visible Cells as FLUXNUM/MULTNUM found by right clicking:\nView in the Project Tree. Cell Result in the Project Tree. In any Eclipse 3D View. The command can also be found in File -\u003e Export. If the command is used in the project tree, the visible cells from the selected view are used for calculation. In the 3D view and from File -\u003e Export, the visible cells from the currently active 3D view are used.\nExport Filename – Name of the file to export to. Export Keyword – Selects the Eclipse keyword to export. Visible Active Cells Value – This value is used for all the active cells that passes the filters(Range Filter, Property Filter etc) in the 3D View, and thus is visible. Hidden Active Cells Value – All the active cells that are not visible in the 3D view. Inactive Cells Value – This value is used for all inactive cells, regardless of whether they are visible or not.",
    "description": "The visible cells can be exported as a FLUXNUM or MULTNUM keyword that can be used in an Eclipse input data deck.\nYou can do this by using the command Export Visible Cells as FLUXNUM/MULTNUM found by right clicking:\nView in the Project Tree. Cell Result in the Project Tree. In any Eclipse 3D View. The command can also be found in File -\u003e Export. If the command is used in the project tree, the visible cells from the selected view are used for calculation. In the 3D view and from File -\u003e Export, the visible cells from the currently active 3D view are used.",
    "tags": [],
    "title": "FLUXNUM/MULTNUM",
    "uri": "/export/fluxnummultnum/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "ResInsight supports a selection of Keyboard Shortcuts for convenience. These include Delete for removing deletable items from the project tree, Ctrl-Alt-A for Zoom All and Ctrl-Alt-S/N/W/E/D/U for changing the camera view to South, North, West, East, Down and Up respectively.\nOther available keyboard shortcuts are\nCtrl-Shift-P for opening up the plot window when you are in the 3d View Ctrl-Shift-3 for opening up the 3d View while you are in the Plot Window Ctrl-X for Cut and Ctrl-V for Paste of project tree items where this functionality is available. Ctrl-O for opening a project Ctrl-S for saving the project F1 for opening the online User Guide Ctrl-M for single line measurement Ctrl-Shift-M for poly line measurement Summary Plot Manager Summary Plot Manager\nOperation Shortcut Display Summary Manager CTRL-K Append Curves SHIFT-Enter Replace Curves CTRL-Enter Create New Plot ALT-Enter",
    "description": "ResInsight supports a selection of Keyboard Shortcuts for convenience. These include Delete for removing deletable items from the project tree, Ctrl-Alt-A for Zoom All and Ctrl-Alt-S/N/W/E/D/U for changing the camera view to South, North, West, East, Down and Up respectively.",
    "tags": [],
    "title": "Keyboard Shortcuts",
    "uri": "/misc/keyboardshortcuts/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Getting Started",
    "content": "ResInsight comes with four navigation modes. The active mode can be selected in the [Preferences dialog] (https://resinsight.org/misc/preferences/).\nNote that changing the navigation mode applies to the currently active view only, and views created after the change.\nThese abbreviations are used in the tables below:\nAbbreviation Meaning LMB Press the left mouse button MMB Press the middle mouse button or scroll wheel button RMB Press the right mouse button The following applies to all navigation modes:\nMouse interaction Action RMB single click Right-click menu (context menu) LMB single click Update status bar and Result Info RMS navigation mode Mouse interaction Action LMB + drag Zoom model MMB + drag Rotate model Scroll wheel Zoom to mouse pointer location RMB + drag Pan model CAD navigation mode Mouse interaction Action LMB + drag Pan model MMB + drag Rotate model MMB + Shift Pan model Scroll wheel Zoom to mouse pointer location GeoQuest navigation mode Mouse interaction Action LMB + drag Rotate model MMB + drag Pan model Scroll wheel Zoom to mouse pointer location Ceetron navigation mode Mouse interaction Action LMB + drag Pan model MMB + drag Zoom to mouse pointer location Scroll wheel Zoom to mouse pointer location RMB + drag Rotate model",
    "description": "ResInsight comes with four navigation modes. The active mode can be selected in the [Preferences dialog] (https://resinsight.org/misc/preferences/).\nNote that changing the navigation mode applies to the currently active view only, and views created after the change.\nThese abbreviations are used in the tables below:\nAbbreviation Meaning LMB Press the left mouse button MMB Press the middle mouse button or scroll wheel button RMB Press the right mouse button The following applies to all navigation modes:",
    "tags": [],
    "title": "Model Navigation",
    "uri": "/getting-started/modelnavigation/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Observed Time History Data, is data measured in time. On import of observed time history data, ResInsight translates the data to make it similar to summary data. Observed time history data can be plotted along with summary data in Summary Plots.\nImport Observed Time History Data Importing observed time history data to ResInsight may be performed in two different ways:\nBy selecting the main menu item File -\u003e Import -\u003e Import Observed Data By using the right-click command Import Observed Data on the Observed Data item in the Plot Main Window Project Tree The following file types are supported:\nRSM observed time history data file (*.rsm) Column based (Comma Separated Values, CSV) time history data file (*.csv/*.txt) The imported Observed Data files will be added to Observed Data. Which summaries that has been detected in a Observed Data file can be read in an Observed Data’s Property Editor. In the image below, time and year info has been found together with the summary “WBP9L” for the well “OP-1”.\nViewing Observed Time History Data To plot Observed Time History Data, choose New Summary Plot in the right-click menu of Summary Plots, in Plot Object Project Tree. Observed time history data will appear in Sources together with summary cases. How to use the Plot Editor is covered in Summary Plot Editor. Observed time history data points are plotted without lines by default.\nWhen inspecting resampled data, it can be useful to manually specify if this curve is Accumulated or Rate. Summary Curve Properties.\nFile Formats Import CSV/txt Observed Time History Data CSV/txt files are generic ascii files where data is arranged in columns. Some variations in formatting is supported, for instance deifferent cell separators, date and time format, decimal separator etc. When importing these types of files the user is presented a dialog, where the user may tell ResInsight how to import the selected file(s). If more than one file is selected, the dialog appears once for each file.\nCSV/txt Import Options Dialog Dialog fields description:\nCell Separator – Select the correct cell separator character. ResInsight will try to set the correct value as default. Decimal Separator – Select the correct decimal separator. ResInsight will try to set the correct value as default. Selected Time Column – Select the column that contains the time/date information. The first column is default. Use Custom Date Time Format – Check this box if the Date Format and/or Time Format in the file do not match any of the most common formats. Custom Date Time Format – Enter date time format to match the time information in the file. This field is visible only when the above check box checked. A tooltip will tell the user how to enter the correct information. Date Format – Select the date format matching the date information in the file. Time Format – Select the time format matching the time information in the file. If the file contains dates only, this field is ignored by ResInsight. Preview – Preview the first 30 lines of the file contents. The view will reflect the currently selected Cell Separator and the selected time column is marked in yellow. Column data Each column must have a header text, which may be a name/description for the data in the column. By formatting the header text to a valid Eclipse address, ResInsight recognizes the column data and will be able to categorize the data in the same way as grid data. So when plotting these data later, the user will find the data in the correct category in the Summary Plot Editor.\nEclipse address format An Eclipse address consists of a vector name and zero or more parameters. The number of parameters are defined by the category of the vector. The category is determined by looking up the category in an internal vector table. A valid standard vector name has 3 to 5 characters. Optionally it may be postfixed by a user defined name of 3 characters. A vector name having both a standard part and a user part must have 8 characters (5+3). In this case, if the standard part has less than 5 characters, it must be padded with underscores up to 5 characters. Example: ‘RPR__WEL’. Vector names having only the standard part are not padded.\nCategories:\nField - \u003cVECTOR ‘F….'\u003e Example: ‘FOPT’ Aquifer - \u003cVECTOR ‘A….’\u003e:\u003cAQUIFER NUMBER\u003e Example: ‘AAQR:1’ Network - \u003cVECTOR ‘N….'\u003e Misc - \u003cVECTOR ‘….'\u003e Region - \u003cVECTOR ‘R….’\u003e:\u003cREGION NUMBER\u003e Example: ‘RPR:1’ Region to Region - \u003cVECTOR ‘R.F..’\u003e:\u003cREGION NUMBER\u003e-\u003cREGION NUMBER\u003e Example: ‘ROFR:1-2’ Group - \u003cVECTOR ‘G….’\u003e:\u003cGROUP NAME\u003e Example: ‘GOPR:MANI-B1’ Well - \u003cVECTOR ‘W….’\u003e:\u003cWELL NAME\u003e Example: ‘WOPR:B-2H’ Completion - \u003cVECTOR ‘C….’\u003e:\u003cWELL NAME\u003e:\u003cI\u003e,\u003cJ\u003e,\u003cK\u003e Example: ‘COFRL:C-1H:26,44,16’ LGR Completion - \u003cVECTOR ‘LC…’\u003e:\u003cLGR NAME\u003e:\u003cWELL NAME\u003e:\u003cI\u003e,\u003cJ\u003e,\u003cK\u003e Example: ‘LCWIT:WELLI1:I1:5,5,5’ LGR Well - \u003cVECTOR ‘LW…’\u003e:\u003cLGR NAME\u003e:\u003cWELL NAME\u003e Example: ‘LWWIR:WELLI1:I1’ Segment - \u003cVECTOR ‘S….’\u003e:\u003cWELL NAME\u003e:\u003cSEGMENT NUMBER\u003e Example: ‘SOFR:B-5H:32’ Block - \u003cVector ‘B….’\u003e:\u003cI\u003e,\u003cJ\u003e,\u003cK\u003e Example: ‘BPR:15,18,21’ LGR Block - \u003cVECTOR ‘LB…’\u003e:\u003cLGR NAME\u003e:\u003cI\u003e,\u003cJ\u003e,\u003cK\u003e Example: ‘LBOSAT:CENTER:5,5,5’ Imported - \u003cSOME NAME\u003e When ResInsight parses an eclipse address, it first tries to identify an address category by analyzing the vector name, as described above. If no category could be found, the Imported category is used. This category is also used if the address format is wrong (for instance missing parameters) even though the vector name identifies a different category.\nInstantaneous vs Accumulated Data\nA valid Eclipse vector having a standard name ending with ‘T’ or ‘TH’ are considered accumulated data. In the summary plot, these types of data are plotted slightly different. Instantaneous data are plotted using a stepped curve, while accumulated data are plotted using straight lines between the samples.\nError data\nAny address may have associated error data. Those type of data will have the same address as their associated data, but are prefixed by ‘ER:’, ‘ERR:’ or ‘ERROR:’. Example: ‘ERR:FOPT’. It is not possible to select error data explicitly in the plot editor selection fields, but when selecting a vector having associated error data, the error data is plotted as error bars in the summary plot.\nExample:\nCSV Line Based Format ResInsight supports a ’line based’ CSV file format variant as well. As opposed to the normal CSV format, data values are organized in lines. Each line must contain at least a date (and time), a vector address and a sample value. Optionally it may also contain an error value and a comment. The information carried by this format is equivalent to the normal CSV format, it is only a different file layout.\nWhen importing a line based CSV file, no dialog appears. Instead a more stict set of rules apply to this type of files:\nAt least DATE, VECTOR and VALUE columns must be present. The order of columns may be changed. Optionally the columns ERROR and COMMENTS may be present ISO date format must be used: ‘yyyy-mm-dd’ or ‘yyyy-mm-dd hh:mm’ Semicolon (;) must be used as column separator Point (.) must be used as decimal separator The comment must not contain any semicolons Example The two examples below are equvalent and result in identical data after importing to ResInsight\nLine based CSV:\nDATE ;VECTOR ;VALUE ;ERROR 2018-04-16 ;FOPT ;12.5 ;0.45 2018-04-18 ;FOPT ;8.6 ;0.31\rNormal CSV:\nDATE ;FOPT ;ERR:FOPT 2018-04-16 ;12.5 ;0.45 2018-04-18 ;8.6 ;0.31\rImport RSM observed time history data To import RSM files, the only action needed from the user is to select one or more RSM files. When the import is finished, one tree node for each file will appear under the Observed Data node in the project tree. RSM files can be either Column based or Keyword based.\nColumn Based File Format If a column based file is presented, ResInsight first tries to identify if its header has fixed width or not. Further, the header is interpreted by looking for specific lines.\nThe first line must have one or more vector mnemonics. The initial letter(s) in a mnemonic specify which summary data type the column represents. For instance, FVPT and FWPT are of type Field, as they both have an initial F. WWCTH and WGORH are well data types.\nThe next lines can define units, well/group names, region names, LGR names and block numbers and the local cell number. They do not have to appear in any particular order. Scale factors can also be included, but will be ignored by ResInsight. All lines starting with – will also be ignored.\nColumn Based with Fixed Header Width When interpreting column based files with fixed header width, ResInsight looks for left aligned column entries. These type of files are interpreted as we naturally read them. More than one table can be present in each file.\n1 ------------------------------------------------------------------------- SUMMARY ------------------------------------------------------------------------- DATE FGIRH FVPT FWPT FOPT FLPT SM3/DAY RM3 SM3 SM3 SM3 *10**3 *10**3 *10**3 *10**3 ------------------------------------------------------------------------- 6-NOV-1997 0 0 0 0 0 7-NOV-1997 0 5.749954 0.004548 4.379801 4.384350 8-NOV-1997 0 13.76883 0.010841 10.48852 10.49936 9-NOV-1997 0 19.38692 0.015243 14.76847 14.78372 10-NOV-1997 0 24.07161 0.018914 18.33751 18.35642 11-NOV-1997 0 28.79427 0.022613 21.93558 21.95819\rColumn Based with Random Header Width Column Based with Random Header Width will try to be parsed in the same way as fixed width, but it might fail in situations like the one below. We can see that SM3/SM3 probably belongs to WGORH, but it is parsed to WWCTH, as it is the second entry on that line.\nTIME WWCTH WGORH DAYS SM3/SM3 A-5HP A-5HP 1 0.000 0.000 2 0.000 0.000 3 0.000 0.000\rKeyword Based File Format If the non-comment line includes the word “VECTOR”, the file is interpreted as a keyword based file. In keyword based files, the content of the one-column tables is described in each header. Tables should be associated with a table containing time stamps. In the example below, S-1AH-GOR is associated with YEARX, since their origin is equal. ResInsight always interpret ORIGIN as well name, and look for a table with the line “VECTOR YEARX” to associate with it.\n---------------------------------------------- -- GOR data ---------------------------------------------- VECTOR S-122AH-GOR UNITS SM3/SM3 ORIGIN GORS-122AH 330.6601 257.7500 335.9894 301.4388 260.4193 306.0298 280.2883 VECTOR YEARX ORIGIN GORS-112AH UNITS YEAR 1999.7902 1999.8446 1999.9285 2000.0391 2000.0800 2000.0862 2000.1285 ---comment ---------------------------------------------- -- GOR data ---------------------------------------------- VECTOR S-211H-GOR UNITS SM3/SM3 ORIGIN GORS-211H 293.8103 293.1634 304.0000 334.5932 306.4610 293.7571 VECTOR YEARX ORIGIN GORS-22H UNITS YEAR 1999.8255 2000.1274 2000.2075 2000.2367 2000.4033 2000.4966",
    "description": "Observed Time History Data, is data measured in time. On import of observed time history data, ResInsight translates the data to make it similar to summary data. Observed time history data can be plotted along with summary data in Summary Plots.\nImport Observed Time History Data Importing observed time history data to ResInsight may be performed in two different ways:\nBy selecting the main menu item File -\u003e Import -\u003e Import Observed Data By using the right-click command Import Observed Data on the Observed Data item in the Plot Main Window Project Tree The following file types are supported:",
    "tags": [],
    "title": "Observed Time History Data",
    "uri": "/import/observeddata/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "The Plot Main Window is the main window of ResInsight for 2D graphing and plotting as shown above surrounded by the following docking windows:\nPlots: overview of the various types of plots and their components Property Editor: settings for titles, legends, layout, axes, and appearance Data Sources: searching and sourcing data from case, field, regions, wells, groups, or ensemble Templates: overview, management and use of templates for summary plotting Plot Manager: powerful text-based selection of vectors for summary plotting Essential actions are presented as controls in the toolbar for ease of use. The following subchapters describe the capabilities, functionality, graphs, and plots in more detail.",
    "description": "The Plot Main Window is the main window of ResInsight for 2D graphing and plotting as shown above surrounded by the following docking windows:\nPlots: overview of the various types of plots and their components Property Editor: settings for titles, legends, layout, axes, and appearance Data Sources: searching and sourcing data from case, field, regions, wells, groups, or ensemble Templates: overview, management and use of templates for summary plotting Plot Manager: powerful text-based selection of vectors for summary plotting Essential actions are presented as controls in the toolbar for ease of use. The following subchapters describe the capabilities, functionality, graphs, and plots in more detail.",
    "tags": [],
    "title": "Plot Main Window",
    "uri": "/plot-window/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "Import Pressure/Depth Data Importing pressure data to ResInsight may be performed in two different ways:\nBy selecting the main menu item File -\u003e Import -\u003e Import Pressure Depth Data By using the right-click command Import Pressure Data on the Observed Data item in the Plot Main Window Project Tree The imported pressure data can visualized in [RFT Plots]\nPressure/Depth File Format --TVDMSL RFT -- WELLNAME 'OP_1' DATE 28-FEB-2000 PRESSURE DEPTH BARSA METRES 302.88 1605.91 303.88 1615.91 304.88 1625.91 304.38 1635.91 -- WELLNAME 'OP_2' DATE 28-FEB-2000 PRESSURE DEPTH BARSA METRES 302.88 1600.91 303.68 1610.91 303.88 1612.91 303.99 1620.91",
    "description": "Import Pressure/Depth Data Importing pressure data to ResInsight may be performed in two different ways:\nBy selecting the main menu item File -\u003e Import -\u003e Import Pressure Depth Data By using the right-click command Import Pressure Data on the Observed Data item in the Plot Main Window Project Tree The imported pressure data can visualized in [RFT Plots]\nPressure/Depth File Format --TVDMSL RFT -- WELLNAME 'OP_1' DATE 28-FEB-2000 PRESSURE DEPTH BARSA METRES 302.88 1605.91 303.88 1615.91 304.88 1625.91 304.38 1635.91 -- WELLNAME 'OP_2' DATE 28-FEB-2000 PRESSURE DEPTH BARSA METRES 302.88 1600.91 303.68 1610.91 303.88 1612.91 303.99 1620.91",
    "tags": [],
    "title": "Pressure/Depth Data",
    "uri": "/import/pressuredata/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Release Notes",
    "uri": "/releases/release-notes/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "The color mapping of the displayed cell result is controlled by the Color Legend item in Project Tree. The legend can be shown or hidden by checking or unchecking the box in front of the Color Legend item.\nLegend configuration As shown above, the Legend configuration for cell results allows the following settings:\nNumber of levels – Defines the number of tick marks displayed next to the color legend Significant digits – Defines the number of significant digits in the number formatting Number format – Defines how the numbers are formatted Colors – Defines the color palette for the legend by selecting from Color Legends Mapping – Defines the mapping of numerical values to legend colors: Discrete Linear – Legend divided into linear levels defined by Number of levels Continuous Linear – Continuous linear legend with tick mark count defined by Number of levels Continuous Logarithmic – Continuous logarithmic legend with tick mark count defined by Number of levels Discrete Logarithmic – Logarithmic legend divided into levels defined by Number of levels Category – Legend with one level per category for formation names and discrete data (e.g. result names ending with NUM) Range type: All Timesteps – use of values for all time steps to find numerical range of legend (unavailable for Flow Diagnostics results) Current Timestep – use of current (single) time step to find min and max values User Defined Range – user specified range from minimum to maximum numerical value Furthermore, the legend may display semi-transparent with a sorrounding box by selecting the Show Box around Legends option of the Preferences dialog.\nLegend configuration for category results The Category type of legend mapping concerns such as formation names and discrete numbered results (e.g. result names with trailing NUM).\nCategory type of legends invoke the Property Editor shown below. Here the default Category Mode Interpolate is shown to color all formations.\nIn the example below, the Category Mode Exclusively Category Colors has been selected to produce a 3D visualization of formations according to the category numbers of Selected Formations Legend. As seen, formations according to the category numbers are displayed in colors while the others are displayed in grey. Please see Color Legends for more information about legends and category numbers.",
    "description": "The color mapping of the displayed cell result is controlled by the Color Legend item in Project Tree. The legend can be shown or hidden by checking or unchecking the box in front of the Color Legend item.\nLegend configuration As shown above, the Legend configuration for cell results allows the following settings:\nNumber of levels – Defines the number of tick marks displayed next to the color legend Significant digits – Defines the number of significant digits in the number formatting Number format – Defines how the numbers are formatted Colors – Defines the color palette for the legend by selecting from Color Legends Mapping – Defines the mapping of numerical values to legend colors: Discrete Linear – Legend divided into linear levels defined by Number of levels Continuous Linear – Continuous linear legend with tick mark count defined by Number of levels Continuous Logarithmic – Continuous logarithmic legend with tick mark count defined by Number of levels Discrete Logarithmic – Logarithmic legend divided into levels defined by Number of levels Category – Legend with one level per category for formation names and discrete data (e.g. result names ending with NUM) Range type: All Timesteps – use of values for all time steps to find numerical range of legend (unavailable for Flow Diagnostics results) Current Timestep – use of current (single) time step to find min and max values User Defined Range – user specified range from minimum to maximum numerical value Furthermore, the legend may display semi-transparent with a sorrounding box by selecting the Show Box around Legends option of the Preferences dialog.",
    "tags": [],
    "title": "Result Color Legend",
    "uri": "/3d-main-window/resultcolorlegend/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "The result info window displays text information based on selected geometry in the 3D view. This is information related to IJK cell values, the value of the currently selected result property, and the intersection point for the last mouse click in the 3D view.\nIf you want to show additional properties, activate and select additional properties from Multiple Result Info in the Project Tree. Additional values are displayed in addition to currently selected property.\nCoordinates Select Multiple Result Info in the Project Tree. Coordinates for the selected cell can be displayed by ticking “Show Center Coordinates” and “Show Corner Coordinates”",
    "description": "The result info window displays text information based on selected geometry in the 3D view. This is information related to IJK cell values, the value of the currently selected result property, and the intersection point for the last mouse click in the 3D view.\nIf you want to show additional properties, activate and select additional properties from Multiple Result Info in the Project Tree. Additional values are displayed in addition to currently selected property.",
    "tags": [],
    "title": "Result Info",
    "uri": "/3d-main-window/resultinfo/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "The plot editor is a separate ResInsight dialog window where the user can select which vectors to display in a summary plot. It is also possible to edit an existing plot in this editor.\nThe upper part of the editor contains editors for selecting which vectors/summaries to display in the plot. The number of fields vary from 3 to 6 depending on the Summary Type currently highlighted.\nNote\rHere highlighted means marked item with different background color, while selected means item(s) having a ticked check box.\nSelection Fields This section describes the different selection fields in the selection part of the plot editor. A complete/valid vector selection consists of a selected source, a selected summary category, a selected item in each dynamic field (if any) and a selected vector among the Summaries.\nSources This field contains all imported cases and ensembles. Select the case(s) and/or ensemble(s) to display in the plot.\nSummary Types and Item Selection Fields In the mid-section of the dialog, the Summary Type and the corresponding Items can be selected.\nField – Select Field related vectors only Aquifer – Select Aquifer category vectors only Network – Select Network category vectors only Misc – Select vectors in the Misc category only Region – Select Region related vectors only Region-Region – Select Region to Region related vectors only Group - Select Group related vectors only Well – Select Well related vectors only Completion – Select Completion related vectors only Lgr-Completion – Select Completion in LGR related vectors only Lgr-Well – Select Well in LGR related vectors only Segment – Select Segment related vectors only Block – Select I, J, K – Block related vectors only Lgr-Block – Select I, J, K - Block in LGR related vectors only Calculated – Select calculated vectors created by the curve calculator. Imported – Select observed data vectors imported from file (e.g. CSV, RSM files) Summaries This field contains the summaries/vectors for the highlighted summary category.\nPreview Plot When a complete/valid vector exists, one or more curves will appear in the preview plot. Each curve will also have a corresponding item in the curves field in the lower left corner. Visibility for the curves may be controlled by the checkboxes. Each curve is automatically assigned a name and appearance. However the user may modify these settings in the Curve Name Configuration and Curve Appearance Assignment fields.\nPlot and Curve Name Configuration The checkboxes in this field control which information elements to include in the curve name. Toggling some of the checkboxes will have no effect on some curves depending on which information elements are relevant for each curve.\nCurve Appearance Assignment Curves created are assigned individual visual properties like colors and symbols in a systematic manner to make the plots easy to read. Different aspects of the vectors are assigned to different curve appearances. E.g. using symbols to distinguish cases, while using colors to distinguish quantity.\nThese assignments can be controlled using the options in the Curve Appearance Assignment group.\nWhen set to Auto, ResInsight assigns visual properties based on the present vector categories and the number of different values in each category.\nWhen disabling the Auto option, you can select which of the visual curve properties to use for which summary category. The summary category that currently can be used is Case, Vector, Well, Group and Region. The visual properties supported types are Color, Symbols, Line Style, Gradient and Line Thickness.\nThe Apply button must be clicked to apply the new settings to all curves.\nThe curve appearance settings apply to single summary curves only and do not affect ensemble curve sets. Curve sets receive their appearance automatically from a set of color ranges.\nNote\rAssignment of curve appearance are incremental, and can end up as sub optimal if adding curves in several steps. Press the Apply button to apply consistent appearance settings according to the current curve selection.\nCurves The curves field displays all summary curves and ensemble curve sets matching the settings in the selection fields. Those are separated in two groups, Summary Curves and Ensemble Curve Sets. The check box at each item controls which items are displayed in the preview plot.\nIf the user make a selection that will result in a huge number of ensemble curves, ResInsight will display a drawing performance warning, and the newly created curve set(s) are toggled off by default.\nTarget Plot In the bottom of the dialog window Target Plot may be specified. The target plot is the summary plot that will receive the selected curves when the OK or Apply button is clicked.\nBy default the target plot is set to (new plot) or to the plot selected for editing when invoking the command.\nSetting the target plot to a different plot will add the selected curves to that plot when pressing the the OK or Apply button.",
    "description": "The plot editor is a separate ResInsight dialog window where the user can select which vectors to display in a summary plot. It is also possible to edit an existing plot in this editor.\nThe upper part of the editor contains editors for selecting which vectors/summaries to display in the plot. The number of fields vary from 3 to 6 depending on the Summary Type currently highlighted.",
    "tags": [],
    "title": "Summary Plot Editor",
    "uri": "/plot-window/summaryploteditor/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Build From Source",
    "content": "Dependencies and Prerequisites Configuration and build Tool Minimum version Recommended Visual Studio 2019 2022 python 3.8 3.10 Qt 6.5 6.6 It is possible to use Qt 6.4 for to build ResInsight, but some install features introduced in Qt 6.5 are not available. Qt 6.7 has some changes related to theming that is causing some unwanted visual effects. This is currently investigated.\nClone and update sub modules git clone https://github.com/OPM/ResInsight\rcd ResInsight\rgit submodule update --init\rBuild and install required dependencies using vcpkg Open a command prompt using “Run as Administrator” for Visual Studio x64.\nDetailed Developer notes\nThirdParty/vcpkg/bootstrap-vcpkg.bat\rQt Official install tools\nQt can be installed using the MaintenanceTool.exe, and select the following modules:\naqtinstall\naqtinstall is a Python tool used to install Qt directly from Qt distribution sites, and does not require a user account for Qt sites. Other ways to install Qt is described official Qt documentation\nCreate a root folder for Qt installations. In this folder, create a virtual environment for aqtinstall:\npython3 -m venv myvenv\rmyvenv/Scripts/activate\rpip3 install aqtinstall\raqt install-qt linux desktop 6.6.3 -m qtcharts qt5compat qtnetworkauth\rBuild ResInsight The configuration flags for a basic build is given in CMakePresets.json in the root of the repository. Configuration flags specific for the system to build on can be specified in CMakeUserPresets.json. This file is ignored by git.\nCreate a copy of CMakeUserPresets-example.json and rename to CMakeUserPresets.json Update the path to your local installation of Qt6 for the key CMAKE_PREFIX_PATH in CMakeUserPresets.json Start Visual Studio, and open the ResInsight source folder. When you open the ResInsight folder for the first time, vcpkg may spend a few minutes building the required dependencies specified in vcpkg.json.\nCMake Configuration\nConfigure and build with CMake Presets in Visual Studio",
    "description": "Dependencies and Prerequisites Configuration and build Tool Minimum version Recommended Visual Studio 2019 2022 python 3.8 3.10 Qt 6.5 6.6 It is possible to use Qt 6.4 for to build ResInsight, but some install features introduced in Qt 6.5 are not available. Qt 6.7 has some changes related to theming that is causing some unwanted visual effects. This is currently investigated.\nClone and update sub modules git clone https://github.com/OPM/ResInsight\rcd ResInsight\rgit submodule update --init\rBuild and install required dependencies using vcpkg Open a command prompt using “Run as Administrator” for Visual Studio x64.",
    "tags": [],
    "title": "Build Instructions Windows",
    "uri": "/releases/build-from-source/build-instructions-windows/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight offers both a rich set of built-in color legends and functionality for import and customizing color legends. All color legends are available from the Color Legends item in Project Tree.\nStandard Color Legends ResInsight offers an extensive set of built-in color legends as listed by Standard Color Legends. As Standard Color Legends cannot be modified, you must create a Custom Color Legend when needing a legend that is not covered by Standard Color Legends.\nCreate a Custom Color Legend Custom Color Legends are created by right-clicking the Color Legends item in Project Tree to either import a Formation file with color settings or create a new Custom Color Legend.\nIt is also possible to copy a standard legend to create a Custom Color Legend as basis for customization.\nWhen importing a Formation Names description files (*.lyr) with colors, ResInsight automatically creates a color legend and use this as default color legend when visualizing formations in the 3D view.\nCustomizing a Color Legend A newly created Custom Color Legend is initially empty as basis for inclusion of Color Legend Items by right-clicking its entry.\nAs seen below, the right-click menu also allows for deletion of a Color Legend Item. The property editor is used to define each Color Legend Item.\nThe sequence of Color Legend Items can be modified by clicking the arrow symbols seen below.\nThe listed Custom Color Legend is used to form the 3D visualization of formations seen by the top figure of this page. Activating this particular Custom Color Legend is performed by specifying it as Result Color Legend.\nInteger Cell Results When displaying interger cell results, the default color mapping will be set to a category color mapping. This color legend is used when displaying Formation Names. If an integer result is loaded, a custom color legend with names can be used.\nExample workflow\nSelect an integer cell result, i.e. FIPNUM Create a custom color legend or create a copy of an existing color legend, name it “MyColorLegend” Define colors and assign names to colors Use the custom color legend. Note that the color item names are visible in the color legend in the view.",
    "description": "ResInsight offers both a rich set of built-in color legends and functionality for import and customizing color legends. All color legends are available from the Color Legends item in Project Tree.\nStandard Color Legends ResInsight offers an extensive set of built-in color legends as listed by Standard Color Legends. As Standard Color Legends cannot be modified, you must create a Custom Color Legend when needing a legend that is not covered by Standard Color Legends.",
    "tags": [],
    "title": "Color Legends",
    "uri": "/3d-main-window/colorlegends/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "ResInsight lets the user create additional well path laterals by clicking in the 3D view. Completions can be added to laterals, and the complete specification of the well can be exported using the Completion Export\nBuilding a well path Start from an existing well path, either imported or create a new well path In the 3D view, right-click on the well path at the depth location for your lateral A new well path lateral is created, and click in the 3D scene to define targets for the lateral Repeat from 2. for more laterals Tie In Control The measured depth of the tie in location can be adjusted from the property editor.\nThe parent well can be set using the right-click menu of a well path.\nNaming of laterals When a lateral is created, the postfix Y1 is added to the original well path. The first lateral is given the postfix Y2. See the image above for an example of naming.\nWell Target Interaction Activate well targets Activate the well target handles, either by clicking on the well target spheres or by selecting Well Targets in the Project Tree.\nWell Target Interaction Operations When the well target handles are active in the 3D view, the following operations are possible when pressing left mouse button on well target handles:\nUser Interaction Description Mouse Move Modification of a single target Mouse Move + CTRL Modification of all well target on selected well (laterals excluded) Mouse Move + CTRL + SHIFT Modification of all well targets (laterals included) Similar behaviour is available when modifying the well target for the tie-in well target.\nLink Reference Point If you want to move multiple wells at the same time, you can activate Link Reference Point. If the reference point is updated in any of the linked wells, all wells will be updated accordingly. Selection of multiple well, and activation of Link Reference Point",
    "description": "ResInsight lets the user create additional well path laterals by clicking in the 3D view. Completions can be added to laterals, and the complete specification of the well can be exported using the Completion Export\nBuilding a well path Start from an existing well path, either imported or create a new well path In the 3D view, right-click on the well path at the depth location for your lateral A new well path lateral is created, and click in the 3D scene to define targets for the lateral Repeat from 2. for more laterals Tie In Control The measured depth of the tie in location can be adjusted from the property editor.",
    "tags": [],
    "title": "Create Multilaterals Well Paths",
    "uri": "/wells-and-completions/createmultilateralwellpaths/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Build From Source",
    "content": "CMake CMake version 3.15 or later is supported.\nBuild Overview The ResInsight build may be configured in different ways, with optional support for Octave plugins, ABAQUS ODB API, HDF5, Pyton, and OpenMP. This is configured using options in CMake.\nCMake Options for ResInsight CMake Name Default Description RESINSIGHT_BUILD_DOCUMENTATION OFF Use Doxygen to create the HTML based API documentation. Doxygen must be properly installed. RESINSIGHT_ENABLE_GRPC OFF Enable gRPC scripting server. Required to be able to use ResInsight from Python RESINSIGHT_ENABLE_HDF5 ON Windows Only: Download and use HDF5 library RESINSIGHT_ODB_API_DIR Blank Optional path to the ABAQUS ODB API from Simulia. Needed for support of geomechanical models RESINSIGHT_USE_OPENMP ON Enable OpenMP parallellization in the code Advanced Options To be able to modify Advanced Options from the CMake User Interface, tick the checkbox Advanced\nCMake Name Default Description RESINSIGHT_QT5_BUNDLE_LIBRARIES OFF Linux only: Include Qt5 libraries in the installation package RESINSIGHT_BUILD_LIBS_FROM_SOURCE ON If ON: Build some ThirdParty libs locally. If OFF: Download precompiled libraries RESINSIGHT_BUNDLE_OPENSSL OFF Bundle the OpenSSL library binaries RESINSIGHT_ENABLE_UNITY_BUILD OFF Activate use of CMAKE_UNITY_BUILD on some libraries to improve build speed RESINSIGHT_INCLUDE_APPFWK_TESTS OFF Include unit tests from thirdparty libraries AppFwk and VizFwk RESINSIGHT_INCLUDE_APPLICATION_UNIT_TESTS OFF Include Application Code Unit Tests RESINSIGHT_PRIVATE_INSTALL ON Linux only: Include resdata libraries in the installation package RESINSIGHT_HDF5_BUNDLE_LIBRARIES OFF Linux only: Include HDF5 libraries in the installation package RESINSIGHT_TREAT_WARNINGS_AS_ERRORS OFF Enable warnings as errors RESINSIGHT_UPDATE_SUBMODULES ON Automatically issue ‘git submodule update –init –recursively’ on ThirdParty folder RESINSIGHT_VCPKG_AUTO_INSTALL OFF Automatically build required dependencies using ‘vcpkg’ Configuration parameters for Python CMake Name Default Description RESINSIGHT_ENABLE_GRPC OFF Enable gRPC scripting server. Required to be able to use ResInsight from Python RESINSIGHT_GRPC_BUNDLE_PYTHON_MODULE OFF Bundle GRPC Python module in install folder RESINSIGHT_GRPC_DOWNLOAD_PYTHON_MODULE ON Download GRPC Python module RESINSIGHT_GRPC_PYTHON_EXECUTABLE Blank Location of Python3 executable Optional Libraries and features Python Please see ResInsight Python API for installation and configuration.\nOctave Octave is now detected searching the file system. If Octave is not detected, the following file path variable must be defined:\nOCTAVE_CONFIG_EXECUTABLE : d:\\octave\\Octave-4.0.0\\bin\\octave-config.exe\nIt is possible to build ResInsight without compiling the Octave plugins. This can be done by specifying blank for the Octave CMake options. The Octave plugin module will not be built, and CMake will show warnings like ‘Failed to find mkoctfile’. This will not break the build or compilation of ResInsight.\nResInsight has been verified to build and run with Octave versions 3.4.3, 3.8.1, and 4.0.0 on RedHat linux, and 4.0.0 on Windows.\nOctave Dependencies for Debian Based Distributions The following command line can be used as a starting point to install required libraries sudo apt-get install git cmake build-essential octave liboctave-dev qtbase5-dev qtscript5-dev libqt5svg5-dev qtbase5-private-dev\nODB support ResInsight can be built with support for ABAQUS ODB files. This requires an installation of the ABAQUS ODB API from Simulia on the build computer. The path to an ABAQUS ODB API folder containing header files in an include sub-folder and the library files in a lib sub-folder must be specified in the CMake option RESINSIGHT_ODB_API_DIR. Leaving this option blank gives a build without ODB support. ResInsight has been built and tested with ABAQUS ODB versions 2020 and 2024 on Windows 10/11, Redhat Linux 7/8 and Ubuntu 22/24.\nHDF5 HDF5 is used to read SourSimRL result files. On Windows this is optional, while on Linux the installed HDF5 library will be used if present.\nUse an advanced flag RESINSIGHT_HDF5_BUNDLE_LIBRARIES to include HDF5 libraries in the installation package.\nTested with 1.8.18 on windows, and default installation on RedHat 6.",
    "description": "CMake CMake version 3.15 or later is supported.\nBuild Overview The ResInsight build may be configured in different ways, with optional support for Octave plugins, ABAQUS ODB API, HDF5, Pyton, and OpenMP. This is configured using options in CMake.\nCMake Options for ResInsight CMake Name Default Description RESINSIGHT_BUILD_DOCUMENTATION OFF Use Doxygen to create the HTML based API documentation. Doxygen must be properly installed. RESINSIGHT_ENABLE_GRPC OFF Enable gRPC scripting server. Required to be able to use ResInsight from Python RESINSIGHT_ENABLE_HDF5 ON Windows Only: Download and use HDF5 library RESINSIGHT_ODB_API_DIR Blank Optional path to the ABAQUS ODB API from Simulia. Needed for support of geomechanical models RESINSIGHT_USE_OPENMP ON Enable OpenMP parallellization in the code Advanced Options To be able to modify Advanced Options from the CMake User Interface, tick the checkbox Advanced",
    "tags": [],
    "title": "CMake Configuration",
    "uri": "/releases/build-from-source/cmake-configuration/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "ResInsight can display well logs curves directly in the 3D view with a subset of the functionality of the full 2D Well Log Plot Editor. The curves will be drawn in a plane next to or centered on the well trajectory they belong to and can display well log data from a simulation model and from imported LAS-files.\nCreating new 3D Well Log Curves Add a new 3D well log curve by selecting a Well Path in the Project Tree, right-clicking and selecting 3D Well Log Curves and Add 3D Well Log Curve.\nDeleting 3D Well Log Curves Delete one or more 3D well log curves by selecting them in the project tree, right-clicking on one of the selected items and choosing Delete 3D Well Log Curve(s). The curves will be deleted with no further confirmation.\nConfigurating the 3D Well Log Curves 3D Track and Draw Plane Appearance Each 3D well log curve belongs to a 3D Track which in turn is attached to a well path. The 3D track itself contains some settings related to the display of the curves.\nParameter Description Range Show Grid Show axis markers for the value-axis of the curves along the draw surface True/False Show Background Draw a white background on the drawing surfaces of the curves True/False Width Scaling A scaling factor applied to the width of the draw surfaces [0.25, 2.5] Curve Configuration In addition to the 3D track configuration, each 3D well log curve may be configured in its Property Editor. Here settings are grouped into three categories: Data Selection, Appearance and Name Generation.\nData Selection The Curve Data configuration allows you to select a case, result type, property and time step to plot.\nParameter Description Case The eclipse or geomechanical case to retrieve the data from Result Type Dynamic, static, generated, input property, formation names, flow diagnostics or injection flooding Result Property The parameter to plot Time Step Which time step to show Appearance In the Curve Appearance box, the curve can be assigned to a draw plane, the color can be changed and a range of curve values applied. The range of the result property can be set with the minimum and maximum curve value settings. The curve range is by default set to the minimum and maximum values found in the data set and these values are retained in the label if different values have been chosen.\nThe draw plane can be vertical (above well path, centered and below well path) and horizontal (left, centered and right). If multiple curves are added and assigned to the same draw plane, they will appear in the same curve plot.\nName Generation Finally the name of the curve is created automatically from a set of parameters such as case, view, etc. The parameters that should make up the curve name can be selected in the Curve Name box. Only extraction log curves have multiple settings here. The automatic name generation will be automatically switched off if the curve has been renamed manually and can be switched back on by checking the Generate Name Automatically tick box.",
    "description": "ResInsight can display well logs curves directly in the 3D view with a subset of the functionality of the full 2D Well Log Plot Editor. The curves will be drawn in a plane next to or centered on the well trajectory they belong to and can display well log data from a simulation model and from imported LAS-files.",
    "tags": [],
    "title": "3D Well Log Plots",
    "uri": "/wells-and-completions/3dwelllogcurves/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "A grid model can be imported from several sources, either Eclipse binary/ascii or ROFF binary/ascii. Grid properties in separate files can be imported into any grid type as long as the number of grid cells is matching.\nAppending properties\nFrom the right-click menu of the case or Cell Result, select Add Input Property Select the file with properties The imported data is then available in the Cell Result by activating the Input Property in the Type drop down list. Eclipse Grid Models\nROFF Grid Models",
    "description": "A grid model can be imported from several sources, either Eclipse binary/ascii or ROFF binary/ascii. Grid properties in separate files can be imported into any grid type as long as the number of grid cells is matching.\nAppending properties\nFrom the right-click menu of the case or Cell Result, select Add Input Property Select the file with properties The imported data is then available in the Cell Result by activating the Input Property in the Type drop down list.",
    "tags": [],
    "title": "Appending Additional Properties",
    "uri": "/import/appendingadditionalproperties/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight offers a built-in calculators for both summary curves and grid parameters. These expressions can be stored to text files for later use.\nOther more specialized calculations are also available, such as fault distance, geomechanical results, and calculation of statistics for grid cell values.",
    "description": "ResInsight offers a built-in calculators for both summary curves and grid parameters. These expressions can be stored to text files for later use.\nOther more specialized calculations are also available, such as fault distance, geomechanical results, and calculation of statistics for grid cell values.",
    "tags": [],
    "title": "Calculated Data",
    "uri": "/calculated-data/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Export",
    "content": "The completions defined in ResInsight can be exported to Eclipse for use in new simulation runs. The commands Export Completion Data For Visible Wells, Export Completion Data For Visible Simulation Wells and Export Completion Data For Selected Wells can be used to invoke the export. The commands are available by right clicking Well Paths or Simulation Wells in the Project Tree. The first command is available from the File-\u003eImport menu as well.\nExport Settings Calculated Transmissibilities – The transmissibilities calculated based on the case and completion data are exported directly Default Connection Factors and WPIMULT – The information about the connections for Eclipse to be able to make the transmissibility calculaton is exported for the COMPDAT/COMPDATL keywords. In addition, the same transmissibility calculation is performed by ResInsight, and the factor between the actual transmissibility for the connection and the Eclipse calculation is exported in the WPIMULT keyword. Case to Apply – Select which case to use for the export. Matrix transmissibilities will be read from this case. Use NTG Horizontally – Toggles whether NTG in I and J directions is included in the calculation Include Multi Segment Well Model – Toggles whether to also export the completions as Multi Segment Wells. File Settings File Split – Controls how ResInsight splits the export in different files Unified File – One file with all the completions. Split on Well – One file for each well Split on Well and Completion Type – One file for each well and completion type (Perforation Interval, Fishbone, …) Export Completion Types – Control how several completions of different type in the same cell are handled Individually – Completions of each type are exported to separate sections in the file and not combined in any way. Combined – Connection factors from different completion types are added together producing one number for each cell. Export Folder – Folder for the exported COMPDAT file(s). The folder will be created when performing the export and the names of the exported file(s) will be auto generated. Completions Export Selection Perforations – Option to include or exclude perforation intervals in the export. Time step – Which timestep to export. This option is included since perforation intervals have a start time, and thus not all perforations need be present at all time steps. Fractures – Option to include or exclude fracture completions from the export. Pressure Differential Depletion Scaling – Options to scale transmissibilities based on the well drawdown. This allows the Eclipse simulation to more accurately model cases with high differential depletion. Fishbones – Option to include or exclude fishbone completions from the export. The direction reported in the COMPDAT/COMPDATL keywords is computed based on the orientation of the main bore cell the fishbone is connected to. Exclude Main Bore Transmissibility – If this options is checked on, only the transmissibilities for the fishbone laterals will be included in the export, and transmissibility along the main bore will not contribute. Transmissibility Calculations The transmissibility calculation is performed for each direction, X, Y and Z, in an orthogonal coordinate system local to the cell.\nTaking the X direction as an example, we first calculate the relevant permeability K from the Eclipse properties PERMY (Ky) and PERMZ (Kz):\nThe Peacman radius (pressure equivalent radius) for the cell is then calculated, using permeabilities and cell sizes (Dy and Dz):\nThe x-component of the transmissibility vector is calculated, using the length of the perforation in the x direction (lx), the well radius (rw) and skin factor (S):\nThe y and z component of the transmissibility are calculated in the same manner, and the total transmissibility is then calculated as:\nIf the Export Calculated Transmissibilities is chosen in the export setting (see Exporting Completion Data to Eclipse), this value is exported in the COMPDAT/COMPDATL keywords directly. If the Export Default Connection Factors and WPIMULT the transmissibility is chosen, the transmissibility is calculated as above, and in addition the transmissibility is calculated as Eclipse would do it using values other than transmissibility in the COMPDAT/COMPDATL keywords (perforation length, well radius etc). The ratio between these transmissibilities is then exported as the WPIMULT value.\nFor an example of COMPDAT files exported with calculated transmissibilities and with defaults and WPIMULT values, see export of fishbones completion data below.\nFracture Export Pressure Differential Depletion Scaling For cases with high differential depletion, it is possible to scale the transmissibilities from the grid cells into the well (via the fracture) by the well drawdown. This enables the simulation to take into account that the flow will take different paths into the well as the pressure differential between the surrounding grid cells increases. If enabled, a time step for the grid pressures have to be selected. The list of time steps will also show the time step in which the wells first show a Well Bore Hole Pressure (WBHP) larger than zero in the Summary Case information.\nHaving chosen a time step for differential depletion scaling a source for the well pressures can be chosen. If WBHP From Summary Case is picked, the WBHP value in the summary case for the chosen time step is used. However, if the chosen time step precedes the production start of a well, the value set in WBHP Before Production Start is used.\nIf, however, a Fixed User Defined WBHP is chosen, the provided WBHP value is used for all wells.\nFracture Report Header At the top of the exported transmissibilities for fractures, a fracture report summary is displayed. This section displays the different properties for the fractures used to compute the transmissibility values.\nDescription of Derived Data One of the tables displays derived data, see the example here:\nTr #con Fcd Area KfWf Kf Wf Xf H Km [cP.rm3/day/bars] [] [m2] [mDm] [mD] [m] [m] [m] [mD] ---------------------------------------------------------------------------------------------------- 110.834 24 276.168 9315.748 54.889 3805.029 0.014 61.628 75.580 13.778\rTr – Accumulated computed transmissibilies for all reservoir cells intersected by the fracture #con – Number of reservoir cells intersected by the fracture Fcd – Area weighted fracture conductivity divided by area weighted matrix transmissibility (Kf/Km) Area – Area of reservoir cells(both active and inactive) intersected by the fracture KfWf – Multiplication of Kf by Wf (Kf * Wf) Kf – Area weighted average of permeability of fracture cells intersecting reservoir grid cells (using Area defined above) Wf – Area weighted average of width of fracture cells intersecting reservoir grid cells (using Area defined above) Xf – Half-length, defined as fracture area divided by half-height (Area/(H/2)) H – Longest continuous distance with fracture cells open for flow along a fracture grid column Km – Area weighted average of matrix transmissibility (using Area defined above) Differential Depletion Fracture Output In addition to scaling the transmissibilities in the fracture output, using pressure differential depletion scaling will also provide a table with information regarding the scaling performed for each well. This table will show the well name, fracture name and the source of the Well Bore Hole Pressure (WBHP From Summary Case or Fixed User Defined WBHP). For WBHP From Summary Case the User WBHP column will describe the well pressure used for all time steps before the production starts according to the summary case information and the Actual WBHP will describe the well pressure used in the scaling, which will be different from the User WBHP if the scaling is performed for a time step following the well productions start. Finally the columns Min Pressure Drop and Max Pressure Drop describes the minimum and maximum well drawdown for this particular fracture.\n-- -- Pressure Depletion Time step: 01.Feb 2001 -- WBHP Source: WBHP From Summary Case -- User Defined WBHP: 200 -- Well Fracture Actual WBHP Min Pressure Drop Max Pressure Drop ------------------------------------------------------------------------------ -- B-1H Fracture_01 221.68147 0.04077 45.10402 -- B-1H Fracture_02 221.68147 0.00624 36.02608 -- B-4DH Fracture_07 200.00000 28.21733 97.34970 -- Export of Fishbone Completion Data The transmissibility calculation for the fishbones is done following the above description except that when calculating the transmissibility for the laterals, the full cell volume is split among the laterals for calculation of the transmissibility. This is done by finding the direction of the main bore, and then dividing the cell size in this direction by the number of laterals in the cell when calculating the Peaceman radius.\nAn example of the exported COMPDAT file is shown below. The calculated transmissibility contribution to the cell connection factor from each lateral or main bore part is included as a comment.\nWELSPECS -- Well Grp I J RefDepth WellType Well Path B GR 26 45 1230 Oil \\ \\ COMPDAT -- Well I J K1 K2 Status SAT TR DIAM KH S Df -- Well Path B main bore : 0.0569986 Well Path B 26 45 29 29 OPEN 1* 5.699858E-02 / -- Fishbone 0: Sub: 0 Lateral: 0 : 0.0021382 -- Fishbone 0: Sub: 0 Lateral: 1 : 0.00228575 -- Fishbone 0: Sub: 0 Lateral: 2 : 0.0126269 -- Fishbone 0: Sub: 1 Lateral: 1 : 0.0112929 -- Fishbone 0: Sub: 2 Lateral: 0 : 0.00566964 -- Well Path B main bore : 0.230572 Well Path B 27 41 15 15 OPEN 1* 2.645858E-01 / /\rFor export with WPIMULT factors, the main bore diameter and direction are given in the export for cells which have both main bore and lateral contributions, while diameter and main direction of the first lateral is used for cells with no main bore contribution. Other parameters exported as part of COMPDAT are set to default.\nThe WPIMULT parameters are calculated, as for the perforation intervals, by ResInsight calculating both the transmissibility of the completion as described above, and in addition calculating the transmissibility based on the information exported in the COMPDAT keyword. The ratio between these two numbers is then exported as the WPIMUT keyword.\nWELSPEC -- Well Grp I J RefDepth WellType Well Path B GR 26 45 1230 Oil \\ \\ COMPDAT -- Well I J K1 K2 Status SAT TR DIAM KH S Df DIR -- Well Path B main bore : 0.0569986 Well Path B 26 45 29 29 OPEN 1* 1* 0.21600 1* 0.00000 1* 'Z' -- Fishbone 0: Sub: 0 Lateral: 0 : 0.0021382 -- Fishbone 0: Sub: 0 Lateral: 1 : 0.00228575 -- Fishbone 0: Sub: 0 Lateral: 2 : 0.0126269 -- Fishbone 0: Sub: 1 Lateral: 1 : 0.0112929 -- Fishbone 0: Sub: 2 Lateral: 0 : 0.00566964 -- Well Path B main bore : 0.230572 Well Path B 27 41 15 15 OPEN 1* 1* 0.21600 1* 0.00000 1* 'Z' / WPIMULT -- Well Mult I J K Well Path B 0.70133 25 45 29 / Well Path B 25.11396 27 41 15 / /\rCompletions for LGR (WELSPECL and COMPDATL) Completion data for LGR grids are exported to a separate file having the same name as the main grid completions file postfixed by “_LGR”. Instead of using the WELSPECS and COMPDAT keywords, the WELSPECL and COMPDATL keywords are used. Those tables are simlar to the WELSPECS and COMPDAT tables, except from including the columns LGR and LgrName, respectively. The extra columns contains the name of the LGR grid.\nWELSPECL -- Well Grp LGR I J RefDepth WellType UWell-1 1* WELLI1 2 9 1* OIL / / COMPDATL -- Well LgrName I J K1 K2 Status SAT TR DIAM KH S Df DIR -- ---- Completions for completion type Perforation ---- -- Perforation Completion : MD In: 63.6509 - MD Out: 67.0264 Transmissibility: 6.10676 UWell-1 WELLI1 2 9 6 6 OPEN 1* 6.106763E+00 0.21600 1* 0.00000 1* 'Y' / -- Perforation Completion : MD In: 67.0264 - MD Out: 70.402 Transmissibility: 6.10679 UWell-1 WELLI1 2 8 6 6 OPEN 1* 6.106791E+00 0.21600 1* 0.00000 1* 'Y' /\rLGR for completions (Temporary LGRs) The previous section describes the export of COMPDATL for completions intersecting existing LGRs, loaded from file. This section will describe how to have ResInsight create temporary LGRs around completions, and then export COMPDATL for those LGRs. To accomplish this, do the following:\nCreate LGRs for completions on selected well paths. See Completions LGR Export completions the usual way. See Completion Export Info\rIn addition to the completion data, the geometrical definition of all temporary LGRs is also exported into “*.dat” files.\nMulti Segment Well Model It is possible to export all the completions to a text file containing the Eclipse input data keywords needed to represent the completions as a Multi Segment Well. This is done by checking the Include Multi Segment Well Model. All completions are supported and are exported in somewhat different ways.\nExported MSW Data In the output file there are data for three Eclipse keyword specified.\nWELSEGS WELSEGS defines multi-segment wells. The list of entries contains information on the main stem, the ICDs at the fishbone subs and the fishbone laterals. A comment above each entry details which element (main bore / ICD / lateral) the entry is for. Example:\nWELSEGS -- Name Dep 1 Tlen 1 Vol 1 Len\u0026Dep PresDrop Well Path A 4137.09154 87.00000 1* ABS H-- / -- First Seg Last Seg Branch Num Outlet Seg Length Depth Change Diam Rough -- Main stem -- Segment for sub 0 2 2 1 1 13.00000 0.53667 0.15200 0.00001 / -- Laterals -- Diam: MSW - Tubing Radius -- Rough: MSW - Open Hole Roughness Factor -- ICD 3 3 2 2 0.10000 0 0.15200 0.00001 / -- Fishbone 0 : Sub index 0 - Lateral 0 52 52 27 3 1.70326 -0.57276 0.00960 0.00100 / 53 53 27 52 2.34748 -0.81635 0.00960 0.00100 / /\rThe first WELSEGS entry contains information about the well:\nName - Name of well Dep 1 - TVD of start MD point, as given by the user in the Fishbones Start MD field. Tlen 1 - Point given by the user in the Fishbones Start MD field. Len\u0026Dep - incremental or absolute, as specified by the user in the Fishbones property editor. PresDrop - specifies what is included in the pressure drop calculation, hydrostatic, friction or acceleration. Specified by user in the Fishbones property editor. The following WELSEGS entries contains information about each segment:\nFirst Seg, Last Seg – Values are being exported pr segment, so both first and last segment number is the number of the segment being exported. Branch Num – Branch number for segment being exported. Outlet Seg – The segment the exported segment is connected to. For the main bore segments, this is the segment before them, for ICDs the segment number being exported and for fishbone laterals the segment on the main broe where the laterals are connected. Length – Length of segment (if incremental Len\u0026Dep above) or length of segments including this along well (if absolute Len\u0026Dep above). For ICDs length is set to 0.1. Depth Change – Depth of segment, incremental or absolute as for Length. For ICDs depth is set to 0. Diam – Diameter of segment. For main bore and ICD entries, the liner inner diameter for the Fishbones collection is used. For laterals, an effective diameter is calculated so that the diameter exported is the diameter which, assuming a circle, would give the same area as the area between the hole diameter and the tubing diameter. Rough – The roughness factor as entered by the user. Notice that a different value can be specified for the main bore and the laterals, as described above. COMPSEGS An example of the COMPSEGS keyword as exported is shown below.\nCOMPSEGS -- Name Well Path A / -- I J K Branch no Start Length End Length Dir Pen End Range Connection Depth 28 40 6 27 0.00000 1.70326 / 28 40 7 27 1.70326 2.34748 / 28 40 8 27 2.34748 2.96577 / /\rThe first COMPSEGS entry is a line with the well path name. Each following entry is for the segments in the well, and containing the following field:\nI, J and K – The Eclipse cell index Branch no – Branch number for the segment Start Length, End Length – Start and end length along the well for the relevant segment. WSEGVALV An example of the WSEGVALV keyword as exported is shown below.\nWSEGVALV -- Well Name Seg No Cv Ac Well Path A 3 1.50000 0.00008 / Well Path A 5 1.50000 0.00008 / Well Path A 7 1.50000 0.00008 / /\rThe parameters exported in the WEGVALV keyword are\nWell Name – The name of the well. Seg No – Segment number along the well. Cv – The ICD Flow Coefficient, as entered by the user. Ac – the total ICD area per sub, calculated as the area per ICD (given by the orifice radius) multiplied with the number of icd per Sub. Export of Fractures and Perforations as Multi-Segment Wells Fractures and Perforations may also be exported as Multi-Segment Wells. In the case of Fractures, ResInsight will create one segment for the entire fracture, with a number of COMPSEGS-entries corresponding to the cells intersecting the fracture. In this case, the Diam and Rough parameters are not used for anything and the length of the fracture segment is nominal. An example of a Fracture entry is shown below.\nWELSEGS -- Name Dep 1 Tlen 1 Vol 1 Len\u0026Dep PresDrop C-1 H 2575.39553 2919.53029 1* INC H-- / -- First Seg Last Seg Branch Num Outlet Seg Length Depth Change Diam Rough -- Fracture Segments -- Diam: MSW - Default Dummy -- Rough: MSW - Default Dummy -- Traversal Fracture 02 connected to Main stem segment 11 25 25 2 11 0.01000 0.00000 0.15000 0.00005 / / COMPSEGS -- Fractures -- Name C-1 H / -- I J K Branch no Start Length End Length Dir Pen End Range Connection Depth 27 43 1 2 11.27214 11.28214 / 26 44 1 2 11.27214 11.28214 /\rThe entries for Perforations are simpler. No additional branches are created as the perforation intervals are all on the main bore and all perforated cells are listed as COMPSEG entries very similar to normal COMPDAT export of perforation intervals.\nWELSEGS -- Name Dep 1 Tlen 1 Vol 1 Len\u0026Dep PresDrop B-1 AH 2530.38706 3137.28258 1* INC H-- / -- First Seg Last Seg Branch Num Outlet Seg Length Depth Change Diam Rough -- Main Stem Segments 2 2 1 1 16.33624 6.96924 0.15200 0.00001 / 3 3 1 2 11.77390 4.75668 0.15200 0.00001 / 4 4 1 3 9.49721 3.63598 0.15200 0.00001 / 5 5 1 4 6.77104 2.59228 0.15200 0.00001 / 6 6 1 5 29.44930 10.10431 0.15200 0.00001 / 7 7 1 6 27.93603 7.96718 0.15200 0.00001 / 8 8 1 7 13.95369 3.66086 0.15200 0.00001 / / COMPSEGS -- Name B-1 AH / -- I J K Branch no Start Length End Length Dir Pen End Range Connection Depth 10 24 1 1 3137.28258 3153.61882 / 10 24 2 1 3153.61882 3165.39273 / 9 24 2 1 3165.39273 3174.88994 / 9 25 2 1 3174.88994 3181.66098 / 9 25 3 1 3181.66098 3211.11028 / 9 25 5 1 3239.04631 3253.00000 / /",
    "description": "The completions defined in ResInsight can be exported to Eclipse for use in new simulation runs. The commands Export Completion Data For Visible Wells, Export Completion Data For Visible Simulation Wells and Export Completion Data For Selected Wells can be used to invoke the export. The commands are available by right clicking Well Paths or Simulation Wells in the Project Tree. The first command is available from the File-\u003eImport menu as well.",
    "tags": [],
    "title": "Completions",
    "uri": "/export/completionexport/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight can create contour maps based on different forms of aggregation of 3D Eclipse data onto a 2D Plane. Any 3D result value can be aggregated, in addition to specialised results, such as Oil, Gas and Hydrocarbon columns. A Contour Map is a specialised 2D view with many of the same features as the 3D views, including property filters, range filters and display of faults and wells. ResInsight is able to export a contour map to a text file.\nCreating New Contour Maps Contour Maps can be created in many different ways:\nNew Contour Map from the right-click menu of case or the Contour Maps project tree item underneath the case. These will create contour maps with default values. New Contour Map from 3D View in the Eclipse View right-click menu. This will create a contour map based on the existing 3D View with matching filters and result. Duplicate Contour Map from the right-click menu of an existing Contour Map. This will copy the existing map. Properties of the Contour Maps A contour Map has many of the same options available as a 3D View, but is always orthographic/parallel projection with no perspective projection or lighting available. Instead of the 3D Grid Box, the Contour Maps uses a 2D Grid simular to the 2d Intersection Views with optional Axis Lines controlled with the Show Axis Lines toggle. The name of the map can be automatically generated from the Case Name, Property Type, Aggregation Type and Sample Spacing (See Map Projection Properties for the two latter).\nMap Projection Properties The Map Projection settings control how the 3D Data is aggregated onto the 2D plane. In all cases the results are calculated for a square 2D Cell lying in an arbitrary z-plane of the 3D Grid. For each 2D cell a cuboid extrusion in the full bounding extent of the 3D grid is created and this cuboid extrusion is used to calculate the volume of intersection with the 3D Grid cells for all volume weighted sums and averages. For the regular sums, a vertical ray through the center of the 2D cell is used instead. Since the ray may travel through multiple cells in the same K-layer, all the values from within one K-layer are averaged before being added to the sum.\nA set of parameters governs this projection:\nThe first option Sample Spacing Factor controls how many 2D Grid Cells are used in the map. The factor is multiplied by the characteristic cell length/width of the 3D grid to get the 2D Cell Size. A smaller factor will thus create a finer Contour Map. The second option Show Contour Lines toggles on/off the contour lines in the view. The final control in the Projection Settings box is the Result Aggregation. Here the following options are available: Aggregation Type Description Oil Column A sum of SOIL * NTG * PORO * dZ Gas Column A sum of SGAS * NTG * PORO * dZ Hydrocarbon Column A sum of (SOIL + SGAS)* NTG * PORO * dZ Arithmetic Mean A volume weighted arithmetic mean of the specified cell result Harmonic Mean A volume weighted harmonic mean of the specified cell result Geometric Mean A volume weighted geometric mean of the specified cell result Volume Weighted Sum A volume weighted sum of the specified cell result. Suitable for volume fractions such as SOIL or PORO Sum A sum of the specified cell result. Suitable for absolute quantities. Top Value The first value encountered downwards vertically Min Value The minimum cell result value in the volume underneath the 2D Element Max Value The maximum cell result value in the volume underneath the 2D Element For the Column options, no Cell Result is available in the property tree under the Contour Map.\nWeighting Means by Cell Result For the Arithmetic Mean, Geometric Mean and Harmonic Mean it is also possible to specify a cell result as a weighting parameter in addition to the regular weighting by volume of intersection. The total weight will then be the volume of intersection multiplied by the specified cell result. The full range of regular cell results is available for this use.\nDifference options Creating a Contour Map as a difference with a specific base case and/or base time step is performed by clicking the Cell Result item underneath the actual Contour Map in the project tree. This will display the Cell Result [Property Editor] (/3d-main-window/cellresults/#eclipse-result-types) to specify base case and/or base time step.\nContour Map Export ResInsight is able to export a contour map to a text file.",
    "description": "ResInsight can create contour maps based on different forms of aggregation of 3D Eclipse data onto a 2D Plane. Any 3D result value can be aggregated, in addition to specialised results, such as Oil, Gas and Hydrocarbon columns. A Contour Map is a specialised 2D view with many of the same features as the 3D views, including property filters, range filters and display of faults and wells. ResInsight is able to export a contour map to a text file.",
    "tags": [],
    "title": "Contour Maps",
    "uri": "/3d-main-window/contourmaps/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Import",
    "content": "When text have been copied to the operating system’s clipboard, it will be possible to paste that text into a summary plot. Right click on a summary plot in the Plot Main Window Project Tree and select Paste Excel Data to Summary Plot. Then a paste options dialog will appear.\nPaste Options Dialog Most of the fields in this dialog are the same as in the CSV/txt import options dialog. Please see that section for documentation on those fields. The fields specific to the paste options dialog are as follows:\nCurve Prefix – Curve name prefix for all curves created from the pasted data. Line Style – Line style to use for the curves created from the pasted data. Symbol – Line symbol to use for each data point on the curves created from the pasted data. Symbol Skip Distance – Minimum distance between two adjacent symbols on the curves. If two data points on a curve is closer than the specified distance, a symbol is not drawn for one of the data points. Default value is 0, which will draw a symbol at all data points on the curves regardless of the distance between data points.",
    "description": "When text have been copied to the operating system’s clipboard, it will be possible to paste that text into a summary plot. Right click on a summary plot in the Plot Main Window Project Tree and select Paste Excel Data to Summary Plot. Then a paste options dialog will appear.\nPaste Options Dialog Most of the fields in this dialog are the same as in the CSV/txt import options dialog. Please see that section for documentation on those fields. The fields specific to the paste options dialog are as follows:",
    "tags": [],
    "title": "Paste Excel Time History Data",
    "uri": "/import/pasteexceltimedata/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Miscellaneous",
    "content": "A regression tool for QA is build into ResInsight. This tool will do the following:\nScan a directory for sub directories containing a RegressionTest.rsp files. Each found project file will be opened, and all views in this project will be exported as snapshot images to file. When snapshot images from all projects are completed, difference images based on generated and QA-approved images are computed. Based on these three sets of images, an HTML report is created and automatically displayed. How to Run Regression Tests To be able to run regression tests you need the compare tool from the ImageMagic suite.\nYou can start the tests either from the command line or from the ResInsight Gui. From the ResInsight Gui select : File-\u003eTesting-\u003eRegression Test Dialog\nSpecify location of compare tool in Folder containing compare. The current working directory of ResInsight is temporarily changed to this path during execution.\nTo execute a subset of tests, specify folder names separated by “;” in the Test Filter. If the test filter is empty, all tests are executed.\nCreating Regression Tests An example of the folder structure is shown below:\nRegressionTestFolder/\rTestCase1/\rRegressionTest.rip\rRegTestBaseImages/\rRegTestDiffImages/\rRegTestGeneratedImages/\rTestCase2/\r...\rTo create regression tests you need to do the following:\nCreate a root directory containing one directory for each test case. In each of the Test Case folders create a ResInsight project file called RegressionTest.rip. Run the regression test for the first time, and thereby creating images that can be used as Base images. Rename the generated RegTestGeneratedImages/ folder to RegTestBaseImages/ Now you are all set to test new releases of ResInsight towards your own Regression tests.",
    "description": "A regression tool for QA is build into ResInsight. This tool will do the following:\nScan a directory for sub directories containing a RegressionTest.rsp files. Each found project file will be opened, and all views in this project will be exported as snapshot images to file. When snapshot images from all projects are completed, difference images based on generated and QA-approved images are computed. Based on these three sets of images, an HTML report is created and automatically displayed. How to Run Regression Tests To be able to run regression tests you need the compare tool from the ImageMagic suite.",
    "tags": [],
    "title": "Regression Test System",
    "uri": "/misc/regressiontestsystem/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases",
    "content": "LinkedIn Feel free to join ResInsight on LinkedIn\nNewsletter By subscribing to the Release Notification you will get notified when new releases are available. Please use the button below to send a request for subscription mail.\nSubscribe",
    "description": "LinkedIn Feel free to join ResInsight on LinkedIn\nNewsletter By subscribing to the Release Notification you will get notified when new releases are available. Please use the button below to send a request for subscription mail.\nSubscribe",
    "tags": [],
    "title": "Release Notification Subscription",
    "uri": "/releases/releasenotification/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "A Summary Cross Plot is a window displaying a graph in the main area of the Plot Main Window. It is very similar to an ordinary Summary Plot, but the x-axis displays summary vector values instead of time. Regression analysis is supported on single cross plot curves and ensemble statistics curves.\nSummary Cross Plot Curves New cross plot curves are created by using the right-click command New Summary Cross Plot Curve on a summary plot.\nCross plot curves can also be created from the right-click menu in the Summary Data Sources. The combination of cross plot curves are defined in Plotting Preferences. Select the cross plot curve object to modify the properties for the curve. Make sure that the Axis Type is set to Summary Vector.\nIn this property editor, there is an additional group called Summary Vector X Axis. Like the other property editor groups, the vector selection groups works the same way as in the ordinary summary plot.\nSee the detailed description.\nSummary Cross Plot Ensemble When computing statistics curves for the ensemble, the x-axis is divided into bins. For each bin, all values are collected. A minimum realization count is used descide if there are enough realizations to compute statistics. The number of bins and realization count threshold can be set in the Property Editor for the ensemble.\nWhen creating cross plots based on ensembles, the appearance of curves can be adjusted in the property editor. Note that the appearance of statistics curves also can be customized in the Statistics group. Regression analysis is supported on ensemble statistics curves.\nCross Plotting A cross plot is established based on two input summary vectors. Each entry in the cross plot consists of one vector item value from each of the two input vectors having equal time steps. However, in most cases the two input vectors do not share the same time steps. To be able to create a cross plot in such cases, linear interpolation between adjacent input vector items is being used.\nWhen a current time step T in input vector A is not found in input vector B, ResInsight interpolates between the time steps before and after T in vector B. In this way, ResInsight calculates an interpolated value for time step T from vector B. The same happens when a time step in vector B is not found in vector A.\nIf either the value at the current time step or one of the values involved in interpolation are NULL, the resulting vector will have a NULL value at the current time step. This is displayed as a ‘hole’ in the cross plot curve.",
    "description": "A Summary Cross Plot is a window displaying a graph in the main area of the Plot Main Window. It is very similar to an ordinary Summary Plot, but the x-axis displays summary vector values instead of time. Regression analysis is supported on single cross plot curves and ensemble statistics curves.\nSummary Cross Plot Curves New cross plot curves are created by using the right-click command New Summary Cross Plot Curve on a summary plot.",
    "tags": [],
    "title": "Summary Cross Plot",
    "uri": "/plot-window/summarycrossplots/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "This chaper describes the following aspects of wells and completions:\nhow wells defined in the simulation are displayed and how to control the different aspects of their visualization retrieval of well trajectories from file and an internal Equinor web service the creation of user-defined well paths display of well log curves directly in a 3D view based on well log data from a simulation model or imported LAS-files modeling and export of completions including perforation intervals, fishbone wells and fractures in order to perform refined simulations creating and exporting local grid refinement (LGRs) in main grid cells intersected by completions The following subchapters details the functionality and capabilites.",
    "description": "This chaper describes the following aspects of wells and completions:\nhow wells defined in the simulation are displayed and how to control the different aspects of their visualization retrieval of well trajectories from file and an internal Equinor web service the creation of user-defined well paths display of well log curves directly in a 3D view based on well log data from a simulation model or imported LAS-files modeling and export of completions including perforation intervals, fishbone wells and fractures in order to perform refined simulations creating and exporting local grid refinement (LGRs) in main grid cells intersected by completions The following subchapters details the functionality and capabilites.",
    "tags": [],
    "title": "Wells and Completions",
    "uri": "/wells-and-completions/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Template creation A summary plot template is defined by a number of subplots and curves with preset appearance and vector names. Having tailored a plot setup, the user can save the setup as a template for later reuse via the Plots window right-click command Save As Plot Template which pops the Export Plot Template dialog seen above.\nA Summary Plot Template can subsequently be used for summary plotting of various data sources. The data sources that can be selected and varied by the user are:\ncase(s), ensemble(s), and realization(s) well(s), group(s), and region(s) When saving a Summary Plot Template, ResInsight incorporates by default placeholders for using the template in conjunction with various wells, groups, and regions. On the other hand, expand and check the appropriate boxes if you want to persist the specific wells, groups, and/or regions as part of the plot template definition. To exemplify, checking Wells for persistence enables plotting of data for the exact wells of the template in conjunction with any ensemble realization.\nUpon export, ResInsight automatically categorizes the template as an Ensemble Template if the template involves plotting of data for an ensemble. Otherwise the template is categorized as a Summary Case template. Ensemble Templates are listed with the icon while Summary Case templates are listed with the icon in the Templates Window, c.f. below.\nEach summary plot template is stored in a single file on disk. ResInsight searches a set of directories for template files which are listed and managed by Plotting Preferences. Given a new path, ResInsight will ask the user to confirm whether the path of the stored template is to be included in subsequent searches for templates.\nTemplate usage Right-clicking in Data Sources and clicking Create Summary Plot from Template will list available summary plot templates for selection. To reapply the previously used template, invoke Create Plot from Last Used Template or simply press Ctrl-T. Both approaces create a summary plot according to template.\nNote\rSummary templates made with prior versions are incompatible with ResInsight 2022 due to significant extensions of functionality. Please load summary plots of prior versions via project files or re-establish plots prior to saving templates with ResInsight 2022.\nDefault templates Default templates is a powerful feature to automate the generation of summary plots when importing a summary case or ensemble. The basis for automation is the selection of one or more default templates.\nSpecify each default template by right-clicking in the Templates window. Then activate the use of default templates by specifying Use Plot Templates in the Plotting tab of Preferences, c.f. menu option Edit→Preferences.\nAs shown, default templates are listed with a green color in their icon. Both Summary Case templates and Ensemble templates may constitute default templates. When loading a summary case, the default Summary Case templates will be applied automatically, while default Ensemble templates will be applied automatically when loading an ensemble.\nTemplates window As seen above, the Templates window enables management and overview of summary plot templates by directory and offers the following functionality:\ncreate new plot based on selected template rename template delete template edit template XML file in the Script Editor specified in Preferences specifying default template as described above reload templates in ResInsight in case of directory or file changes on disk See also menu option Edit→Preferences for managing template folders and template searches.",
    "description": "Template creation A summary plot template is defined by a number of subplots and curves with preset appearance and vector names. Having tailored a plot setup, the user can save the setup as a template for later reuse via the Plots window right-click command Save As Plot Template which pops the Export Plot Template dialog seen above.",
    "tags": [],
    "title": "Summary Plot Template",
    "uri": "/plot-window/summaryplottemplate/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Summary Tables are a display of curve data based on Eclipse Summary Data as a color map in table format. It shows summary data of vectors for the selectable categories: Well, Group or Region.\nSummary tables are displayed with the summary vectors on each row, and time step values according to selected Date Resampling in each column - as shown with resampling Year in the screenshot above.\nThe table can be formatted by use of the Property Editor, shown below. Columns are controlled by the selection of resampling, and rows are controlled by selected Threshold value and Exclude Rows.\nCreating Summary Tables Using Data Sources to create Summary Tables Having imported Eclipse Summary Data, Data Sources provides an easy approach to create Summary Tables:\nSearch or navigate Data Sources to find the desired source and vector Right-click selected vector and select New Summary Table Duplicate Summary Table When a Summary Table is created and configured, the table can be duplicated by Right-click on the respective table in the Project Tree and selecting Duplicate Summary Table. This creates a new Summary Table with the same configuration, and a new table can be created with minor adjustments in the Property Editor.\nCreate default Summary Table A default Summary Table can be created by Right-click on the Summary Table collection and select New Summary Table. This creates a new default Summary Table, which can be configured by selections in the Property Editor\nEditing Summary Table The settings of each table is listed in the Property Editor for a Summary Table. By selecting a Summary Table, its properties are displayed.\nThe main controls for a Summary Table is listed below:\nCategory - Select which category to select vectors from: Well, Group or Region. Vector - Selection of vector type available for selected category in case. Date Resampling - Select date resampling to control number data values for each vector - i.e. number of columns. The resampling is ensuring equal time stamps across all summary vectors in table. Threshold - Set threshold value for summary vector. Exclude row (vector) if each time stamp value are below selected threshold. Exclude Rows - Select which rows (vectors) to exclude from the table. Time Filter - Define the visible time range",
    "description": "Summary Tables are a display of curve data based on Eclipse Summary Data as a color map in table format. It shows summary data of vectors for the selectable categories: Well, Group or Region.\nSummary tables are displayed with the summary vectors on each row, and time step values according to selected Date Resampling in each column - as shown with resampling Year in the screenshot above.",
    "tags": [],
    "title": "Summary Tables",
    "uri": "/plot-window/summarytables/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "A Multi Plot allows the user to combine multiple plots in a grid layout. Plots from different types can be combined. This plot type is tailored for export to PDF.\nMulti Plot Usage A new Multi Plot can be created by selecting a set of plots and from the right-click menu select Create Multi Plot from Selected Plots\nThe currenly supported types of plots to be part of a Multi Plot are:\nSummary Plots Ensemble Plots Grid Cross Plots Saturation Pressure Plots Phase Distribution Plots Properties The main page layout is controlled from Preferences The property editor of a multi plot allows further customization\nThe number of columns can also be controlled from the Multi Plot toolbar. Export to PDF Export to PDF is available from the right-click menu of a Multi Plot, or directly from the PDF export button in the toolbar.",
    "description": "A Multi Plot allows the user to combine multiple plots in a grid layout. Plots from different types can be combined. This plot type is tailored for export to PDF.\nMulti Plot Usage A new Multi Plot can be created by selecting a set of plots and from the right-click menu select Create Multi Plot from Selected Plots",
    "tags": [],
    "title": "Multi Plots",
    "uri": "/plot-window/multiplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "Three types of completions are available for modeling and export: Perforation intervals, fishbone wells and fractures. The purpose of modeling these completions, is that it enables ResInsight to export Eclipse keywords for doing more refined simulations.\nCompletions can be modeled by adding new perforation intervals, fishbones subs or fractures. Details about the completions must then be specified, such as the length of the perforation interval or number of fishbone subs and laterals. After modeling the completions, the transmissibility (cell connection factors) can be calculated and exported to the Eclipse COMPDAT Keyword. See Export Completions\nFor fishbones completions, multi-segment well information can even be exported to the Eclipse Keywords WELSEGS, COMPSEGS and WSEGVALV, c.f. Export Well Segments.\nNote\rThe derived cell property Completion Type displays wich cells are intersected by the completions.\nVisualization and Inspection of Well Connection Factors Connection factors both from the Simulation Wells and the ones calculated from the modeled completions can be visualized in the 3D view by enabling Well Connection Factors in the Project Tree. The connection factors are displayed with a symbol as in the example shown above. The color of the symbol displays the magnitude of the connection factor and can be controlled by the legend settings. Additional details of the connection factor are displayed in the Result Info window when clicking on the connection factor symbol.\nThe Property Panel of the Well Connection Factors item has a few options:\nGeometry Scale Factor – Scales the connection factor symbols relative to the displayed well path radius Show on Closed Connections – Show the connection factors calculated for closed simulation well cells in addition to the ones at open cells. A combined view of well connection factors and the derived result Completion Type enables the user to see the completion type contributing to connection factor in a cell.\nPerforation Intervals A new perforation interval on a well can be set up by right-clicking on the well in the 3D View or in the Project Tree, and choosing the command Create Perforation interval in the Create Completions sub-menu. In the 3D View the completion will be created at the specific depth the right-click occurred at.\nAfter creating the perforation interval, the following properties of the perforation can be set in the property editor:\nStart MD, End MD – Measured depth along the well path for the perforation to start/stop. Diameter – Well bore diameter for the perforation interval, used in calculation of transmissibility ( For details on the transmissibility calculation, see Transmissibility Calculations). Skin Factor – Skin factor for the perforation, used in calculation of transmissibility. All Timesteps – If on, the perforation interval will be present for all time steps Start Date – The perforation will be included in the model for all time steps after this date. If “All TimeSteps” is turned on, this option is not available and the perforation is included for all time steps. The perforation intervals will be indicated by different color along the well path.\nFor each well path there is a top level folder in the Project Tree containing all the perforation intervals definitions containing settings that applies to all the perforation intervals for this well path.\nFor multi-segment wells there are additional parameters which should be set. These are used in the export of WELSEGS data.\nMulti Segment Well Options - Options used by the Well Segments Export Liner Inner Diameter – The liner inner diameter for the completion intervals. Roughness Factor – The roughness factor used in export of main bore segments. Pressure Drop – can be either Hydrostatic, Hydrostatic + Friction or Hydrostatic + Friction + Acceleration. Length and Depth – Used in WELSEGS export - when specifying the length and depth change for each segment Incremental – length / depth of given segment Absolute – the length down the tube or depth of the last nodal point Enforce Max Segment Length – Limit segment to max size. When this check box is checked, a max segment length input field is displayed. There are three options for Non-Darcy Flow. None, User defined D-factor and Compute D-factor. The second option displays an input field where the user defined D-factor can be entered. The last options calculates D-factor for gas given Dake´s (1976) radiel inflow model and correlation for calculating matrix beta factor depending on permeability and porosity.\nNon-Darcy Flow - Non-Darcy settings for D factor computation Grid Permeability Kr Scaling Factor – Rel.perm. scaling factor to calculate effective permeability. Well Radius – Well bore radius. Relative Gas Density Gas Viscosity – Gas viscosity at flowing bottom hole pressure. Inertial Coefficient – Coefficient to calculate beta factor. Permeability Scaling Exponent – For beta factor calculation. Porosity Scaling Exponent – For beta factor calculation. Perforation Interval Valves Perforation Intervals can have valves (ICDs/AICDs/ICVs) associated with them.\nThese valves can be created by right-clicking on the Perforation Interval and selecting Create Valve.\nEach Valve require a Valve Template containing properties which can be shared among multiple Valves. If you have no Valve Template, a new one can be created by clicking the New button next to the Valve Template selection list.\nThis will create a new Valve Template which can be of three different types:\nICD - In-flow Control Device, allowing the setting of Orifice Diameter and Flow Coefficient. ICDs are displayed in Orange. AICD - Autonomous In-flow Control Device, providing several more parameters associated with the Eclipse simulation and seen in the picture below. AICDs are displayed in Dark Purple. ICV - Interval Control Valves. Contains the same parameters as ICDs. The difference between the two in ResInsight is that many ICDs can be added at the same time, while there is only expected to be one ICV per perforation interval. ICVs are displayed in Pink. An example of the ICD parameters can be seen below: An example of the AICD parameters: AICD valves can be imported from Completor or Eclipse text files from the right-click menu of Valves.\nNew templates can also be added by selecting the New Valve Template option from the right-click menu of the Valve Templates entry in the Completion Templates Project Tree item.\nFor ICDs and AICDs, multiple valves can be added in the same go by specifying the number of valves, spacing of valves or specific positions of valves as chosen in the Location Defined By drop down list.\nFor ICVs only one valve is added at a time so only the measured depth of that valve can be chosen.\nWhen you have a valid valve template selected, there is an Edit button next to the valve template selection. Clicking this will take you straight to modify the valve template.\nImport Perforation Intervals Perforation intervals can be imported into ResInsight from *.ev files. These files consist of a list of wells, and their corresponding measured depth values for perforation start and end.\nPerforation Interval File Format “–” is interpreted as the start of a comment. The comment ends at the end of the line. The files can start with a unit definition line:\nUNITS \u003cunitname\u003e\rInfo\rThis line is ignored for now. The numbers are interpreted to be in the units present in the case.\nIn the following any number of :\nWELLNAME \u003cwell-name\u003e\r\u003cdate\u003e \u003cwell completion\u003e \u003ctop mMD\u003e \u003cbase mMD\u003e \u003cbore hole diameter\u003e \u003cskin factor\u003e\r\u003cdate\u003e \u003cwell completion\u003e \u003ctop mMD\u003e \u003cbase mMD\u003e \u003cbore hole diameter\u003e \u003cskin factor\u003e\rdate – Start date of the completion in the format “dd mmm yyyy”. Eg 01 SEP 2006. A special \"SOH\"date is also allowed meaning Start Of History. well completion – For now, only \"perforation\" is supported Here is an example:\nUNITS METRIC\r-- R-2 AH sidetrack into Ile/Tilje\rWELLNAME R-2AH\r\"SOH\" perforation 6200 6350 0.212 0 -- taget Ile 2 and Ile 3\r\"SOH\" perforation 7050 7133 0.212 0 -- target Tilje 3, 83 m prodint\r-- S-2 AH\rWELLNAME S-2AH\r\"SOH\" perforation 4340 4369 0.212 0 -- target Garn 2, 29 m prodint (update 290915)\r01 SEP 2006 perforation 5060 6185 0.212 0 -- target Tilje 3, 1125 m prodint\rFishbones Fishbones are completions created by drilling or by jetting a set of small lateral holes with a high deviation from the main bore. Each set of holes created at the same location along the main bore, is referred to as a sub while each individual hole is called a lateral.\nFor each well path there is a top level folder in the Project Tree containing all the Fishbones definitions containing settings that applies to all the fishbones for this well path. To make use of the Multi Segment Well option for pressure loss along laterals, the grid resolution needs to be fine enough to allow a grid cell to be connected to only one lateral.\nFishbone Well Properties – Settings used when exporting well connection factors StartMD – the start position for the fishbones. This will be set to the highest possible value automatically, but can be set lower by the user. Gives the point along the well from which the transmissibility from the matrix to the main bore will be calculated. Main Bore Diameter – The hole diameter for the main bore will be used in the calculation of the transmissibility (connection factor) into the main bore. Main Bore Skin Factor – The skin factor for the main bore, used in calculation of the transmissibility (connection factor) into the main bore. For multi-segment wells there are additional parameters which should be set. These are used in the export of WELSEGS data. Multi Segment Wells - Options used by the Well Segments Export Liner Inner eter – The liner inner diameter for the fishbones. Roughness Factor – The roughness factor used in export of main bore segments. Pressure Drop – can be either Hydrostatic, Hydrostatic + Friction or Hydrostatic + Friction + Acceleration. Length and Depth – Used in WELSEGS export - when specifying the length and depth change for each segment Incremental – length / depth of given segment Absolute – the length down the tube or depth of the last nodal point Fishbones Subs Definition To add new fishbones completions, select the New Fishbones Subs Definition command. This menu item is available by right clicking on Wells in the Project Tree or right clicking on the well trajectory in the 3D View.\nThe new Fishbones Subs Definition (a group of fishbone subs) is created in the Project tree. Several subs definitions can be created on the same well trajectory to give more flexibility in placing of the fishbones. The default sub definition is based on the Fishbones Drilling System with 3 laterals exiting per sub in a 8 1/2\" main bore.\nAppearance Fishbones Color – The 3D View color of the fishbones created by this definition Location – Options to control the position and number of fishbone subs created by this definition Location Defined By – This setting will select how to define the location of the subs in this group. Start MD – Position, in Measured depth along the well, of the first fishbone Sub. End MD – Position of the last fishbone Sub. Number of Subs – Defines the number of subs to create in the defined interval Spacing – Spacing between the subs within the interval Measured Depths – The measured depth of each of the fishbone subs. If the Location Defined By is set to the User Specified this will be directly editable by the user. Laterals Configuration – Configures the laterals at each sub position. Laterals Per Sub – Number of laterals for each sub position Length(s) – Length of each lateral, in m or ft. Exit Angle – Exit angle for fishbone lateral, in degree. Build Angle – Build angle for fishbone lateral, in degree pr meter. Orientation Fixed Angle – The user can specify the angle for the first lateral Random angle – Each sub will have a random orientation. Notice that the angle between each of the laterals will be constant, with the laterals equally spaced. Install Success Rate – Gives the probability of success for installation of each of the fishbones laterals. If 1, all laterals are installed. Well Properties – Settings to control the connection factor calculation used in Completion Export) Hole Diameter – The hole diameter of the lateral Skin Factor – The skin factor used in the transmissibility calculation for the lateral. Multi Segment Wells – Settings used for Well Segment Export Tubing Diameter – The diameter used in the WELSEGS export of the laterals. Open Hole Roughness Factor – Exported directly to the WELSEGS keyword. Tubing Roughness Factor – Exported directly to the WELSEGS keyword. ICDs per Sub – The number of ICD (valves) per Sub, used for calculation of total ICD area for WSEGVALV export. ICD Orifice Diameter – The Diameter of the ICD, used for calculation of ICD area for WSEGVALV export. ICD Flow Coefficient – The flow coefficient, exported directly as a part of WSEGVALV. Import Well Trajectories as Fishbones Laterals The command Import Completions From File can be used to import well trajectories in the *.dev format as fishbone laterals. The imported laterals are listed under the folder Imported Laterals in the Project Tree. These laterals behave as completions, and will be exported when exporting completion data using the settings in the property panel of the Imported Laterals folder.\nExport Fishbones as Well Trajectories The Export Laterals command will export the fishbone laterals as a well trajectory into a *.dev* -file.\nInfo\rNotice that only the trajectory data is exported. Properties related to well segment data or Completion Data export can not be written to .dev files.\nFractures Hydraulic fractures are completions created by pressurizing the reservoir at a certain point in the well, and thereby creating a crack in the formation. A substance is then injected into the crack to keep it open when relaxing the pressure.\nFractures in ResInsight can be added both to simulation wells and Well Trajectories, and have two main types: Elliptical fractures and StimPlan fractures.\nVisualization control The Fractures item in the Project Tree controls whether to show the modeled fractures or not. For fractures along the well path the Perforation Length is shown as an olive green cylinder around the well path as shown in the image below.\nColors – Control the color settings for the fractures in the View Result Variable – Selects the fracture result to use for coloring the fracture. This is most interesting when you have imported a StimPlan fracture with varying width, conductivity and other parameters. The legend item in the Project Tree controls how the legend is set up. Default Color – The color to use if the requested result is not available for some fracture. StimPlan Show Mesh – Toggles the visualization of the StimPlan mesh lines, showing the StimPlan cell borders Color Interpolation – Toggles interpolation of the StimPlan results. When Off, one color per StimplanCell is shown. When on, ResInsight interpolates the color between the cells. Fracture Templates To create a functioning fracture you first need a Fracture Template. The template collects settings that are likely to be shared among several fractures, most importantly the fracture geometry. A fracture at a particular place refers to the template, and it is thereby possible to share fracture geometry and other settings between fracture instances.\nFracture Templates are listed in a folder with the same name in the Project Tree.\nTo create a new fracture template, right-click the Fracture Template item in the tree, and select either New Ellipse Fracture Template or New StimPlan Fracture Template. If you have no existing fracture templates, you will be given the opportunity to create such templates through two buttons in the Fracture Property Editor as seen below.\nCommon Fracture Template Options Name – User defined name for the template. Used when selecting which template to use in the Fracture ID – Assigned ID to be used when addressing this template form a Command file script Geometry Fracture Orientation – The fractures orientation Transverse(normal) to Well Path – The fracture plane is vertical and normal to the well path at the intersection point. Along Well Path – Fracture is vertical and along the well path. This option enables options to control the perforation length and the efficiency of the well in the fracture. See below. Azimuth – The fracture is vertical and in line with the Azimuth Angle (measured from North) supplied. Fracture Truncation Use Containment – Enable this option to activate layer containment. Top Layer – Topmost K-layer that the fracture will drain. Base Layer – Lowest K-layer that the fracture will drain. Truncate At Faults – Enable this option to activate fault truncation. Minimum Fault Throw – Fault throw threshold to activate fault truncation. Properties – The availability of these options depend on the Fracture Orientation and the Conductivity in Fracture setting. Conductivity in Fracture Finite Conductivity – Use a calculated conductivity for flow in the fracture. Either the StimPlan conductivity, or a constant conductivity in Ellipse fractures. Infinite Conductivity – Assume infinite conductivity in the fracture itself. For StimPlan fractures this will ignore the conductivity in the StimPlan data. Skin Factor – Used when exporting to Eclipse. Perforation Length – The length of the intersection between the well bore and the fracture when the fracture is along the well path ( Fractures Along Well Path only ). Perforation Efficiency – The efficiency of the wellbore-fracture perforation ( Fractures Along Well Path only ). Well Diameter – Used when exporting to Eclipse. Sensitivity Scale Factors – Each of the properties are scaled by the scaling factor. When used interactively, the Apply button must be pressed to apply the scaling factors. These scaling factors are also available from command file scripting Height, Width – Scales the height or the Halflength of the fracture template D-factor – Scales the none-darcy flow factor Conductivity – Scales the conductivity in the fracture directly Non-Darcy Flow Non-Darcy Flow is used to improve the computation of connection factors for cells penetrated by well pipes. A pre-computed D-factor can be set using User Defined D-factor. Selecting the option Compute D-factor displays the following set of properties:\nInertial Coefficient User Defined – Beta-factor in Forcheimer units Use Fracture Beta Factor – Extract beta factor from the fracture template at the well intersection location. For transversal fractures, the conductivity is computed from the geometric average of fracture cells intersected by the fracture perforation length. Effective Permeability User Defined – Defines the permeability Ke in milliDarcy in the property Effective Permeability Use Fracture Conductivity – Extract conductivity from the fracture template at the well intersection location and scale with Relative Permeability. For transversal fractures, the conductivity is computed from the weighted average of fracture cells intersected by the fracture perforation length. Width User Defined – Defines the width of the fracture Use Fracture Width – Extract width from the fracture template at the well intersection location. For transversal fractures, the width is based on the weighted average of fracture cells intersected by the fracture perforation length. Relative Gas Density Gas Viscosity D Factor – Displays the computed value of the D factor. NOTE : For transversal fractures, the computed D factor is scaled by 1.2 to compensate for a different flow model D Factor Details – Displays the value of variables used to compute the D factor Ellipse Fracture Template Name – User name of this particular fracture template Geometry Halflength Xr – Half the width of the ellipse Height – The height of the elliptical fracture Fracture Orientation – See above Fracture Truncation – See above Properties – The availability of these options depend on the Fracture Orientation and the Conductivity in Fracture setting Permeability – A constant permeability inside the fracture (Used to calculate conductivity in the fracture) Width – Crack width (Used to calculate conductivity in the fracture) Sensivity Scale Factors – See above Non-Darcy Flow – See above Stimplan Fracture Template StimPlan fracture templates imports XML output from the StimPlan software. These XML files contains results from a simulated hydraulic fracture, describing both geometry, varying crack width, resulting conductivity etc. as time varying quantities. Both symmetric and asymmetric StimPlan fracture templates are supported.\nName – User name of this particular fracture template Show StimPlan Mesh – Show or hide the mesh lines on the fracture in the 3D View Input File Name – Path to the imported StimPlan XML-file Active Time step Index – Time step in the StimPlan simulation to use for transmissibility calculations and visualization Well/fracture Intersection Depth – The position of the fracture along the well path as MD. Geometry Fracture Orientation – See above Fracture Truncation – See above Properties Conductivity Scaling Factor – Scale the overall conductivity to do sensitivity studies. Sensitivity Scale Factors – See above Non-Darcy Flow – See above Fracture Instances Instances of fractures can be created along well paths and simulation wells by right clicking the well pipe in the 3D view, or the corresponding items in the Project Tree.\nName – User editable name Fracture Template – Select the fracture template to use for this fracture. Click the Edit shortcut next to the template selection list to go directly to modify the selected template. Location/Orientation Measured depth Location – The measured depth Azimuth – Azimuth orientation of fracture. Dip – Dip of fracture plane Tilt – Rotation of fracture about its plane normal Properties Fracture Unit System – Read only display of the units used for the current template StimPlan Time Step – Displays the time step used by the template Perforation Length / Perforation Efficiency / Well Diameter – These values are copied from the new template when selecting a different one. See Common Fracture Template Options Fracture Center Info – This group displays info on where the center of the fracture is positioned. The center is defined to be where the well path intersects the fracture. Multiple Fracture Creation In some cases the user wants to create a number of fractures on one or more well paths. Doing this by creating one by one fracture can be very error prone and time consuming. To ease this task, ResInsight has support for creating several fractures in one operation.\nSelect one or more well paths in the project tree, right click and select Create Multiple Fractures from the right-click menu. Then the Create Multiple Fractures dialog appears. In this dialog, the user defines where fractures will be created on the selected well paths. Different fracture templates and spacing can be used for different K layer ranges in the grid, by adding new options lines to the table. To edit an option line, double click the field to edit. Adding and deleting option lines are done by right clicking the table.\nCase – Current grid case Min Distance From Well TD – Minimum distance from well tip for created fractures Max Fractures Per Well – Maximum number of fractures to create per well Options Top K Layer – The topmost K layer to add fractures to Base K Layer – The bottommost K layer to add fractures to Template – The fracture template used in the specified K layer range Spacing – The distance between each fracture in the K layer range Generated Fractures – Output information to the user. Shows number of fractures that will be created on each selected well path Replace Fractures – Press this button to delete all existing fractures on the selected wells before creating new fractures Add Fractures – Press this button to add the new fractures to all selected wells (not deleting existing fractures) The Create Multiple Fractures function is also available as a CommandFile command. See the CommandFile section",
    "description": "Three types of completions are available for modeling and export: Perforation intervals, fishbone wells and fractures. The purpose of modeling these completions, is that it enables ResInsight to export Eclipse keywords for doing more refined simulations.\nCompletions can be modeled by adding new perforation intervals, fishbones subs or fractures. Details about the completions must then be specified, such as the length of the perforation interval or number of fishbone subs and laterals. After modeling the completions, the transmissibility (cell connection factors) can be calculated and exported to the Eclipse COMPDAT Keyword. See Export Completions",
    "tags": [],
    "title": "Completions",
    "uri": "/wells-and-completions/completions/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "Importing Ensemble Fracture Statistics Right-click on Completion Templates \u003e Ensemble Fracture Statistics in the Project Tree and select the Import StimPlan Fracture Recursively option. Then select the StimPlan fracture Xml files to be part of the ensemble.\nAfter importing the Property Panel of the Ensemble Fracture Statistics item has these options:\nName – Name of the ensemble fracture statistics. Exclude Zero Width Fractures – Toggle to remove zero width fractures from the statistics. Mesh Alignment – Specifies how to align the mesh. Mesh Depth – Use the raw mesh depths from file without adjustment. Perforation Depth – Adjusts the mesh location to have the perforation at the same location when computing the statistics. Mesh Type – Specifies the meshing strategy. See details below. Statistics Type – The statistics to compute. Mesh Types The imported StimPlan fractures are stacked on top of each, and a statistics mesh is created. The statistics mesh covers the extents of all the individual meshes in the ensemble.\nAdaptive Mesh The adaptive mesh tries to optimize the horizontal depth spacing to have coarse sampling where the source meshes are coarse, and fine sampling where necessary. This is achieved by grouping the layer thicknesses of the individual meshes into fixed bins, and then scaling the vertical size of each layer according to their mean size.\nMean Type – The mean calculation used to scale the layer thickness. Harmonic – See Harmonic mean for details. Arithmetic – Average. See Arithmetic Mean for details. Geometric – See Geometric Mean for details. Minimum – Use the minimum thickness. Number of Layers – Specifies the number of layers to create. Average – Use the average number of layers of the individual fractures of the ensemble. Minimum – Use the minimum number of layers of the individual fractures of the ensemble. Maximum – Use the maximum number of layers of the individual fractures of the ensemble. User-Defined – The user specifies the number of layers. The mesh is evenly spaced in the lateral direction using the maximum number of cells in the individual fractures of the ensemble.\nUniform Mesh The uniform mesh has cells of a equal size. The minimum and maximum extents of all the meshes in both directions is found, and the interval is divided into equal cells.\nX – The number of cells in lateral direction. Y – The number of cells in depth direction. Naive Mesh The naive method produces a mesh where every depth in all the individual fractures of the ensemble is present.\nThe mesh is evenly spaced in the lateral direction using the maximum number of cells in the individual fractures of the ensemble.\nStatistics Mesh Computation The statistics mesh samples each individual fracture of the ensemble in each cell center. The value of the cell containing the statistics mesh cell center is used. Invalid values or empty cells are ignored. The values at each cell center are gathered, and the chosen statistics (e.g. P10 and Mean) is computed per cell.\nThe statistics meshes are written to file in a StimPlan compatible XML file, and is imported into Fracture Templates in the Project Tree.\nStatistics Table The statistics table contains overall statistics on key properties of the fractures.\nHeight – Longest aggregate height of conductive cells. Area – Area of the conductive cells of the fracture. Width – Width of conductive cells weighted by their area. Halflength (Xf) – Length of the fracture is area divided by height. Xf is half of the length. Conductivity (KfWf) – Conductivity weighted by area. Permeability – Permeability (i.e. conductivity divided by width) weighted by area. Formation Dip – Formation dip as reported in the Xml file.",
    "description": "Importing Ensemble Fracture Statistics Right-click on Completion Templates \u003e Ensemble Fracture Statistics in the Project Tree and select the Import StimPlan Fracture Recursively option. Then select the StimPlan fracture Xml files to be part of the ensemble.\nAfter importing the Property Panel of the Ensemble Fracture Statistics item has these options:\nName – Name of the ensemble fracture statistics. Exclude Zero Width Fractures – Toggle to remove zero width fractures from the statistics. Mesh Alignment – Specifies how to align the mesh. Mesh Depth – Use the raw mesh depths from file without adjustment. Perforation Depth – Adjusts the mesh location to have the perforation at the same location when computing the statistics. Mesh Type – Specifies the meshing strategy. See details below. Statistics Type – The statistics to compute. Mesh Types The imported StimPlan fractures are stacked on top of each, and a statistics mesh is created. The statistics mesh covers the extents of all the individual meshes in the ensemble.",
    "tags": [],
    "title": "Ensemble Fracture Statistics",
    "uri": "/wells-and-completions/ensemblefracturestatistics/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "An ensemble is a group of cases that are tightly coupled, only a set of ensemble input parameters differ between cases. This makes it relevant to perform calculations and statistics analysis on ensembles.\nImport There are several ways to import an ensemble:\nUse menu option File-\u003eImport-\u003eSummary Cases-\u003eImport Ensemble Use menu option File-\u003eImport-\u003eSummary Cases-\u003eImport Summary Case group and then convert the group to an ensemble Import a number of summary cases, move them into a group and then convert the group to an ensemble During import of a summary case, ResInsight tries to find an associated parameters.txt file or runspecification.xml file containing ensemble parameters. If found, the ensemble parameters are stored together with the summary case. When the user adds a summary case to an ensemble, then ResInsight will perform ensemble parameters validation. A warning dialog is displayed in the following cases:\nOne or more of the cases in the ensemble have no ensemble parameters The list of ensemble parameters differ between cases in the ensemble Ensemble File Dialog\nBest Practices Summary Data\nNaming The name of an ensemble can be changed by interactive edit of the name in the Project Tree (by clicking or using F2) or selecting the ensemble and changing the name in the Property Editor.\nPlotting Ensembles are plotted in the summary plot the same way as ordinary summary curves. Create a new summary plot using the summary plot editor. Imported ensembles will appear in a separate group in the list of summary cases. When an ensemble is selected, a new curve set is created and plotted as multiple summary curves. By default all curves in an ensemble curve set will have the same color.\nA color selection dialog can be opened by clicking on the color icon in the Project Tree. The coloring mode may be edited in the curve set’s property editor in the project plot tree view. Two coloring modes are available:\nSingle color Use the same color for all curves in a curve set Single color with Transparency Use transparency for the ensemble curves By Ensemble Parameter One ensemble parameter is selected to control coloring. The ensemble parameter value for each case is used to pick a color in a color range. In this case a color legend appears. By Objective Function Use the value of an objective function for colors. By Custom Objective Function Use the value of an objective function for colors. Stepping of data source for ensemble curves is described in Summary Plot Source Stepping\nObjective Functions\nResampling Resampling of curves is possibly by selecting the actual curve(s) listed by the Ensemble Curve Sets item in Plot Project Tree and using the Resampling feature of Property Editor.\nStatistics curves If the number of curves in a curve set is sufficient, ResInsight will calculate statistics for the curve set. The following statistics curves may be displayed:\nP10 – 10% of the curves in the curve set are above this curve P50 – 50% of the curves in the curve set are above this curve Mean – Aritmetic mean for the curves in the curve set P90 – 90% of the curves in the curve set are above this curve Statistics curves may be toggled on or off in the curve set’s property editor.\nDelta Ensemble A new ensemble can be created based on calculations on two or more ensembles. Such an ensemble is called an Delta Ensemble. A delta ensemble will contain data which are either the sum or difference between two other ensembles. An existing delta ensemble may be input to a new delta ensemble, making it possible to, for instance, add more than two ensembles.\nTo create a delta ensemble, select two existing ensembles in Plot Project Tree, then right-click and select New Delta Ensemble. A new delta ensemble is created with the two selected ensembles as input and a default arithmetic operator. In the property for the delta ensemble, both input ensembles and operator can be modified. Checking Match On Parameters ensures strict match on ensemble parameters. In addition, it is possible to specify a fixed time step to be used in delta computation, see Delta Summary Case for an example.\nIf the two input ensembles differs in which cases they consist of, ResInsight will display a warning and let the user decide whether to create the delta ensemble or not.",
    "description": "An ensemble is a group of cases that are tightly coupled, only a set of ensemble input parameters differ between cases. This makes it relevant to perform calculations and statistics analysis on ensembles.\nImport There are several ways to import an ensemble:\nUse menu option File-\u003eImport-\u003eSummary Cases-\u003eImport Ensemble Use menu option File-\u003eImport-\u003eSummary Cases-\u003eImport Summary Case group and then convert the group to an ensemble Import a number of summary cases, move them into a group and then convert the group to an ensemble During import of a summary case, ResInsight tries to find an associated parameters.txt file or runspecification.xml file containing ensemble parameters. If found, the ensemble parameters are stored together with the summary case. When the user adds a summary case to an ensemble, then ResInsight will perform ensemble parameters validation. A warning dialog is displayed in the following cases:",
    "tags": [],
    "title": "Ensemble Plotting",
    "uri": "/plot-window/ensembleplotting/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight is able to import a wide span of Eclipse files, seismic data files, and ROFF grid models.\nFor import of Eclipse data pertinent to summary vectors and well log data, see Plot Window.\nResInsight can be built with support for geomechanical models from ABAQUS and is also able to import transient reservoir souring data from the SourSimRL simulation software.\nIn addition, ResInsight supports import of property tables in ABQUS input file format, observed time history data, and pasting time history data into a summary plot as described in the subsequent subchapters.",
    "description": "ResInsight is able to import a wide span of Eclipse files, seismic data files, and ROFF grid models.\nFor import of Eclipse data pertinent to summary vectors and well log data, see Plot Window.\nResInsight can be built with support for geomechanical models from ABAQUS and is also able to import transient reservoir souring data from the SourSimRL simulation software.",
    "tags": [],
    "title": "Import",
    "uri": "/import/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Scripting",
    "content": "ResInsight provides a flexible interface to Octave including:\nOctave functions that communicates with a running ResInsight session Features to simplify management and editing of Octave scripts from ResInsight Commands to execute scripts using Octave. The Octave functions are documented in Octave Interface Reference.\nInfo\rNote: The Octave interface does not support Flow diagnostics and Injection flooding results in addition to Geomechanical cases.\nOctave Script Management Octave scripts are available in the Scripts folder in the Project Tree.\nThis folder contains an entry for each of the directories you have added as a Script Folder. Each of the folder lists available *.m files and sub directories.\nAdding Script Folders You can add directories by right-clicking the Scripts item to access the right-click menu.\nMultiple standard script folder locations can also be defined in the field Shared Script Folder(s) in the Preferences Dialog (Edit -\u003e Preferences).\nEditing Octave Scripts To enable script editing from ResInsight you need to set up the path to a text editor in the Script Editor field in the Preferences Dialog (Edit -\u003e Preferences)\nWhen done, scripts can be edited using the right-click menu command Edit on the script item in the tree.\nIf you add a script file directly by creating a new file, the new script can be made visible in the user interface by activating Refresh in the right-click menu of a script folder.\nExecuting Octave Scripts ResInsight can be instructed to execute an Octave script once as a one shot operation, or several times, one time for each selected case. The Octave Interface Reference highlights in more depth how to design your Octave scripts to utilize these features.\nExecuting a Script Once A script can be started by navigating to the script in the Project Tree, and selecting Execute from the right-click menu. The currently active case (The one with the active 3D View) will then be set as ResInsight’s Current Case, and the script is executed once.\nExecuting a Script for Each Selected Case One script can be executed on many cases by first selecting a set of cases, and then activating Execute script from the right-click menu on the case selection. The script is then executed once per selected case setting the ResInsight’s Current Case each time.\nProcess Monitor When an Octave script is executed, the Process Monitor pops up and displays the output from Octave during the script execution as displayed below:\nIn addition to the output from the script, it prints a start and stop time stamp. The Clear-button deletes all the text in the monitor, and the Stop-button tries to kill the running Octave process.\nOctave Script Examples Here are some example-scripts that illustrates the use of the octave interface.\nInfo\rDisclaimer: The scripts are provided as illustration only. They are probably not the best way of using the octave script language, and could potentially be incorrect.\nExample 1 # Calculate change of oil saturation from time step to time step SOIL = riGetActiveCellProperty(\"SOIL\"); SOILDIFF = SOIL; i = 0; for timestep = SOIL if (i \u003e 0) SOILDIFF(:,i) = timestep - SOIL(:,i); endif i++; endfor SOILDIFF(:,i) = 0; riSetActiveCellProperty(SOILDIFF, \"SOILDIFF\");\rExample 2 # Set all values to \"Undefined\" exept k-layers from 17 to 20 CInfo = riGetActiveCellInfo(); SOIL = riGetActiveCellProperty(\"SOIL\"); Mask = (CInfo(:,4) \u003c 17) | (CInfo(:,4) \u003e 20) LGRSOIL = SOIL; i = 0; for i = (1:columns(LGRSOIL)) LGRSOIL(Mask,i) = nan; endfor riSetActiveCellProperty(LGRSOIL, \"KSlice\");\rExample 3 # Keep the values in the first LGR only CInfo = riGetActiveCellInfo(); SOIL = riGetActiveCellProperty(\"SOIL\"); Mask = (CInfo(:,1) != 1); LGRSOIL = SOIL; i = 0; for i = (1:columns(LGRSOIL)) LGRSOIL(Mask,i) = nan; endfor riSetActiveCellProperty(LGRSOIL, \"LGRSOIL\");\rExample 4 ( Might be slow on big models) # Calculate the average SOIL value across K layers CInfo = riGetActiveCellInfo(); SOIL = riGetActiveCellProperty(\"SOIL\"); SOIL_KAverage = SOIL; SOIL_KAverage(:) = nan; mini = min(CInfo(:,2)) maxi = max(CInfo(:,2)) minj = min(CInfo(:,3)) maxj = max(CInfo(:,3)) for i = mini:maxi for j = minj:maxj Mask = (CInfo(:,1) == 0) \u0026 (CInfo(:,2) == i) \u0026 (CInfo(:,3) == j) ; for ts = (1:columns(SOIL)) SOIL_KAverage(Mask, ts) = mean(SOIL(Mask, ts)); endfor endfor endfor riSetActiveCellProperty(SOIL_KAverage, \"SOIL_KAverage\");",
    "description": "ResInsight provides a flexible interface to Octave including:\nOctave functions that communicates with a running ResInsight session Features to simplify management and editing of Octave scripts from ResInsight Commands to execute scripts using Octave. The Octave functions are documented in Octave Interface Reference.\nInfo\rNote: The Octave interface does not support Flow diagnostics and Injection flooding results in addition to Geomechanical cases.\nOctave Script Management Octave scripts are available in the Scripts folder in the Project Tree.",
    "tags": [],
    "title": "Octave Interface",
    "uri": "/scripting/octaveinterface/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Export",
    "content": "In order to export well paths to dev files, select the menu item File -\u003e Export -\u003e Export Visible Well Paths or select one or more well paths and then select one of the items in the sub menu Export Well Paths.\nA dialog appears after selecting an export well path command.\nExport Folder - Folder for the exported well path file(s). The folder will be created when performing the export and the names of the exported file(s) will be on the format \u003cwell name\u003e.dev MD Step Size - Spacing (measured depth) between samples along the well path in the exported file",
    "description": "In order to export well paths to dev files, select the menu item File -\u003e Export -\u003e Export Visible Well Paths or select one or more well paths and then select one of the items in the sub menu Export Well Paths.\nA dialog appears after selecting an export well path command.\nExport Folder - Folder for the exported well path file(s). The folder will be created when performing the export and the names of the exported file(s) will be on the format \u003cwell name\u003e.dev MD Step Size - Spacing (measured depth) between samples along the well path in the exported file",
    "tags": [],
    "title": "Well Paths",
    "uri": "/export/exportwellpaths/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases",
    "content": "The Windows Subsystem for Linux (WSL) lets developers install a Linux distribution and use Linux applications, utilities, and Bash command-line tools directly on Windows, unmodified, without the overhead of a traditional virtual machine or dualboot setup.\nhttps://learn.microsoft.com/en-us/windows/wsl/install\nResInsight has been successfully installed and used on Ubuntu in WSL. The installation is similar to the Linux installation. The desktop application can be launced from the WSL command line, and the user interface will show up on the Windows desktop.",
    "description": "The Windows Subsystem for Linux (WSL) lets developers install a Linux distribution and use Linux applications, utilities, and Bash command-line tools directly on Windows, unmodified, without the overhead of a traditional virtual machine or dualboot setup.\nhttps://learn.microsoft.com/en-us/windows/wsl/install\nResInsight has been successfully installed and used on Ubuntu in WSL. The installation is similar to the Linux installation. The desktop application can be launced from the WSL command line, and the user interface will show up on the Windows desktop.",
    "tags": [],
    "title": "Windows Subsystem for Linux",
    "uri": "/releases/windows-subsystem-for-linux/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "An Objective Function is used to color the curves of an ensemble plot in ResInsight to highlight characteristics by a function definition based on individual summary vectors. As shown in the example above, the legend relates colours to values as calculated by a particular objective function and shows the use and formula of the objective function in the plot.\nUsing Objective Functions Curve coloring by Objective Function is activated as shown below.\nObjective Function\nResInsight uses the following objective function definition:\n$ F = \\frac {1} {N} \\Sigma (\\frac{ \\mid (t_i - tH_i) \\mid }{ \\epsilon * tH_i } )^n $\n$ t_i $ : Simulated value for time step $i$\n$ tH_i $ : History (observed) value for time step $i$\n$ N $ : Number of Observations\n$ \\epsilon $ : Error estimate [0..100 %]\n$ n $ : Either 1 - Basic error term, or 2 - Squared error term\nThe time step selection is either specified using Time Range (F1) to define all time steps in a time range or Selected Time Steps (F2)\nCreating Custom Objective Functions It is also possible to create a Custom Objective Function to customize the coloring of ensemble plots:\nCustom objective functions can express a weighted sum of the default objective functions (applied to any vector)\nCustom objective functions allow for an arbitrary combination of weigthed default objective functions\nThus, $ M_{custom} = \\Sigma_i^N weight_i * f_i(vectors) $ where $ f_i \\in \\lbrace F1, F2 \\rbrace $\nA Custom Objective Function is created by invoking the context menu on the Custom Objective Functions item in Plot Project Tree.\nAdding a new weighted function expression to an existing objective function is performed by invoking the context menu as shown below.\nDisplay settings Changing objective function can be performed by the property editor of actual ensemble. The property editor also allows toggling the display of formula by the Show Formula in Plot check-box and setting of time step range.\nAs seen below, selected range is displayed by color frame and labels in plot background. The range determines the time range for which the objective function is utilized for coloring the curves.",
    "description": "An Objective Function is used to color the curves of an ensemble plot in ResInsight to highlight characteristics by a function definition based on individual summary vectors. As shown in the example above, the legend relates colours to values as calculated by a particular objective function and shows the use and formula of the objective function in the plot.",
    "tags": [],
    "title": "Objective Functions",
    "uri": "/plot-window/objectivefunctions/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Analysis Plots are bar charts used to compare summary data at specific timesteps across Ensembles and Summary Cases.\nCreating an Analysis Plot The most convenient way to create an Analysis Plot at a given time step is often to right-click an Ensemble Plot and invoke New Analysis Plot as shown below.\nAlternatively, Analysis Plots can be created by right-clicking the Analysis Plots item in Plot Project Tree.\nHaving created an Analysis Plot, subitems Value Axis and Plot Data Filters emerges in Plot Project Tree. Value Axis allows for settings of title text, layout, and axis formatting. Plot Data Filters enables filtering of data.\nSpecifying Setup and Settings The Analysis Plots property editor allows the user to specify a number of settings and optionally select a reference case in order to analyse vector data relatively to that particular case. The property editor groups further setup and settings as listed below.\nSelected Vectors The summary data to analyze is selected by a set of summary vectors. Press the available button to activate the Summary Adress Selection dialog to select a set of vectors from different ensembles, summary types and summaries.\nTime Steps As shown below, a single or multiple time steps is possible to select. The timestep filter enables the user to skip time steps by years, quarters, months, weeks, or days.\nSorting, Grouping and Coloring As shown below, the bar chart of Analysis Plots can be ordered by a major, medium, and minor grouping precedence according to the following fields:\nEnsemble Case Summary Item Quantity Timestep In addition, the bar chart may be colored according to these fields, sorted according to signed or absolute value and restricted to top bars.\nLegend and Bar Labels Check the appropriate buttons to display the color legend for the bar chart, bar labels of interest, and font sizes.",
    "description": "Analysis Plots are bar charts used to compare summary data at specific timesteps across Ensembles and Summary Cases.\nCreating an Analysis Plot The most convenient way to create an Analysis Plot at a given time step is often to right-click an Ensemble Plot and invoke New Analysis Plot as shown below.",
    "tags": [],
    "title": "Analysis Plots",
    "uri": "/plot-window/analysisplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Grid Statistics Plots displays the histogram and statistics values for grid cells.\nCreating an Grid Statistics Plot The most convenient way to create an Grid Statistics Plot is often to right-click in the 3D view and invoke Create Grid Statistics Plot as shown below.\nAlternatively, Grid Statistics Plots can be created by right-clicking the Grid Statistics Plots item in Plot Project Tree.\nFilter by 3d View Visibility If you want to display the statistics for a subset of cells, you can select a view to use only the cells visible in that view. This option is activated by selecting a view from the drop down list at Filter by 3d View Visibility",
    "description": "Grid Statistics Plots displays the histogram and statistics values for grid cells.\nCreating an Grid Statistics Plot The most convenient way to create an Grid Statistics Plot is often to right-click in the 3D view and invoke Create Grid Statistics Plot as shown below.",
    "tags": [],
    "title": "Grid Statistics Plots",
    "uri": "/plot-window/gridstatisticsplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Correlation Plots are plots used to visualize correlations between ensemble parameters and summary result vectors. Several visualizations can be created, including tornado plots, correlation matrices, and cross plots.\nCreating a Correlation Plot The most convenient way to create a Correlation Plot at a given time step is often to right-click an Ensemble Plot and invoke the submenu shown below.\nAlternatively, Correlation Plots can be created by right-clicking the Correlation Plots item in Plot Project Tree.\nSpecifying Setup and Settings The Correlation Plots property editor allows the user to specify an extensive number of settings dependent on the actual type of correlation plot. The complete set of settings are listed below according to the individual sections of the property editor.\nCorrelation Factor Settings This section of the property editor allows for setting correlation factor to either Pearson Correlation Coefficient or Spearman’s Rank Correlation Coefficient as basis for Correlation Plots and to select ensemble parameter(s) of choice. Being irrelevant, please note that the section will not display for Correlation Cross Plots and that the field Sort Matrix by Values will not display for tornado plots.\nSummary Vector Settings This section of the property editor allows for setting summary vector(s) and time step. To ease the selection of time step, the Time Step Filter may be used to skip time steps by years, quarters, months, weeks, or days.\nPlot Settings This section of the property editor allows for setting plot title, font sizes, and legend if relevant. Please note that the Colors setting for specifying legend is irrelevant to tornado plots and cross plots and will not display for these types of Correlation Plots.\nCross Plot Parameter Setting This section of the property editor will only display for cross plots to allow specification of ensemble parameter to cross plot with summary vector(s).",
    "description": "Correlation Plots are plots used to visualize correlations between ensemble parameters and summary result vectors. Several visualizations can be created, including tornado plots, correlation matrices, and cross plots.\nCreating a Correlation Plot The most convenient way to create a Correlation Plot at a given time step is often to right-click an Ensemble Plot and invoke the submenu shown below.",
    "tags": [],
    "title": "Correlation Plots",
    "uri": "/plot-window/correlationplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "ResInsight supports creating and exporting LGRs (Local Grid Refinement) in main grid cells intersected by completions.\nCreate Temporary LGRs To create temporary LGR(s), first select one or more well paths in the project tree, right click and select ‘Create Temporary LGR’. This command brings up the following dialog.\nThe dialog contains several input fields\nSource Case – The source case/grid Time Step – The time step to use Fractures, Fishbones, Perforations – Check boxes to control which completion types to create LGRs for Split Type – Three options controlling how the LGRs will be created LGR Per Cell – One LGR is created for each main grid cell intersected by completions of the selected type LGR Per Completion – One LGR is created for each completion of the selected types. Each LGR span all main grid cells that are located within an IJK bounding box containing all intersected cells. LGR Per Well – One LGR is created for each of the selected well paths. The LGR spans all main grid cells that are located within an IJK bounding box containing all intersected cells for all selected completions on that well path. Cell Count I,J,K – The size of the LGR, in each main grid cell, in the I, J and K direction After pressing the OK button, LGR(s) are created and will be visible in the grid view. Temporary LGRs are stored in memory, and are thus not saved to file. After restarting ResInsight those LGRs have to be recreated.\nIndividual visibility of generated LGRs can be controlled from the Grids section in a view.\nDelete temporary LGRs It is possible to explicitly delete all temporary LGRs. Right click on the View -\u003e Grids -\u003e Temporary LGRs project tree node and select Delete Temporary LGRs. This command deletes all temporary LGRs.",
    "description": "ResInsight supports creating and exporting LGRs (Local Grid Refinement) in main grid cells intersected by completions.\nCreate Temporary LGRs To create temporary LGR(s), first select one or more well paths in the project tree, right click and select ‘Create Temporary LGR’. This command brings up the following dialog.",
    "tags": [],
    "title": "Completions LGR",
    "uri": "/wells-and-completions/completionslgr/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight features the following capabilities for export of data to reporting or further analysis:\nconvenient export of snapshots of 3D views and plots, either by direct export or automated modification of Eclipse 3D Views export of Eclipse properties, either direct or subsequent to post-processing by ResInsight, for input to further simulations visible cells in ResInsight can be exported as a FLUXNUM or MULTNUM keyword that can be used in an Eclipse input data deck completions defined in ResInsight can be exported to Eclipse for use in new simulation runs file export of well paths export of sub-sections of an Eclipse Grid with Parameters and Faults to Eclipse ASCII files to perform additional simulations export of a contour map to text file The following subchapters details the functionality and capabilites.",
    "description": "ResInsight features the following capabilities for export of data to reporting or further analysis:\nconvenient export of snapshots of 3D views and plots, either by direct export or automated modification of Eclipse 3D Views export of Eclipse properties, either direct or subsequent to post-processing by ResInsight, for input to further simulations visible cells in ResInsight can be exported as a FLUXNUM or MULTNUM keyword that can be used in an Eclipse input data deck completions defined in ResInsight can be exported to Eclipse for use in new simulation runs file export of well paths export of sub-sections of an Eclipse Grid with Parameters and Faults to Eclipse ASCII files to perform additional simulations export of a contour map to text file The following subchapters details the functionality and capabilites.",
    "tags": [],
    "title": "Export",
    "uri": "/export/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Scripting",
    "content": "Introduction To identify a ResInsight case uniquely in the Octave script, an integer Id (CaseId) is used. This Id can be retrieved in several ways, but there are two main modes of operation regarding this for a particular octave script: Either the script is designed to work on a single case (the “Current Case”), or the script is designed to access the selection and traverse the cases by itself.\nInfo\rNote: The Octave interface does not support Geomechanical cases and flow diagnostic results.\nSingle Case Scripts Single case scripts do not need to address cases explicitly, but works on what ResInsight considers being the “Current Case”. When the user selects several cases and executes a script on them, ResInsight loops over all cases in the selection, sets the current case and executes the script. All references to the “Current Case” from the script will then refer to the case currently being processed by ResInsight. The Current Case can be accessed directly using riGetCurrentCase(), but the more direct way is to omit the CaseId parameter in the functions, the Current Case is then automatically used.\nMulti Case Scripts Scripts can access the selection state in ResInsight, and also retrieve lists of Case Groups and cases including some meta information. This can be used if the scripts need to get values from some cases, and store the results in others, etc.\nCase Types The case type (Labeled “CaseType” in the following specification) of a case is returned as a text string when retrieving lists of cases, and is one of the following:\nCase Type Description ResultCase A binary Eclipse case InputCase A case based on ASCII Eclipse input data StatisticsCase A statistics case based on many source cases in Grid Case Group SourceCase A binary Eclipse case in a Grid Case Group Unresolved Issues The issue around having multiple instances of ResInsight is still not addressed, but might affect the function signatures by adding a port number parameter to all of them. We will try to find ways to avoid this, but are still not certain that we will succeed.\nSpecification Project Information The case information is presented in an octave Structure called CaseInfo, and contains the following fields:\nCaseInfo = {\rCaseId = int # A project-unique integer used to address this\r# particular case CaseName = string # The name that has been assigned to the case\r# in ResInsight.\rCaseType = string # See the description above\rCaseGroupId = int # A project-unique integer identifying the\r# CaseGroup this case is a member of.\r# -1 if not in a CaseGroup. Valid only for # Statistics-, and SourceCases\r}\rCaseInfo riGetCurrentCase() This function returns a CaseInfo Structure for the Case considered being the “Current Case” by ResInsight. When ResInsight loops over a selection of cases and executes an Octave script for each of them, this function returns the CaseInfo for that particular Case.\nVector[CaseInfo] riGetSelectedCases() This function returns a CaseInfo Structure for each of the cases selected in ResInsight at the time when the script launched.\nVector[CaseGroupInfo] riGetCaseGroups() This function returns a CaseGroupInfo Structure for each of the case groups in the current ResInsight project.\nCaseGroupInfo = {\rCaseGroupId = int # A project-unique integer used to address\r# this particular CaseGroup\rCaseGroupName = string # The name assigned to the CaseGroup # in ResInsight\r}\rVector[CaseInfo] riGetCases([CaseGroupId]) This function returns a CaseInfo Structure for all the cases in the current ResInsight project, including the Statistics cases and Source cases in a Grid Case Group. If a CaseGroupId is provided, only the cases in that Case Group will be returned.\nRetrieving Grid Metadata Matrix[numActiveCells][9] riGetActiveCellInfo([CaseId], [PorosityModel = “Matrix”|“Fracture”] ) This function returns a two dimensional matrix containing grid and IJK information about each of the active cells in the requested case. The columns contain the following information:\n[GridIdx, I, J, K, ParentGridIdx, PI, PJ, PK, CoarseBoxIdx]\rGridIdx # The index of the grid the cell resides in.\r# Main grid has index 0\rI, J, K # 1-based index address of the cell in the grid.\rParentGridIdx # The index to the grid that this cell's grid # is residing in.\rPI, PJ, PK # 1-based address of the parent grid cell that\r# this cell is a part of.\rCoarseBoxIdx # 1-based coarsening box index, -1 if none.\r# Coarsening box info can be retrieved using\r# **riGetCoarseningInfo()**\rIf the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[numCoarseGroups][6] riGetCoarseningInfo([CaseId]) This function returns all coarse box definitions used in the grid. The columns contain the following information: [I1, I2, J1, J2, K1, K2]: 1-based index addresses of the min and max corners of the coarsening box. If the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[numGrids][3] riGetGridDimensions([CaseId]) This function returns a two dimensional matrix: One row for each grid, starting with the main grid.\nNOTE: This means that the “normal” GridIndices where 0 means Main Grid does not work directly with this matrix. You have to add 1.\nThe columns contain the following information: [NI, NJ, NK]: I, J, K dimensions of the grid. If the CaseId is not defined, ResInsight’s Current Case is used.\nVector[TimeStepDate] riGetTimeStepDates([CaseId]) This function returns the date information for each of the time steps in the case as a Vector of Structures. The Structure is defined as:\nTimeStepDate = {\rYear = int # The year eg. 2013\rMonth = int # The month. Eg. 12\rDay = int # The day in the month. Eg. 24\rHour = int # The hour of the day. Eg. 17\rMinute = int # The minute in the hour. Eg. 55\rSecond = int # The second within the minute. Eg. 30\r}\rIf the CaseId is not defined, ResInsight’s Current Case is used.\nVector[DecimalDay] riGetTimeStepDays([CaseId]) This function returns the time from the simulation start as decimal days for all the time steps as a Vector of doubles. If the CaseId is not defined, ResInsight’s Current Case is used.\nRetrieving Property Data Vector[PropertyInfo] riGetPropertyNames([CaseId] ], [PorosityModel = “Matrix”|“Fracture”]) This function returns the name and type of all the properties in the case as a Vector of Structures. The Structure is defined as:\nPropertyInfo {\rPropName = string # Name of the property as received from\r# the analysis tool\rPropType = string # The type of the property: \"StaticNative\",\r# \"DynamicNative\", \"Input\", \"Generated\"\r}\rIf the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[numActiveCells][numTimestepsRequested] riGetActiveCellProperty([CaseId], PropertyName, [RequestedTimeSteps], [PorosityModel = “Matrix”|“Fracture”]) This function returns a two dimensional matrix: [ActiveCells][Num TimestepsRequested] containing the requested property data from the case with CaseId. If the case contains coarse-cells, the results are expanded onto the active cells. If the CaseId is not defined, ResInsight’s Current Case is used. The RequestedTimeSteps must contain a list of indices to the requested time steps. If not defined, all the time steps are returned.\nMatrix[numI][numJ][numK][numTimestepsRequested] riGetGridProperty([CaseId], GridIndex , PropertyName, [RequestedTimeSteps], [PorosityModel = “Matrix”|“Fracture”]) This function returns a matrix of the requested property data for all the grid cells in the requested grid for each requested time step. Grids are indexed from 0 (main grid) to max number of LGR’s If the CaseId is not defined, ResInsight’s Current Case is used. The RequestedTimeSteps must contain a list of indices to the requested time steps. If not defined, all the time steps are returned. Writing Back to ResInsight\nriSetActiveCellProperty( Matrix[numActiveCells][numTimeSteps], [CaseId], PropertyName, [TimeStepIndices], [PorosityModel = “Matrix”|“Fracture”]) Interprets the supplied matrix as a property set defined for the active cells in the case, and puts the data into ResInsight as a “Generated” property with the name “PropertyName”. The “TimeStepIndices” argument is used to “label” all the time steps present in the supplied data matrix, and must thus be complete. The time step data will then be put into ResInsight at the time steps requested.\nIf the CaseId is not defined, ResInsight’s Current Case is used.\nriSetGridProperty( Matrix[numI][numJ][numK][numTimeSteps], [CaseId], GridIndex, PropertyName, [TimeStepIndices], [PorosityModel = “Matrix”|“Fracture”]) Interprets the supplied matrix as a property set defined for all cells in one of the grids in a case, and puts the data into ResInsight as a “Generated” property with the name “PropertyName”. The “TimeStepIndices” argument is used to “label” all the time steps present in the supplied data matrix, and must thus be complete. The time step data will then be put into ResInsight at the time steps requested. If the CaseId is not defined, ResInsight’s Current Case is used.\nCell Geometry Functions Matrix[numI][numJ][numK][3] riGetCellCenters([CaseId], GridIndex) This function returns the UTM coordinates (X, Y, Z) of the center point of all the cells in the grid. If the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[ActiveCells][3] riGetActiveCellCenters([CaseId], [PorosityModel = “Matrix”|“Fracture”]) This function returns the UTM coordinates (X, Y, Z) of the center point of each of the active cells. If the CaseId is not defined, ResInsight’s Current Case is used. Cell Corner Index layout The corner indices follow the ECLIPSE standard:\n6-------------7 |k /| /| | /j / | / | |/ / | / | *---i 4-------------5 |\r| | | |\r| 2---------|---3\r| / | /\r| / | /\r|/ |/\r0-------------1\rMatrix[numI][numJ][numK][8][3] riGetCellCorners([CaseId], GridIndex) This function returns the UTM coordinates(X, Y, Z) of the 8 corners of all the cells in the grid. If the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[ActiveCells][8][3] riGetActiveCellCorners([CaseId], [PorosityModel = “Matrix”|“Fracture”]) This function returns the UTM coordinates (X, Y, Z) of the 8 corners of each of the active cells. If the CaseId is not defined, ResInsight’s Current Case is used.\nWell Data Functions Vector[WellNames] riGetWellNames([CaseId]) This function returns the names of all the wells in the case as a Vector of strings. If the CaseId is not defined, ResInsight’s Current Case is used. Vector[WellCellInfo] riGetWellCells([CaseId], WellName, TimeStep) This function returns the cells defined in the specified well for the time step requested as a vector of Structures. The Structure is defined as:\nWellCellInfo {\rI, J, K = int # Index to the cell in the grid\rGridIndex = int # the index of the grid. Main grid has index 0.\rCellStatus = int # is either 0 or 1, meaning the cell is closed\r# or open respectively\rBranchId = int # Branch id of the branch intersecting the cell\rSegmentId = int # Branch segment id of the branch intersecting the cell\r}\rIf the CaseId is not defined, ResInsight’s Current Case is used.\nVector[WellStatus] riGetWellStatus ([CaseId], WellName, [RequestedTimeSteps]) This function returns the status information for a specified well for each requested time step as a vector of Structures. The Structure is defined as:\nWellStatus {\rWellType = string # \"Producer\", \"OilInjector\",\r# \"WaterInjector\", \"GasInjector\", \"NotDefined\"\rWellStatus = int # is either 0 or 1, meaning the well is shut\r# or open respectively\r}\rIf the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[numSelectedCells][5] riGetSelectedCells([CaseId]) This function returns a two dimensional matrix containing the cell info for each selected cell in the case with CaseId. The columns contain the following information:\n[CaseId, GridIdx, I, J, K]\rCaseId # The ID of the case the cell resides in.\rGridIdx # The index of the grid the cell resides in.\r# Main grid has index 0\rI, J, K # 1-based index of the cell in the grid.\rIf the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[numSelectedCells][numTimestepsRequested] riGetGridPropertyForSelectedCells([CaseId], PropertyName, [RequestedTimeSteps], [PorosityModel = “Matrix”|“Fracture”] ) This function returns a two dimensional matrix: [numSelectedCells][numTimestepsRequested] containing the requested property data from the case with CaseId.\nIf the CaseId is not defined, ResInsight’s Current Case is used. The RequestedTimeSteps must contain a list of 1-based indices to the requested time steps. If not defined, all the time steps are returned.\nVector[PropertyInfo] riGetNNCPropertyNames([CaseId]) This function returns the name and type of all NNC properties in the case as a vector of structures.\nThe structure is defined as:\nPropertyInfo {\rPropName = string # Name of the property as received from\r# the analysis tool\rPropType = string # The type of the property: \"StaticNative\",\r# \"DynamicNative\", \"Generated\"\r}\rIf the CaseId is not defined, ResInsight’s Current Case is used.\nMatrix[numNNCConnections][2] riGetNNCConnections([CaseId]) This function returns a two dimensional matrix containing grid and IJK information about each NNC connection. Each row contains a from and to cell for the connection. The cells are specified in a structure defined as:\nCellInfo = {\rGridIndex = int # Index of the grid the cell resides in.\r# Main grid has index 0.\rI, J, K = int # 1-based index address of the cell in the grid.\r}\rMatrix[numConnections][numTimestepsRequested] riGetDynamicNNCValues([CaseId], PropertyName, [RequestedTimeSteps]) This function returns a two dimensional matrix: [Num Connections][Num Time Steps Requested] containing the value of the requested property from the case with CaseId. The order of connections is the same as the order from riGetNNCConnections.\nIf the CaseId is not defined, ResInsight’s Current Case is used. The RequestedTimeSteps must contain a list of indices to the requested time steps. If not defined, all the time steps are returned.\nVector[numConnections] riGetStaticNNCValues([CaseId], PropertyName) This function returns a vector of values for the requested static property for each NNC connection. The order of connections is the same as the order from riGetNNCConnections.\nIf the CaseId is not defined, ResInsight’s Current Case is used.\nriSetNNCProperty(Matrix[numNNCConnections][numTimeSteps], [CaseId], PropertyName, [TimeStepIndices]) Interprets the supplied matrix as a property set defined for the NNC connections in the case, and puts the data into ResInsight as a “Generated” property with the name “PropertyName”. The “TimeStepIndices” argument is used to “label” all the steps present in the supplied data matrix and must thus be complete. The time step data will then be put into ResInsight at the time steps requested.\nIf the CaseId is not defined, ResInsight’s Current Case is used.",
    "description": "Introduction To identify a ResInsight case uniquely in the Octave script, an integer Id (CaseId) is used. This Id can be retrieved in several ways, but there are two main modes of operation regarding this for a particular octave script: Either the script is designed to work on a single case (the “Current Case”), or the script is designed to access the selection and traverse the cases by itself.\nInfo\rNote: The Octave interface does not support Geomechanical cases and flow diagnostic results.",
    "tags": [],
    "title": "Octave Interface Reference",
    "uri": "/scripting/octaveinterfacereference/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "The results mapped on the 3D model can be inspected in detail by left clicking cells in the 3D view. The selected cells will be highlighted, text information displayed in the Result Info docking window, and the time-history values plotted in the Result Plot, if available.\nThe values along the different K-layers is available in the Depth Plot\nNote\rVisibility of the docking widows can be controlled from the Windows menu.\nResult Info Clicking cells will display slightly different information text based on the case type as described in the following tables.\nEclipse Model Geometry Description Reservoir cell Displays grid cell result value, cell face, grid index and IJK coordinates for the cell. The intersection point coordinates is also displayed. Additional result details are listed in the section – Grid cell result details – Fault face Displays the same info as for a Reservoir cell. In addition the section – Fault result details – containing Fault Name and Fault Face information. Fault face with NNC Displays the same info as Fault face, except the Non Neighbor Connections (NNC) result value is displayed instead of grid cell value. Information added in section – NNC details – is geometry information of the two cells connected by the NNC. Formation names Displays name of formation the cell is part of Geomechanical Model Name Description Closest result Closest node ID and result value Element Element ID and IJK coordinate for the element Intersection point Location of left-click intersection of the geometry Element result details Lists all integration point IDs and results with associated node IDs and node coordinates Formation names Displays name of formation the cell is part of Result Plot The result values of the selected cells for all time steps are displayed in the docking window Result Plot as one curve for each cell.\nAdditional curves can be added to the plot if CTRL-key is pressed during picking. The different cells are highlighted in different colors, and the corresponding curve is colored using the same color.\nTo clear the cell-selection, left-click outside the visible geometry.\n[Result Info]\nAdding the Curves to a Summary Plot The time history curves of the selected cells can be added to a Summary Plot by right-clicking in the Result Plot or in the 3D View.\nA dialog will appear to prompt you to select an existion plot, or to create a new one.\nPVT Plot (Eclipse Cases Only) Show the PVT Plot window by selecting Windows -\u003e PVT Plot. When it is turned on, it will only be visible when the active view is a view of an Eclipse case.\nThe PVT plot window shows two plots, based on PVTNUM in the selected cell. One plots Phase Formation Volume Factor and the other plots Phase Viscosity, both against pressure. The Phase can be either oil or gas, and can be selected in the top left corner of the window.\nPressure for the selected cell, at the current time step, is marked on the plot as a vertical line, and a large circle marks the scalar value of the cell (formation volume factor/viscosity). RV for the selected cell is also shown.\nRelative Permeability Plot (Eclipse Cases Only) Show the Relative Permeability Plot window by selecting Windows -\u003e Relative Permeability Plot. When it is turned on, it will only be visible when the active view is a view of an Eclipse case.\nThe Relative Permeability Plot window shows up to six curves, based on SATNUM in the selected cell. The curves can be turned on/off in the top left corner of the window, and they are described in the following table:\nName Description Axis KRW Relative permeability water KR (Left) KRG Relative permeability gas KR (Left) KROW Relative permeability oil water KR (Left) KROG Relative permeability oil gas KR (Left) PCOW Capilar pressure oil water PC (Right) PCOG Capilar pressure oil gas PC (Right) Saturation of water and gas in the selected cell, at the current time step, are annotated in the plot by a blue and orange vertical line, respectively. The intersections between the lines and the relevant curves are marked with large circles.\nOption Description Log Scale Kr Axis Enable logarithmic Kr-axis Show Unscaled Display curves unscaled Fixed [0, 1] X-axis Use a fixed range on X-axis Fixed [0, 1] Kr-axis Use a fixed range on Kr-axis Mohr’s Circle Plot (Geo Mechanical Models Only) Show the Mohr’s Circle Plot window by selecting Windows -\u003e Mohr’s Circle Plot. When it is turned on, it will only be visible when the active view is a view of an Geo Mech case.\nThe Mohr’s circle plot shows three circles representing the 3D state of stress for a selected cell. In addition, it shows the envelope, calculated from the cohesion and friction angle given in the geo mechanical view’s property editor. Several sets of circles and envelopes can be added by selecting more than one cell in any view (as in image above).",
    "description": "The results mapped on the 3D model can be inspected in detail by left clicking cells in the 3D view. The selected cells will be highlighted, text information displayed in the Result Info docking window, and the time-history values plotted in the Result Plot, if available.\nThe values along the different K-layers is available in the Depth Plot",
    "tags": [],
    "title": "Result Inspection",
    "uri": "/3d-main-window/resultinspection/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Export",
    "content": "Sub-sections of the Eclipse Grid with Parameters and Faults can be exported to Eclipse ASCII files in order to create new Simulations on the sub-section.\nExporting an Eclipse Sector Model To launch the export dialog, right-click on either the 3D-view in question or the Cell Result.\nExporting Grid and Faults Grid Export The Export dialog will allow the user to export grid data as ascii (An Eclipse Input Grid) to a specific file name by checking the Export Grid Data option. If the option Export in Local Coordinates is checked, the UTM-portion of the coordinates will be stripped and the Grid will be exported in a local coordinate system with no reference to actual location.\nGrid Box Selection The Grid Box selection group will allow the user to choose whether to export an IJK bounding box surrounding:\nAll Visible Cells – Controlled by range and property filters in the current view. All Active Cells – All active cells in the Grid. The Full Grid – The complete grid including inactive cells. User Defined Selection – This will make the min and max IJK selection available to the user. Furthermore, by checking Make Invisible Cells Inactive any cells that are within the IJK bounding box, but are invisible, will be made inactive (ACTNUM = 0) in the exported grid.\nGrid Refinement The grid can be refined by a different integer in all three directions by changing the default value of Cell Count = 1 for I, J or K. The grid results will be not be interpolated but all new cells will inherit the value of their original cell.\nFaults Optionally export fault data to a separate fault file or append to the existing grid. Also, fault data can be ommitted by choosing “Do not Export” from the Export Fault Data drop down list.\nExporting Parameters The Static result values in the Grid may be exported as Eclipse Input Parameters. The default parameters are EQLNUM, FIPNUM, NTG, PERMX, PERMY, PERMZ, PORO, PVTNUM, SATNUM and SWATINIT. ACTNUM is exported by default in the Grid Export file.\nOther statuc result variables may be selected.\nBy default the Parameters will be exported to a separate file per parameter in the grid folder location. However it is possible to append them to the grid file, export them all into a single parameter file or omit them completely be selecting different options in the Export Parameters drop down list.",
    "description": "Sub-sections of the Eclipse Grid with Parameters and Faults can be exported to Eclipse ASCII files in order to create new Simulations on the sub-section.\nExporting an Eclipse Sector Model To launch the export dialog, right-click on either the 3D-view in question or the Cell Result.\nExporting Grid and Faults",
    "tags": [],
    "title": "Sector Model",
    "uri": "/export/sectormodel/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Filters are used to control the visibility of cells in the 3D view. Two types of filters exist:\nCell Filter – Extracts subset(s) of grid cells Property Filter – Extracts cells with a property value matching a value range Note\rThe visibility of cells connected to wells, and fences can be controlled from Simulation Wells.\n(Not applicable for Geomechanical cases)\nFilters Settings Filters can be turned on and off using their check-boxes in Project Tree and controlled by their corresponding Property Editor. The sequence of the filters can be rearranged by clicking the arrow icons of selected filter.\nCell Filters and Property filters can either be set to Include or Exclude the matching cells. The Include setting marks the cells as visible while the Exclude setting is used to remove cells from visualization regardless of other filters. The icon in front of each filter show a + or - sign to indicate Include or Exclude .\nCell Filters Cell Filters enables the user to define a set of visible regions in the 3D view. Each Include cell filter will add cells to the visualization and the resulting 3D view will show the union of all the Include cell filters.\nThe logical operation combining multiple Cell Filters is defined by “Combine Polygon and Range Filters Using Operation”\nA new cell filter can be added by invoking the right-click menu for the Cell Filters collection in Project Tree.\nThe available cell filters are:\nPolygon Filter: Defining a filter by marking target points of a polygon in 3D view to include or exclude matching cells. The polygon can be defined as part of the filter or referencing a polygon defined in the Polygons collection.\nUser Defined Filter: Defining a filter by specifying explicit cells to include or exclude by their IJK-index.\nRange Filter: Defining a filter to include or exclude cells by specifying IJK-ranges. For radial models, IJ represents angle and radius.\nSlice Filter: Defining a filter to include or exclude a slice of cells in either I-, J-, or K-direction.\nThe following exemplifies the use of a Polygon Filter and target points. Target points are defined and manipulated in 3D view as decribed in Polygons. Vertically, the filter can be set to use the XY target positions or IJK-index of targeted cells. The actual filtering can be specified to whole cells inside polygon, cell center inside polygon, or any cell corner inside polygon.\nNote\rA filter can be added directly from 3D View by right-clicking a cell using the displayed menu.\nBelow is a snapshot of the Property Editor for the Range Filter type of Cell Filter:\nFilter Type – The filter can either make the specified range visible ( Include ), or remove the range from the View ( Exclude ). Grid – This option selects which of the grids the range is addressing. Apply to Subgrids – This option tells ResInsight to use the visibility of the cells in the current grid to control the visibility of the cells in sub-LGR’s. If this option is turned off, Sub LGR-cells is not included in this particular Range Filter. The Start and Width labels in front of the sliders features a number in parenthesis denoting maximum available value. The Start labels show the index of the start of the active cells. The Width labels show the number of active cells from the start of the active cells.\nProperty Filters Property Filters applies to the results of the Cell Filters and limits the visible cells to the ones approved by the filter. For a cell to be visible it must be accepted by all property filters.\nA new property filter is created by activating the right-click menu on Property Filters or by right-clicking inside a 3D view. The new property filter is based on the currently viewed cell result by default.\nThe name of the property filter is automatically set to “propertyname (min .. max)” as you edit the property filter.\nNote\rThe right-click command Apply As Cell Result on a property filter, sets the Cell Color Result to the same values as the selected property filter.\nBelow is a snapshot of the Property Editor of the Property Filter.\nProperty Value Range The filter is based on a property value range (Min - Max). Cells in the range are either shown or hidden depending on the Filter Type (Include/Exclude). Exclude-filters removes the selected cells from the View even if some other filter includes them.\nRange Behavior for Flow Diagnostic Results Normally the available range in the sliders is the max and min of all the values in all the time steps. For Flow Diagnostics results, however, the available range is based on the current time step.\nWe still need to keep the range somewhat fixed while moving from time step to time step, so in order to do so ResInsight tries to keep the intentions of your range settings, as the available range changes. If either the max or min value is set to the limit, ResInsight will keep that setting at the limit even when the limit changes. If you set a specific value for the max or the min, that setting will keep its value, even if it happens to end up outside the available range at a time step.\nCategory Selection If the property is representing integer values, well tracer names or formation names , the property filter displays a list of available categories used to filter cells. The separate values can then be toggled on or off using the list in the Property Editor.\nIf it is more convenient to filter the values using a value range, toggle the Category Selection option off.",
    "description": "Filters are used to control the visibility of cells in the 3D view. Two types of filters exist:\nCell Filter – Extracts subset(s) of grid cells Property Filter – Extracts cells with a property value matching a value range Note\rThe visibility of cells connected to wells, and fences can be controlled from Simulation Wells.\n(Not applicable for Geomechanical cases)",
    "tags": [],
    "title": "Filters",
    "uri": "/3d-main-window/filters/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight provides powerful and flexible mechanisms for post-processing of results and automation by its scripting interfaces:\nPython interface Command line interface and Command files Octave interface Python interface ResInsight incorporates a powerful Python interface which allows you to interact with ResInsight and load data for further processing and automation.\nCommand Line Interface and Command files ResInsight supports several [command line parameters] (https://resinsight.org/scripting/commandlineinterface/) for automation via shell scripts. By gathering commands into a Command file, you may run a sequence of commands by supplying the command file as a command line parameter.\nOctave Interface By the interface to Octave you will find:\nOctave functions that communicates with a running ResInsight session Features to simplify management and editing of Octave scripts from ResInsight Commands to execute scripts using Octave.",
    "description": "ResInsight provides powerful and flexible mechanisms for post-processing of results and automation by its scripting interfaces:\nPython interface Command line interface and Command files Octave interface Python interface ResInsight incorporates a powerful Python interface which allows you to interact with ResInsight and load data for further processing and automation.\nCommand Line Interface and Command files ResInsight supports several [command line parameters] (https://resinsight.org/scripting/commandlineinterface/) for automation via shell scripts. By gathering commands into a Command file, you may run a sequence of commands by supplying the command file as a command line parameter.",
    "tags": [],
    "title": "Scripting",
    "uri": "/scripting/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "ResInsight can display well logs by extracting data from a simulation model along a well trajectory and from imported LAS-files. Extracted simulation data can be exported to LAS-files for further processing.\nWell Log Plots Well log plots can be created in several ways:\nRight-click a well path or a simulation well in the 3D-view and select New Well Log Extraction Curve.\nA new plot with a single Track and Curve is created matching active case and selected Well trajectory. Right-click Well Log Plots in the Plot Project Tree and select New Well Log Plot. A plot is created with one Track and Curve. Right-click Wells in the Project Tree and select Import-\u003eImport Well Logs from file. Each Well Log Plot can contain several Tracks, and each Track can contain several Curves.\nTracks and Curves can be organized using drag and drop of their entries in the Plot Project Tree. Tracks can be moved from one plot to another and you can alter the order of tracks within a Well Log Plot by drag and drop. In addition, Curves can be moved from one Track to another. Furthermore, copy and paste of a Well Log Plot, Track, and Curve is possible by right-clicking their entry.\nMeasured Depth (MD), True Vertical Depth (TVD), True Vertical Depth RKB (TVDRKB) and Pseudo Length (PL) All Tracks in the same Well Log Plot always display the same depth range, and share the True Vertical Depth (TVD) or Measured Depth (MD) setting. In the property panel of the plot, the exact depth range can be adjusted along with the depth type setting (TVD/MD).\nSimulation Wells however, is using a Pseudo Length instead of the real Measured Depth when the depth type is MD, as the MD information is not available in restart files. The Pseudo Length is a length along the coarsely interpolated visualization pipe, and serves only as a coarse estimation of an MD-like depth. Pseudo length is measured from the simulation-wells first connection-cell (well head connection) to the reservoir. This is very different from MD, which would start at RKB or at sea level.\nDepth Unit The depth unit can be set using the Depth unit option. Currently ResInsight supports Meter and Feet. The first curve added to a plot will set the plot unit based on the curve unit. Additional curves added to a plot will be converted to the plot unit if needed.\nDepth Zoom and Pan The visible depth range can be panned using the mouse wheel while the mouse pointer hovers over the plot. Pressing and holding CTRL while using the mouse wheel will allow you to zoom in or out depth-wise, towards the mouse position.\nDepth Marker Line If there are multiple tracks in the same plot, it can be useful to show a horizontal line across the plot based on the location of the mouse cursor. This can be activated from the Property Editor of a Well Log Plot.\nAccessing Plot Data Right-click a Well Log Plot and select Show Plot Data to show a window containing the plot data in ascii format. The content of this window is easy to copy and paste into Excel or other tools for further processing.\nIt is also possible to save the ascii data to a file by selecting a Well Log Plot in the Plot Project Tree and use the right-click command Export Plot Data to Text File.\nTracks Tracks can be created by right-clicking a Well Log Plot and select New Track.\nThe settings of each Track is controlled by the Property Editor. The figure below shows settings for the middle Track shown in the figure at top of this page which is annotated by Formations in Category colors. For GeoMechanical models, adding formations will also indicate the sea level.\nA track controls the x-axis range of the display which is set in the property panel. In addition to the range, logarithmic display is controlled by checking Logarithmic Scale, grid lines are controlled by the Show Grid Lines option.\nIt is also possible to visualize Well Attributes such as casing and liners. The following images show some of the possibilities in which the first track shows cross sections of a well and the second track shows a radial view labeled with formations.\nCurves Curves can be created by right-clicking a Track in the Plot Project Tree or by the commands mentioned above. The two types of curves are Well Log Extraction Curves and Well Log LAS Curves.\nWell Log Extraction Curves Extraction curves acts as an artificial well log curves. Instead of probing the real well, a simulation model is probed instead.\nThe property panel for an eclipse model is shown below:\nThe first group of options controls all the input needed to setup curve data extraction. The selection of result value is somewhat different between geomechanical cases and Eclipse cases. Time step can be specified for dynamic properties.\nCurve visual appearance and naming is controlled by the Appearance and Curve Name sections. The display name of a curve is normally generated automatically. Optionally, Auto Name can be switched off to use the options below to tailor curve name.\nNote\rPlacing keyboard focus in the Time Step drop-down box allows you to use arrow keys or mouse wheel to quickly step through the timesteps while watching the changes in the curve.\nCurve Extraction Calculation This section describes how the values are extracted from the grid when creating a Well Log Extraction Curve.\nExtraction curves are calculated by finding the intersections between a well trajectory and the cell-faces in a particular grid model. Usually there are two intersections at nearly the same spot; the one leaving the previous cell, and the one entering the next one. At each intersection point the measured depth along the trajectory is interpolated from the trajectory data. The result value is retrieved from the corresponding cell in different ways depending on the nature of the underlying result.\nFor Eclipse results the cell face value is used directly. This is normally the same as the corresponding cell value, but if a Directional combined results is used ( See Derived Results ), it will be that particular face’s value.\nAbaqus results are interpolated across the intersected cell-face from the result values associated with the nodes of that face. This is also the case for integration point results, as they are directly associated with their corresponding element node in ResInsight.\nChange Data Source for Plots and Curves It is possible to change some data source parameters in one go for either a full plot or several selected curves. To change the parameters for a whole plot use either the Data Source group in the Property Editor for the Well Log Plot or corresponding toolbar which is visible when a Well Log Plot or any of its children are selected. Changing parameters in the Data Source group for the plot will also change the source for Zonation/Formations and Well Path Attributes in addition to the data source for all Well Log Extraction Curves and Well Log LAS Curves. The source stepping icons allows to quickly step through cases, wells, and timesteps c.f. Summary Plot Source Stepping.\nTo change data source for curves, select the curves for which you wish to change source and select Change Data Source from the right-click menu. The following dialog will appear:\nIn both cases, the following parameters are available to change:\nCase – Applies the selected case to all the curves. Trajectory Type – Sets whether to use Simulation Wells or Well Paths as a data source for all curves. Well Name – Applies this well path to all the curves. Time Step – Applies this time step to all the curves. Common for the different ways of changing data source is that if a parameter is not shared among all the curves, the drop down list will show “Mixed Cases, “Mixed Trajectory Types”, “Mixed Well Paths” or “Mixed Time Steps” to indicate that the curves have different values for that parameter. It is still possible to select a common parameter for them which will then be applied across the curves.\nWell Log RFT Curves Well Log RFT Curves shows the values in a RFT file. See RFT Plot for details about RFT. A curve in a RFT plot will look identical to a RFT curve in a well log plot, if the depth type of the well log plot is TVD, and the interpolation type of the curve is Point to Point.\nWell Log LAS Curves LAS-curves shows the values in a particular channel in a LAS-file.\nThe property panel of a LAS-curve is shown below:\nNote\rYou can also create a LAS-curve by a simple drag-drop operation in the Project Tree: Drag one of the LAS channels and drop it onto a Track. A new curve will be created with the correct setting.\nLAS-file Support Importing LAS-files See Importing Well Log Files for details on LAS file import.\nExporting LAS-files A set of curves can be exported to LAS files by right-clicking the curves, well log track, or well log plots in Plot Project Tree and select Export To LAS Files …. An export dialog is displayed, allowing the user to configure how to export curve data.\nExport Folder – Location of the exported LAS files, one file per unique triplet of well path, case and time step. Resampling – If enabled, all curves are resampled at the given resample interval before export. TVDRKB – If enabled, TVDRKB for all curves based on the listed well paths are exported. If the difference field is blank, no TVDRKB values are exported.",
    "description": "ResInsight can display well logs by extracting data from a simulation model along a well trajectory and from imported LAS-files. Extracted simulation data can be exported to LAS-files for further processing.\nWell Log Plots Well log plots can be created in several ways:\nRight-click a well path or a simulation well in the 3D-view and select New Well Log Extraction Curve.\nA new plot with a single Track and Curve is created matching active case and selected Well trajectory. Right-click Well Log Plots in the Plot Project Tree and select New Well Log Plot. A plot is created with one Track and Curve. Right-click Wells in the Project Tree and select Import-\u003eImport Well Logs from file. Each Well Log Plot can contain several Tracks, and each Track can contain several Curves.",
    "tags": [],
    "title": "Well Log Plots",
    "uri": "/plot-window/welllogsandplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Wells and Completions",
    "content": "ResInsight can import well measurements from a comma-separated values file.\nImporting Well Measurements The command File -\u003e Import -\u003e Well Data -\u003e Import Measurements will read well measurements from the selected files, and create one entry for each file under the Wells -\u003e Well Measurements item in the Project Tree.\nFile Format The format is comma-separated values with one measurement per line. The following requirements have to be met:\nEach data line must contain seven values: Well Name, MD, Date, Measurement Kind, Value, Quality, and Comment. The values must be separated by commas. Lines starting with \"#\" is considered to be comment lines, and will be ignored. Blank lines are also ignored. Example 1: # Example well measurements csv file. # This is a comment # # Well Name, MD, Date, Kind, Value, Quality, Comment C-3 H, 1465.18, 2001-10-13, XLOT, 1.76, 3, Good test C-3 H, 1865.18, 2002-10-13, XLOT, 1.91, 1, Poor test C-3 H, 1995.18, 2002-10-13, XLOT, 2.45, 1, Poor test C-3 H, 2065.18, 2002-10-13, XLOT, 2.91, 1, Poor test E-3 H, 634.12, 2005-10-24, DP, 0.0, 0, Wash outs E-3 H, 1000.12, 2005-10-24, DP, 0.0, 0, Wash outs\rMeasurement properties Well Name – The name of the well. ResInsight will try to associate each measurement with a well path with a matching name. The well name should be the same as imported here. MD – Measured depth. Date – The date of the measurement. Expects ISO 8601 extended format: yyyy-MM-dd, e.g. 2019-12-24. Kind – The type of measurement. Value – Floating point value. Quality – Integer describing the quality of the measurement. Comment – Short description of the measurement. Reloading Well Measurements The well measurements are copied into the ResInsight project. Each measurement is linked to the file it was imported from. The contents of the file can be reloaded by right-clicking on one of the files under Wells -\u003e Well Measurements and selecting Reload.\nInfo\rReloading measurements from a file will delete all the previously imported measurements from this particular file, and then reimport the current contents of the file.\nWell Measurements Visualization All the imported well measurements are available Project Tree under the Well Measurements for each 3D view.\nThe measurements are shown in all the 3D Views in the project as cylinders on the well path at the specified MD. Double-clicking on measurement will show details in the Result Info panel.\nWell Measurement Property Editor The well measurement property editor lets the user filter which measurement to show based on quality, value and measurement kind. The value of the measurement is used to determine the color, and this changed in the Color Legend.\nValue Filter Settings – Filter measurements by value range. Wells – Show this measurement kind for the selected wells. Quality – Filter by measurement quality. Radius Scale – Scale the radius of well measurement in the 3D view. Relative to the radius of the well path.",
    "description": "ResInsight can import well measurements from a comma-separated values file.\nImporting Well Measurements The command File -\u003e Import -\u003e Well Data -\u003e Import Measurements will read well measurements from the selected files, and create one entry for each file under the Wells -\u003e Well Measurements item in the Project Tree.\nFile Format The format is comma-separated values with one measurement per line. The following requirements have to be met:",
    "tags": [],
    "title": "Well Measurements",
    "uri": "/wells-and-completions/wellmeasurements/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "For large projects with numerous views and grid models, navigating to the desired information can be time-consuming. To address this, we have introduced a special dialog named Quick Access, which displays selected information from a view. By default, this dialog is located to the right of the 3D views.\nWhen a 3D view is selected, the Quick Access dialog will display the following information:\nThe connected grid case IJK value for an IJK cell range filter The minimum and maximum range for a property filter You can now collapse the 3D view in the Property Editor and still manipulate some properties of the view.",
    "description": "For large projects with numerous views and grid models, navigating to the desired information can be time-consuming. To address this, we have introduced a special dialog named Quick Access, which displays selected information from a view. By default, this dialog is located to the right of the 3D views.\nWhen a 3D view is selected, the Quick Access dialog will display the following information:",
    "tags": [],
    "title": "Quick Access",
    "uri": "/3d-main-window/quickaccess/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases",
    "content": "Installation See the following for common install procedures and options:\nLinux Installation Windows Installation See Build Instructions for the complete list of configuration options including support for Octave plugins, ABAQUS ODB API, and HDF5.\nSign up to be notified of new releases For the complete list of releases and updates, please visit ResInsight on Github.",
    "description": "Installation See the following for common install procedures and options:\nLinux Installation Windows Installation See Build Instructions for the complete list of configuration options including support for Octave plugins, ABAQUS ODB API, and HDF5.\nSign up to be notified of new releases For the complete list of releases and updates, please visit ResInsight on Github.",
    "tags": [],
    "title": "Build From Source",
    "uri": "/releases/build-from-source/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Create Decline Curves Decline Curve Analysis (DCA) can be created from the right-click menu for a curve in the Plot Project Tree.\nThree decline curves are created, and the values for the decline curves can be inspected visually in the plot and values can be displayed using Show Plot Data from the menu inside the plot window.\nOrigins J.J. Arps [1] concluded that the decline in oil production rate ($q_i$) over time can be described by these equations:\n$$\\frac{ 1 }{ q_0 } \\frac{\\partial q_0}{ \\partial t} = -D$$\nwhere the decline rate, $D$ is a time-dependent function:\n$$D = \\frac{D_i}{1+bD_i t}$$\nwhere:\n$q_0$ is the production rate (e.g. oil production) in a unit of choice (e.g STB/day) $t$ is the time $D$ is the time dependent decline rate $D_i$ is the initial decline rate (constant) $b$ is a dimensionless constant (typically used as a tuning parameter to match actual field data) and is in the range of $ 0 \u003c= b \u003c= 1 $. The equations can be used to forecast future reservoir and well production.\nBased on the value of $b$ in the function, Arps classified the decline curves into three types:\nThe exponential decline has $b = 0$. The harmonic decline has $b = 1$. The hyperbolic decline has $b$ ranges between 0 and 1. It is important to note that the decline curve is an empirical model and assumes a simplified representation of the complex physical and geological factors affecting production decline.\nRate-Time Decline Curves Exponential Decline Exponential decline is the production decline when $ b = 0 $. This gives a constant decline ($D_i = D$).\n$$q_0 = q_i e^{-Dt }$$\nHyperbolic Decline Hyperbolic decline is the generic case where $ 0 \u003c b \u003c 1 $.\n$$q_0 = \\frac{q_i}{ (1+bD_i t )^\\frac{1}{b} }$$\nHarmonic Decline Harmonic decline is the production decline when $b = 1$:\n$$q_0 = \\frac{q_i}{ (1+D_i t ) }$$\nRate-Cumulative Production Decline Curves Exponential Decline Exponential decline is the production decline when $b = 0$. This gives a constant decline ($D_i = D$).\n$$N_p = \\frac{q_i - q_0}{D}$$\nHyperbolic Decline Hyperbolic decline is the generic case where $ 0 \u003c b \u003c 1 $.\n$$N_p = \\frac{q_i^b}{D_i(1-b)} [q_i^{(1-b)} - q_0^{(1-b)}]$$\nHarmonic Decline Harmonic decline is the production decline when $ b = 1 $:\n$$N_p = \\frac{q_i}{ D_i } * \\ln(\\frac{q_i}{ q_0} )$$\nDecline Rate The continuous decline rate ($D_i$) can be determined from production history data. Using production rate and time data the value is the slope of the straight line on a semi-log plot. Taking two points on from the data $(t_1, q_1)$ and $(t_2, q_2)$:\n$$D_i = \\frac{1}{t_2 - t_1} \\ln(\\frac{q_1}{q_2})$$\nwhere:\n$t_1$ is the time of the first point. $q_1$ is the production rate in the first point. $t_2$ is the time of the second point. $q_2$ is the production rate in the second point. References [1] Arps, J. J.: “Analysis of Decline Curves,” SPE-945228-G, Trans. of the AIME (1945)",
    "description": "Create Decline Curves Decline Curve Analysis (DCA) can be created from the right-click menu for a curve in the Plot Project Tree.\nThree decline curves are created, and the values for the decline curves can be inspected visually in the plot and values can be displayed using Show Plot Data from the menu inside the plot window.",
    "tags": [],
    "title": "Decline Curve Analysis",
    "uri": "/plot-window/declinecurveanalysis/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Intersections are cross sections of a grid model that cut the grid in various ways to display grid cell values. There are two main types of intersections:\nIntersection: is defined by a piece-wise linear curve and a direction of extrusion. The curve can be either a simulation well, a well path, a user defined polyline, or a user defined line. An intersection can also be shown in a separate 2D Intersection View.\nIntersection Box: can be used as a box cutting grid cells or collapsed to a restricted axis aligned plane.\nStructural uncertainty can be visualized on intersections as described in Ensemble Surface.\nAll types of intersections are stored in the folder Intersections of a View. An intersection may be copied to other views by the menu option Copy intersections to all views in case in the right-click menu.\nCurve Based Intersections There are four types of curve based intersections: Well Path, Simulation Well, Polyline, and Azimuth and Dip. Azimuth and Dip differs from the other three curves, as it is defined just by one straight line. It is called Azimuth and Dip because the plane’s extrusion direction can be defined by the two angles.\nAny of these intersections can be created by activating New Intersection from the right-click menu of the Intersections item in the Project Tree. They can also be created from the right-click menu in the 3D view, as described below.\nInfo\rTo be able to see the intersections in the 3D view, the grid cells can be hidden by disabling the Grids item in Project Tree or activating the Hide Grid Cells toolbar button.\nCommon Curve Based Intersection Options The property panel of a well path based intersection is shown below:\nName – Automatically created based on the item specifying the intersection. The user can edit the name, but it will be updated if you change well or well path. Intersecting Geometry – Options to control the curve used for the cross section dependant on the type of intersection. Depth Filter – Controls the depth/z-range for visible geometry. Can be controlled from the Intersections folder object. K Range Filter – Controls the visible K slices. Can be controlled from the Intersections folder object. Advanced options Direction – Horizontal, vertical or defined by two points. Extent Length – Defines how far an intersection for well path or simulation Well is extended at intersection ends. Show Inactive Cells – Controls if inactive cells are included when creating intersection geometry. Direction is used to extrude the curve in the defined direction, and thereby create a set of planes. Horizontal implies the start and end point of the curve is used as a baseline, and the horizontal direction is thus perpendicular to that line. By Defined by two points, the user can define the direction based on any two points. The direction from the first to the second point defines the extrude direction.\nWell Path Intersections A new Well Path intersection can be created by right-clicking the well path in the 3D view or in the Project Tree.\nA new Simulation Well intersection can be created by right-clicking the simulation well in the 3D view or in the Project Tree.\nWhen a simulation well intersection is created, the source simulation well can be changed by using the Simulation Well selection combo box in the Property Editor.\nIf the well contains more than one branch, the intersection geometry will be created for the selected branch in the Branch combo box.\nPolyline Intersection A new Polyline intersection can be created from the right-click menu in the 3D view. Then, by left-clicking on reservoir geometry, a polyline is created. The points are added to the point list in the Property Editor.\nThe background color of point list is light pink when additional points can be picked in 3D view. To finish adding points, click button Stop picking points (color of point list turns white). The points in the list can be deleted and edited using the keyboard. To append more points (by clicking in the 3D view), press button Start picking points again.\nThe point list can be copied to clipboard using CTRL-C when in keyboard focus. A new list of points can be pasted into the point list by using CTRL-V.\nPolygon Intersection A polyline or polygon intersection can also be based on a Polygons in the project. The polygon is then used as the polyline. This is done by selecting the polygon in the Property Editor.\nAzimuth and Dip A new Azimuth and Dip intersection can be created from the right-click menu in 3D view. Then, by left-clicking two points on reservoir geometry, a single line is created between the first point, and the second point projected down to the plane with same z-value as the first point. The two points are added to the point list in the Property Editor.\nThe background color of point list is light pink when additional points can be picked in 3D view. To finish adding points, click button Stop picking points (color of point list turns white). The points in the list can be deleted and edited using the keyboard. To append more points by clicking in the 3D view, press button Start picking points again.\nThe points in the list can be copied to clipboard using CTRL-C when in keyboard focus. A new list of points can be pasted into the point list by using CTRL-V.\nWhen two points are picked, a plane between the points will appear in the 3D view with a 90 degrees Dip, and the Azimuth angle calculated from the two points. The two angles can be edited in the Property Editor of the intersection:\nDip: angle between the horizontal plane and down. Azimuth: angle between North and the plane. Changing azimuth will rotate the plane about the first point picked in 3D view. The length of the plane can also be set manually in the Property Editor.\nLength Up is the distance from the user defined horizontal line, to the top of the plane intersecting the model. Length Down is the distance from the user defined horizontal line, to the bottom of the plane intersecting the model. 2D Intersection Views A 2D Intersection View displays the intersection in a separate 2D view along with the defining curve. The intersection and the defining well path, simulation well or polyline is flattened to make it easier to see the intersected grid and how the well traverses it.\nEach of the curve based intersections have a corresponding 2D Intersection View. Management of these views are automatic. They will be created and deleted along with the intersection.\nA 2D Intersection View is shown either by right clicking an intersection and select Show 2D intersection View or by checking its entry in Project tree.\nScales along the edges of the view show the depth and the horizontal length of the intersection. The length is measured from the start of the wellpath or the well head of a simulation well.\nThe view is mostly controlled by the options in the 3D view where the intersection is defined. There are, however, some independent controls, like drawstyle, timestep and Z-scale:\nViewer Name – User editable name of view. The default name combines the name of the origin view and intersection name. Background – Color of the viewer background Disable Results Lighting – Toggle the light effect. When turned off, the colors are easier to compare with legend, but carry no visual cue to visualize 3D shape. The effect is tiny on 2D Intersection Views. Grid Appearance – Controls the drawstyle of the grid geometry Z Scale – Scales the view in Z(depth) direction to make slim K-layers easier to see Grid Lines – Controls what mesh lines to draw All – All mesh lines are drawn Faults Only – Only mesh lines associated with faults are drawn None – Mesh lines are not drawn at all Grid Surface – Controls what grid surface geometry to draw All – All grid faces are drawn Faults Only – Only faces that are included in a fault is drawn None – Do not draw any faces Defining Points Show points – Toggle the display of the defining points for Polyline or Azimuth and Dip intersections. These options are similar to the options for a regular 3D view (See View Properties )\nIntersection Box and Intersection Planes A new Intersection Box or Intersection Plane can be created from the right-click menu in the 3D view or the right-click menu in the Project Tree.\nThe following list describes the properties for an Intersection Box:\nName – Automatically created based on the item specifying the intersection Box Type – Box or x-plane, y-plane or z-plane Show Inactive Cells – Controls if inactive cells are included when creating intersection geometry X Coordinates – Coordinates for x range Y Coordinates – Coordinates for y range Depth – Coordinates for depth range XY Slider Step Size – Defines incremental changes for slider when XY values are changed (default value 1.0) Depth Slider Step Size – Defines incremental changes for slider when depth values are changed (default value 0.5) Direct interaction in a 3D view is activated when Show 3D manipulator is pressed. Handles are displayed at the sides of the intersection object, and interactive modification is done by dragging a handle in the 3D view.\nDepth and Range Filter An intersection can be visually filtered, i.e. partly hidden from display, by employing a user defined Depth Filter. Depth filtering is performed by selecting an intersection in Project Tree and setting Depth Filter properties in Property Editor:\nNone: no depth filtering Above: show above the specified Depth Below: show below the specified Depth Between: show between the specified Upper Depth and the specified Lower Depth An intersection can be also be visually filtered by a user defined K Range Filter. K Range filtering is performed by enabling K Range Filter of an intersection. The filtering is defined using a text string, i.e. “5,10-15,20:3”, see Advanced Text Input for details.\nFilter Options for all Intersections The filtering of all intersections can be controlled when selecting the Intersections folder object. Activating these options will override the settings defined locally on each intersection.\nSimilar options can also be activated for Faults.\nIntersection Results To select a simulation result to display on an intersection, right-click Intersection Results in Project Tree and select New Result Definition.\nBy selecting a specific Intersection Result, the Property Editor allows to specify case, type or position etc depending on whether the result stem from an Eclipse case or a Geomechanical case.\nThe next step is to select an Intersection in Project Tree and define Result Reference. In the example below, available sources are the two Intersections Results of previous figure, one of which stems from a geomechanical case and the other from an Eclipse case.",
    "description": "Intersections are cross sections of a grid model that cut the grid in various ways to display grid cell values. There are two main types of intersections:\nIntersection: is defined by a piece-wise linear curve and a direction of extrusion. The curve can be either a simulation well, a well path, a user defined polyline, or a user defined line. An intersection can also be shown in a separate 2D Intersection View.",
    "tags": [],
    "title": "Intersections",
    "uri": "/3d-main-window/intersections/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "This chapter of the ResInsight documentation describes the following:\ndefining preferences to customize and adapt the behavior of ResInsight for your purposes and work flow memory management, i.e. how to determine consumption and clearing data from computer memory keyboard shortcuts for effective and convenient usage of ResInsight use of the built-in regression test system of ResInsight See the subsequent subchapters for more information on each topic.",
    "description": "This chapter of the ResInsight documentation describes the following:\ndefining preferences to customize and adapt the behavior of ResInsight for your purposes and work flow memory management, i.e. how to determine consumption and clearing data from computer memory keyboard shortcuts for effective and convenient usage of ResInsight use of the built-in regression test system of ResInsight See the subsequent subchapters for more information on each topic.",
    "tags": [],
    "title": "Miscellaneous",
    "uri": "/misc/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Create Regression Analysis Regression analysis curves can be created from the right-click menu for a curve in the Plot Project Tree. In addition to single curves, regression anaysis is also supported on ensemble statistics curves and Cross Plot curves.\nRegression Types Linear Regression The linear regression (i.e. straight line fit) is calculated by choosing the line that minimizes the sum of the squared differences between the observed dependent variable values and the values predicted by the linear equation. The straight line equation can be written as:\n$$ y = a + bx $$\nwhere:\n$y$ is the dependent variable, $x$ is the independent variable, $a$ is the intercept, $b$ is the slope. Polynomial Regression Polynomial regression is a form of linear regression where the relationship between the independent variable(s) and the dependent variable is modeled as an nth-degree polynomial. It allows for more complex relationships between the variables by introducing polynomial terms into the regression equation.\nA polynomial in a single indeterminate x can always be written (or rewritten) in the form\n$$ y = a_{n}x^n + a_{n-1}x^{n-1} + \\dots + a_{2}x^{2}+a_{1}x+a_{0} $$\nwhere:\n$a_0 , \\ldots, a_n$ are constants that are called the coefficients of the polynomial, $x$ is the indeterminate. $n$ is the degree of the polynomial. To determine the degree of the polynomial, one needs to consider the complexity of the relationship between the variables and the nature of the data. A higher degree polynomial can capture more intricate relationships but may also lead to overfitting if the model becomes too flexible.\nPolynomial regression can be beneficial when the relationship between the variables is curvilinear or nonlinear. By introducing polynomial terms, it can capture the curvature in the data and provide a better fit compared to simple linear regression.\nPower Fit Regression The Power Fit regression is described by the following equation:\n$$ y = ax^b $$\nwhere:\n$y$ is the dependent variable, $x$ is the independent variable, $a$ is the coefficient, $b$ is the exponent. In power fit regression, the goal is to estimate the values of $a$ and $b$ that best describe the relationship between the variables. This is done by minimizing the sum of the squared differences between the observed dependent variable values and the values predicted by the power-law equation.\nExponential Regression Exponential regression is a type of nonlinear regression used to model relationships where the dependent variable changes exponentially with the independent variable. It is suitable when the data exhibits exponential growth or decay patterns.\nThe equation for exponential regression can be written as:\n$$ y = ae^{bx} $$\nwhere:\n$y$ is the dependent variable, $x$ is the independent variable, $a$ is the coefficient, $b$ is the rate of growth or decay, $e$ is the base of the natural logarithm (approximately 2.71828). Exponential models are commonly used in biological applications, for example, for exponential growth of bacteria. Spotfire uses a nonlinear regression method for this calculation. This will result in better accuracy of the calculation compared to using linear regression on transformed values only.\nLogarithmic Regression The logarithmic fit calculates the least squares fit through points by using the following equation:\n$$ y = a + b \\ln( x ) $$\n$y$ is the dependent variable, $x$ is the independent variable, $a$ and $b$ are coefficients.",
    "description": "Create Regression Analysis Regression analysis curves can be created from the right-click menu for a curve in the Plot Project Tree. In addition to single curves, regression anaysis is also supported on ensemble statistics curves and Cross Plot curves.\nRegression Types Linear Regression The linear regression (i.e. straight line fit) is calculated by choosing the line that minimizes the sum of the squared differences between the observed dependent variable values and the values predicted by the linear equation. The straight line equation can be written as:",
    "tags": [],
    "title": "Regression Analysis",
    "uri": "/plot-window/regressionanalysis/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "ResInsight can create Well Bore Stability plots for Geomechanical cases. These plots are specialized Well Log Plots to visualize Formations, Well Measurements, Well Path Attributes as well as a set of well path derived curves in different tracks.\nIn the figure above, the first track contains Formations and an indication of sea level.\nSea Level Formations The second track contains a visualisation of the well, with well attributes of Casing Design as well Completions\nThe third track, which is disabled by default, contains the input parameters of the plot as described in the Input Requirements section.\nThe fourth track (third visible by default) shows the following stability gradients (all normalized by mud weight):\nFG: Fracture Gradient in sands based on Kirsch and in shale based on the K0_FG parameter or proportional to SHMIN. OBG: Overburden stress gradient: Stress component S_33. PP: Pore pressure. SFG: Shear Failure Gradient for shale based on Stassi-d’Alia. SHMIN: Minimum horizontal stress from grid. SH_MK: Minimum horizontal stress from Matthews \u0026 Kelly. The fifth track contains curves showing the angular orientation of the well path as azimuth (deviation from vertical) and inclination (deviation from x-axis) in degrees.\nIf any Well Measurements are present, they will be visible as symbols in the track Stability Curves.\nCreate Well Bore Stability plots Well Bore Stability plots can be created from the right-click menu for a well path in Project Tree or from the the right-click menu of the Well Log Plots entry in Plot Project Tree. In the former case, the well bore stability plot will be created for the selected Well Path. In the latter case, it will be created for the first well path in the well path list and the well path for the entire plot can be changed with the Change Data Source Feature.\nInput requirements In order to calculate PP, FG, SFG and SH_MK, the following input parameters are required:\nCurve Required Parameters PP Pore Pressure in reservoir (PP Reservoir) and outside the reservoir (PP Non-Reservoir) FG Pore Pressure (PP Reservoir), Poissons’ Ratio in Sand, FG Shale in shale SFG Uniaxial Compressive Strength (UCS) SH_MK K0_SH, Overburden Gradient at initial time (OBG0) and the Depletion Factor (DF) For parameters with multiple available sources, the sources will be tried in numbered order for each curve point (where well path intersects with grid). However, the options for FG Shale are mutually exclusive and will apply to the whole domain.\nParameter Default Sources Density of Sea Water $1.03 g/cm^3$ User setting in GUI PP Reservoir Grid Nodal Values (POR) 1. Grid (Grid units), 2. LAS-file as equivalent mud-weight (Variable: “PP_INP” or “PP_RES_INP”, Units: SG_EMW), 3. Element Property Table (Variable: “POR_INP” with Units: Pascal or Variable: “PP_INP” with Units: SG_EMW) PP Non-Reservoir Hydrostatic PP (from TVDRKB, Density of Sea Water and gravity) 1. LAS-file as equivalent mud-weight (Variable: “PP_NONRES_INP”, Units: SG_EMW), 3. Element Property Table (Variable: “POR_NONRES_INP” with Units: Pascal or Variable: “PP_NONRES_INP” with Units: SG_EMW), 4. Hydrostatic Pressure Poissons’ Ratio 0.35 1. LAS-file (Variable: “POISSON_RATIO_INP”), 2. Element Property Table (Variable: “POISSON_RATIO_INP”) UCS 100 bar 1. LAS-file (Variable: “UCS_INP”, Units: bar), 2. Element Property Table (Variable: “UCS_INP”, Units: Pascal) Initial Overburden Gradient (OBG0) OBG at initial time step 1. Grid (Grid units), 2. LAS-file (Variable: “OBG0_INP”, Units: Bar) DF 0.7 1. LAS-file (Variable: “DF_INP”, No Units), 2. Element Property Table (Variable: “DF_INP”, No units), 3 User Defined K0_SH 0.65 1. LAS-file (Variable: “K0_SH_INP”, No Units ), 2. Element Property Table(“Variable: “K0_SH_INP”, No Units), 3. User Defined FG Shale Derived from K0_FG Derived from K0_FG and PP Non-Reservoir, Proportional to SH or LAS-file (Variable: “FG_SHALE_INP”, Units: SG_EMW) K0_FG 0.75 1. LAS-file (Variable: “K0_FG_INP”, No Units ), 2. Element Property Table(“Variable: “K0_FG_INP”, No Units), 3. User Defined In addition to the units above, it LAS-files it is possible to supply PP in Bar and UCS in Pascal or MPa. Conversion will be handled automatically.\nEquations and calculations Stresses at the borehole wall - Kirsch equations The basic input to wellbore stability models is the stresses at the borehole wall given by the Kirsch equations in cylindrical coordinates:\nThe transformation of stresses from cartesian coordinate system to x’, y’, z’ is performed by pre- and transposed postmultiplication of the stress tensor with a 3x3 transformation matrix M, i.e. .\nFracture gradient calculations based on Kirsch in sand To estimate the fracture gradient FG, first step is to find the principal effective stresses at the borehole wall:\n$$\\sigma’_1 = \\sigma’_1 (\\theta)= \\sigma’_r = p_w - p_0$$\n$$\\sigma’_2 = \\sigma’_2 (\\theta) = \\sigma_{t \\max} = \\frac{1}{2} \\left( (\\sigma_z + \\sigma_\\theta) + \\sqrt{(\\sigma_z - \\sigma_\\theta)^2 + 4\\tau_{\\theta z}^2} \\right) - p_0$$\n$$\\sigma’_2 = \\sigma’_3 (\\theta) = \\sigma_{t \\min} = \\frac{1}{2} \\left( (\\sigma_z + \\sigma_\\theta) - \\sqrt{(\\sigma_z - \\sigma_\\theta)^2 + 4\\tau_{\\theta z}^2} \\right) - p_0$$\nNext step is to solve for the value of $\\theta \\in [0 - 180]$ that yields $\\sigma’_3 (\\theta) = 0$ which in turn gives us $\\sigma_\\theta$ which can be used to solve for $P_w$ in the Kirsch equations.\nThen calculate FG in equivalent mud weight units as $$ FG = \\frac{P_w}{TVD_{RKB} \\: g \\: \\rho}$$ where $TVD_{RKB} = TVD_{MSL} + AirGap$, the gravity acceleration $g = 9.81 m/s^2$ and the density of sea water $\\rho$ in $kg/m^3$ (thus 1000 x the UI input in $g/cm^3$).\nFracture gradient in shale $$FG_{shale} = K0_{FG} \\times (OBG0 - PP0) + PP0$$\nSH from Matthews \u0026 Kelly $$SH_{MK} = K0_{SH} \\times (OBG0 - PP0) + PP0 + DF \\times (PP-PP0)$$\nStassi-d’Alia failure criterion in shale Stassi-d’Alia failure criterion in shale is calculated by finding the well pressure $P_w$ that satisfies the following equation for $\\theta \\in [0 - 180]$:\nwhere are the effective principal stresses from the Fracture Gradient calculation. and UCS is the uniaxial compressive strength.\nThe Shear Failure Gradient is then given as\n$$SFG = \\frac{P_w}{TVD_{RKB} \\: g \\: \\rho}$$\nPython Interface The ResInsight Python API offers functionality for creating Well Bore Stability Plots from Python. For an example of use, see ResInsight Python API, and the Create WBS Plot script listed under Python Examples.",
    "description": "ResInsight can create Well Bore Stability plots for Geomechanical cases. These plots are specialized Well Log Plots to visualize Formations, Well Measurements, Well Path Attributes as well as a set of well path derived curves in different tracks.\nIn the figure above, the first track contains Formations and an indication of sea level.\nSea Level Formations The second track contains a visualisation of the well, with well attributes of Casing Design as well Completions",
    "tags": [],
    "title": "Well Bore Stability Plots",
    "uri": "/plot-window/wellborestabilityplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight supports import, export and creation of polygons and polylines.\nPolygons in Project A polygon is available for all views in a project. The polygons can be imported from file, exported to file or created by interactively clicking in a view.\nCreate a Polygon To create a polygon, the user clicks on a set of locations in 3D. This operation can be started by:\nRight-click on some geometry in a view, from the menu select Polygon Right-click on Polygons in the Project Tree and select Create Polygon This will enable a mode where the user can click in the view to create a polygon. Small objects are created, and can be used to manipulate the location of a point. Left-click the pink circle and hold + mouse move will move a point in XY plane, left-click the blue cone and hold + mouse move will move a point in Z.\nWhen completed, the user can click on the button Stop Picking Points in the Property Editor.\nDuplication and Simplification Polygons can be duplicated by using the right-click menu. Imported polygons can have very many coordinates. To reduce the number of points, the user can select Simplify Polygon from the right-click menu. The simplification is done by removing points that are close to each other, but still conserves the overall shape of the polygon. The user can define a threshold to control the simplification. A larger value will remove more points, and a smaller value will remove fewer points.\nCreate Intersection and Polygon Cell Filter The user can create a grid intersection by using the Create Polygon Intersection. This will create an intersection of the polygon with the grid.\nThe user can also create a polygon cell filter by using the Create Polygon Cell Filter. This will create a polygon that represents the cells that are inside the polygon.\nPolygon Intersection\nPolygon Filter\nAppearance Appearance settings are available by selecting the project polygon. Name, color, line style and other visual settings can be set in the Property Editor.\nA polygon is by default defined as a closed loop of line segments. The user can choose to display the polygon as a closed loop or as a polyline using the Closed Polygon option in the Property Editor.\nImport and Export Polygons can be imported from file and exported to file. The file format is either POL or CSV. The file format is automatically detected from the file extension. The user can also select the file format manually.\nImport and export is available from the right-click menu of Polygons in the Project Tree. Polygons imported form file is marked with a padlock icon in the Project Tree. This indicates that the polygon is read-only and cannot be edited. A copy of the polygon can be created by using the right-click menu.\nPolygon File Format - POL Define each point as three double per line (X Y Depth). Comment lines are supported by using # at the start of the line. Multiple polygons can be defined in the same file by using 999 999 999 as a separator.\n# This is a comment # This is a comment 58177.76 732.7 1643.6 58260.83 732.8 1596.6 57985.66 732.7 1542.0 59601.45 732.4 3639.0 59422.01 732.2 3639.0 59793.41 732.2 3639.0 999 999 999 # starting polyline 2 58260.83 732.8 1596.6 57985.66 732.7 1542.0 59601.45 732.4 3639.0 Polygon File Format - CSV Define each point as three double and optional integer ID per line (X,Y,Depth,ID). The column headers are ignored.\nX,Y,Depth,ID 58177.76,732.7,1643.6,1 58260.83,732.8,1596.6,1 57985.66,732.7,1542.0,1 59601.45,732.4,3639.0,2 59422.01,732.2,3639.0,2 59793.41,732.2,3639.0,2",
    "description": "ResInsight supports import, export and creation of polygons and polylines.\nPolygons in Project A polygon is available for all views in a project. The polygons can be imported from file, exported to file or created by interactively clicking in a view.\nCreate a Polygon To create a polygon, the user clicks on a set of locations in 3D. This operation can be started by:",
    "tags": [],
    "title": "Polygons",
    "uri": "/3d-main-window/polygons/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight is capable of mapping properties and simulation results onto 3D surfaces imported from GOCAD and Petrel as specified below.\nImport and appearance of surfaces 3D surfaces from GOCAD and Petrel are imported into ResInsight by the menu option File-\u003eImport-\u003eImport Surfaces in the 3D Main Window.\nImported surfaces are listed under the entry in the Project Tree. You can click on a surface to change i.e. the name or color of the surface, or change the file to read the surface data from.\nYou can also change the depth of the surface by adding a depth offset (positive or negative). This could be used i.e. to import the same surface file multiple times and assign each instance of the surface a separate depth offset. When a depth offset is set, the offset value will be shown as part of the surface name in the project tree.\nNote\rMultiple surfaces can be imported at the same time by choosing more than one input file in the file selection window that shows up when you start an import.\nUsing folders To make it easier to organize the surfaces you import into your project, ResInsight supports creating surface folders in the project tree. To create a new folder, right-click on the top level Surfaces folder in the project tree and choose Add Folder.\nSurface Results Per default, ResInsight maps current Cell Result on a given surface. If another result is to be displayed, specify the result under Surface Results as shown below.\nClicking a surface of a View in the Project Tree activates the Property Editor for allowing view settings as shown below.\nTo change result displayed on the surface, please specify the desired result in the Result Reference section of the Property Editor.\nReloading Surfaces If you have modified a surface file using an external program, you can easily load the changes into ResInsight by using the reload surface feature. Bring up the right-click menu for the surface you want to reload and choose Reload. The views will automatically update with the new data (could take a few seconds).\nCreate a copy You can easily create a copy of an existing surface by choosing Create Copy in the surface right-click menu. A new, identical surface will show up at the same level in the project tree. You can now give it a new name, change depth offset etc.\nGrid Case Surfaces In addition to importing surfaces from file, ResInsight can also generate grid case surfaces. You do that by bringing up the right-click menu for the project tree entry and choose Create Grid Case Surfaces.\nA grid case surface has the same properties as a surface imported from file, but instead of choosing which file the data should come from, you choose a source case, a slice direction and a slice index. The slice direction and index will be added to the surface name shown in the project tree.\nDepth Surfaces A flat surface at a specified depth can be created from the right-click menu and select Create Depth Surface. A transparent surface is created, and color and transparency can be adjusted.\nExporting Surfaces ResInsight can export surfaces to the GOCAD TSurf file format. Grid case surfaces can additionally be exported to Petrel Surface PTL format. Use the right-click menu for the surface you want to export and choose the export format you want to use. A file selection window will show up allowing you to choose where you want to save the exported data.\nSupported Surface Formats GOCAD Surface format GOCAD is a computer application that allows you to import, create, modify, integrate, view, and export geological objects in 3D. The GOCAD export file format supported by ResInsight is TSURF (*.ts). A TSURF data file is a triangle based surface format containing vertex coordinates and triangle to vertex connectivities as exemplified below. ResInsight import vertex and triangle identifiers from the first TFACE section in such a file.\nGOCAD TSurf 1 HEADER { name:MF_027_SU } GOCAD_ORIGINAL_COORDINATE_SYSTEM NAME Default AXIS_NAME \"X\" \"Y\" \"Z\" AXIS_UNIT \"m\" \"m\" \"m\" ZPOSITIVE Depth END_ORIGINAL_COORDINATE_SYSTEM TFACE VRTX 1 458177.767090 7322538.712891 1643.655884 CNXYZ VRTX 2 458260.834961 7322392.890625 1596.685303 CNXYZ VRTX 3 457985.662109 7322783.783203 1542.060059 CNXYZ VRTX 4 459601.453125 7322511.427734 3639.000000 CNXYZ VRTX 5 459422.015625 7322689.230469 3639.000000 CNXYZ VRTX 6 459793.410156 7322338.230469 3639.000000 CNXYZ ... TRGL 2 61 98 TRGL 20 153 66 TRGL 152 19 65 END Petrel Surface PTL files ResInsight is capable of importing a surface defined by a PTL (*.ptl) file format. A PTL data file specifies the quads of a surface by x, y, z nodal coordinates and the i and j indices as exemplified below. As seen, # denotes comment lines.\n#Type: scattered data #Version: 6 #Description: No description #Format: free #Field: 1 x #Field: 2 y #Field: 3 z meters #Field: 4 column #Field: 5 row #Projection: Local Rectangular #Units: meters #End: #Information from grid #Grid_size: Not_avaiable #Grid_space: Not_available #Z_field: z #Vertical_faults: Not_available #History: No history #Z_units: meters 443479.500000 7305390.500000 -1000.000000 1 1 443479.500000 7305488.500000 -1000.000000 1 2 443479.500000 7305586.500000 -1000.000000 1 3 443479.500000 7305684.500000 -1000.000000 1 4 443479.500000 7305782.500000 -1000.000000 1 5 443479.500000 7305880.500000 -1000.000000 1 6 ...\rOpenWorks XYZ Surface files ResInsight is capable of importing a surface defined by a XYZ (*.dat) file from OpenWorks. A XYZ data file specifies the quads of a surface by x, y, z nodal coordinates organized in a regular grid. As seen, # and @ denotes comment lines.\n@File_Version: 4 @Coordinate_Type_is: 1 @Export_Type_is: 1 @Number_of_Projects 1 @Project_Type_Name: , 3,xxx, @Project_Unit_is: meters , xxx #File_Version____________-\u003e 4 #Project_Name____________-\u003e xxx #Project_Type____________-\u003e 3 #Export_XY_Unit__________-\u003e meters #OpenWorks_Project_______-\u003e 'xxx' #Master_Project_______-\u003e #Coordinate_type_________-\u003e 1 #Number_of_points_in_hzd_-\u003e 1 #Horizon_internal_id_____-\u003e xxx #Horizon_extremes_are____-\u003e xxx,xxx #Horizon_onset_is_Minimum_____-\u003e 1 #Horizon_type_is_DEPTH_STRUCTURE______-\u003e 2 #Horizon_color_is________-\u003e 255 0 0 #Horizon_name____________-\u003e xxx #Horizon_attribute_______-\u003e DEPTH_STRUCTURE #Horizon_version_________-\u003e UNKNOWN #Horizon_interp_status___-\u003e defaultStat #Horizon_class___________-\u003e defaultClass #Export_Z_Unit___________-\u003e meters #Horizon_onset_type______-\u003e Minimum #Horizon_data_domain_____-\u003e DEPTH #Horizon_remark_size_____-\u003e 50 Horizon from Grid on Fri Aug 14 13:42:10 CEST 2020 #End_of_Horizon_ASCII_Header_ 4.5423435e+05 7.3239079e+06 1.5970070e+03 4.5424414e+05 7.3239157e+06 1.5970485e+03 4.5425392e+05 7.3239234e+06 1.5970899e+03 4.5426371e+05 7.3239312e+06 1.5971314e+03",
    "description": "ResInsight is capable of mapping properties and simulation results onto 3D surfaces imported from GOCAD and Petrel as specified below.\nImport and appearance of surfaces 3D surfaces from GOCAD and Petrel are imported into ResInsight by the menu option File-\u003eImport-\u003eImport Surfaces in the 3D Main Window.",
    "tags": [],
    "title": "Surfaces",
    "uri": "/3d-main-window/surfaces/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight is used in many different ways. This section will describe some selected workflows describing how to solve specific tasks.",
    "description": "ResInsight is used in many different ways. This section will describe some selected workflows describing how to solve specific tasks.",
    "tags": [],
    "title": "Best Practices",
    "uri": "/best-practices/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Workflows",
    "content": "Background\nThe Biot porelastic coefficient defines the compressibility of sand grains, and will influence some of the calculations in ResInsight.\nDescription The Biot coefficient can be defined in three ways:\nDefault (Constant value of 1.0) User defined constant for all element One value for each element based on imported values from an element property table These settings are controlled from the Property Editor when a Geomechanical Case is selected. To use Biot coefficients for each element, perform the following steps:\nImport values using Import Element Property Select Biot Coefficient from element properties Select the property to be used for Biot coefficient values Note\rThe state of an active Biot coefficient is indicated in the info box in upper right coner in the 3D view. This will make sure the Biot coefficient information is availalbe when a snapshot is produced.\nRelated documents Element Property Table\nDerived Results",
    "description": "Background\nThe Biot porelastic coefficient defines the compressibility of sand grains, and will influence some of the calculations in ResInsight.\nDescription The Biot coefficient can be defined in three ways:\nDefault (Constant value of 1.0) User defined constant for all element One value for each element based on imported values from an element property table These settings are controlled from the Property Editor when a Geomechanical Case is selected. To use Biot coefficients for each element, perform the following steps:",
    "tags": [],
    "title": "Biot Coefficient",
    "uri": "/workflows/biotcoefficient/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Workflows",
    "content": "Introduction To study the structural uncertainty, ResInsight enables the user to create and import an ensemble of surfaces and compute the statistical surfaces based on this ensemble. This page describes the interactive workflow, but in many cases it can be useful to create scripts related to mangement of Ensemble Surfaces. See Python Examples for more details.\nCreate Ensemble Surface From the right-click menu of surfaces, select Import Ensemble Surface Select the ensemble grid models to create surfaces for, either \"*.EGRID\" or \"*.GRDECL\"\nIn the following dialog, select the K layers. Control if the generated surfaces should be imported into an ensemble surface immediately. Import Ensemble Surface An Ensemble Surface can be imported for one or multiple K-layers.\nFrom the right-click menu of surfaces, select Import Ensemble Surface In the ensemble import dialog, select the surface files for import into ensembles One or multiple ensemble surface objects will be created Import one source grid model and create a 3D view\nControl the visibility of the statistics surfaces in the Surfaces section in the Property Editor for the 3D view Show uncertainty on intersections Create a well path\nCreate an intersection along the well path\nSelect the intersection in the Property Editor\nFrom the right-click menu, select Create Intersection Band Optionally add an Intersection Curve\nAdjust options for the intersection bands and curves Related documentation Create a Well Path\nIntersections",
    "description": "Introduction To study the structural uncertainty, ResInsight enables the user to create and import an ensemble of surfaces and compute the statistical surfaces based on this ensemble. This page describes the interactive workflow, but in many cases it can be useful to create scripts related to mangement of Ensemble Surfaces. See Python Examples for more details.\nCreate Ensemble Surface From the right-click menu of surfaces, select Import Ensemble Surface",
    "tags": [],
    "title": "Ensemble Surface",
    "uri": "/workflows/ensemblesurface/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Workflows",
    "content": "Introduction To study the uncertainty for well log extraction curves, ResInsight enables the user to import an ensemble of well logs and compute the statistical distribution in this ensemble.\nWorkflow From the right-click menu of Wells, select Create Ensemble Well Log In the ensemble import dialog, select the files for import into ensembles Select well path and properties for export, select time step for dynamic properties, and use the checkbox to control if you want to create a well log ensemble based on the exported well log files Click OK when you are ready\nA Well Log Plot is created in the Plot Window If the geometry is different in the ensembles (structural uncertainty), a depth equalization method is implemented. If the well is crossing layers in the same order across the different ensembles, it is possible to apply a depth equalization from the Property Editor\nIn the plot above, the part where the crossing of K-layers is consistent, we get an easy to read plot. When the K-layer crossings do not match anymore, it is clearly visible that the plot is not able to display the information correctly.\nRelated documentation Well Log Extraction Ensemble File Dialog",
    "description": "Introduction To study the uncertainty for well log extraction curves, ResInsight enables the user to import an ensemble of well logs and compute the statistical distribution in this ensemble.\nWorkflow From the right-click menu of Wells, select Create Ensemble Well Log In the ensemble import dialog, select the files for import into ensembles",
    "tags": [],
    "title": "Ensemble Well Log",
    "uri": "/workflows/ensemblewelllog/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "This section describes how Faults are detected and visualized. NNC’s are a part of the Faults visualization and are thus also mentioned in this section.\nRelated pages :\nAllan Diagrams\nDerived Results\nFault Detection ResInsight always scans the grids for geometrical faults when they are loaded. When two opposite cell faces of I, J, K neighbor cells does not match geometrically, they are tagged.\nAll the tagged cell faces are then compared to the faults possibly imported from the *.DATA file in order to group them. If a particular face is not found among the fault faces defined in the *.DATA file (or their opposite faces), the cell face is added to one of two predefined faults:\nUndefined grid faults Undefined grid faults With Inactive The first fault is used if both the neighbor cells are active. If one or both of the neighbor cells are inactive, the second fault is used.\nThese particular Faults will always be present, even when reading of fault information from the *.DATA file is disabled.\nInformation from *.DATA-files Fault Information If enabled in Preferences, ResInsight will import fault information from the *.DATA files and use this information to group the cell faces into named items. The imported faults are ordered in ascending order based on their name.\nInfo\rThe DATA file is parsed for the FAULT keyword while respecting any INCLUDE and PATH keywords.\nAs import of faults can be time consuming, reading of faults can be disabled from Preferences-\u003eImport faults\nNNC Data If enabled in Preferences, ResInsight will read Non Neighbor Connections from the Eclipse output file (*.INIT), and create explicit visualizations of those. The NNC’s are sorted onto the Fault’s and their visibility is controlled along with them.\nWhen the NNCs are imported from file, ResInsight will identify NNCs not defined in the input file (Faces with zero transmissibility is not exported from the simulator). See Derived Results for details on other NNC related results.\nInformation from PFLOTRAN simulations If the *.DATA file is not found, the folder is searched for *.IN file. This file is parsed based on the file structure of a PFLOTRAN simulation. Identified faults will be imported simular to the import from *.DATA files.\nhttps://www.pflotran.org/\nFault Visualization Options Fault Visibility Faults can be hidden and shown in several ways.\nChecking or unchecking the checkbox in front of the fault will show or hide the fault. Visibility for multiple faults can be controlled at the same time by selecting multiple faults and use the right-click menu: On, Off and Toggle. Hide the fault from the right-click menu of a Fault in the 3D View. Fault Color Each named Fault is given a color on import. This color can be controlled by selecting the fault and edit its Fault color in the Property Editor.\nFault Result The default result mapping used on faults are to use the same as specified in Cell Result. If a different result mapping is wanted, enable the checkbox at Fault Result and select the result from the result selection dialog in the Property Editor. A second legend for the fault result is then added to the view.\nPlease note that the groups Fault Face Visibility and NNC Visibility are available below result selection.\nUseful NNC results are descrived in Derived Results\nToolbar Control Visualization mode and mesh lines can be controlled from the toolbar.\nFaults-Only visualization mode. When turned on, this option hides all the grid cells, and shows only the fault faces in the reservoir limited by the applied range and property filters. (Unless Show faults outside filters are turned on. See below.) Turns faces on and mesh off Turns on all faces, and shows mesh lines on faults only. This is a useful method to highlight the faults in your reservoir, because the faults stands out with black outlining. Shows labels for faults Faults Properties By clicking the Faults item in the Project Tree, the following options common to all the faults are displayed:\nFault Options Use Cell filters for Faults – When checked, use the currently active cell filters to filter the visible faults. Fault Labels Show labels – Displays one label per fault with the name defined in the *.DATA file Label color – Defines the label color Fault Face Visibility This group of options controls the visibility of the fault faces. Since they work together, and in some cases are overridden by the system, they can be a bit confusing.\nFirst of all, these options are only available in Faults-only visualization mode ( See Toolbar Control ). When not in Faults-Only mode, ResInsight overrides the options, and the controls are inactive.\nSecondly, the option you would normally want to adjust is Dynamic Face Selection ( See below ).\nShow defined faces – Displays the fault cell faces that are defined on the Eclipse input file (*.DATA) Show opposite faces – Displays the opposite fault cell faces from what is defined on the input file, based on IJK neighbors.\nThese two options should normally be left On. They are useful when investigating the exact faults information provided on the *.DATA file. If you need to use them, it is normally wise to set the Dynamic Face Selection to “Show Both”. Dynamic Face Selection – At one particular position on a fault there are usually two cells competing for your attention: The cell closer to you as the viewer, or the one further from you. When showing results, this becomes important because these two cell faces have different result property values, and thus color.\nThis option controls which of the two cell faces you actually can see: The one behind the fault, or the one in front of the fault. There is also an option of showing both, which will give you an undefined mixture, making it hard to be certain what you see.\nThis means that ResInsight turns on or off the faces based on your view position and this option to make sure that you always see the faces (and thus the result property) you request. NNC Visibility Show NNCs – Toggles whether to display the Non Neighbor Connections, or not. Hide NNC geometry if no NNC result is available – Automatically hides NNC geometry if no NNC results are available Info\rThe color of the NNC faces are set to be a bit lighter than their corresponding named fault, and can not be controlled directly.\nFault Export Faults can be exported to separate files in the *grdecl file format. This is useful for example if you need a list of the geometrically detected faults that has not been covered by entries in the eclipse FAULTS keyword.\nTo export some faults, select the faults you want to export in the Project Tree, and select the command Export Faults … from the right-click menu.\nYou are then prompted to select a destination folder. Each Fault is exported to a file named Faults_\u003cfault name\u003e_\u003ccase name\u003e.grdecl and stored in the selected folder.\nThe fault name of Undefined Grid Faults is simplified to UNDEF, while Undefined Grid Faults With Inactive is simplified to UNDEF_IA. All other faults keep their original name.",
    "description": "This section describes how Faults are detected and visualized. NNC’s are a part of the Faults visualization and are thus also mentioned in this section.\nRelated pages :\nAllan Diagrams\nDerived Results\nFault Detection ResInsight always scans the grids for geometrical faults when they are loaded. When two opposite cell faces of I, J, K neighbor cells does not match geometrically, they are tagged.",
    "tags": [],
    "title": "Faults",
    "uri": "/3d-main-window/faults/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "An RFT (Repeated Formation Tester) plot is a special well plot for comparing observed formation pressure and simulated formation pressure. The curves are plotted as pressure against true vertical depth (TVD) or measured depth (MD). Simulated pressure data is retrieved directly from the grid model or from the corresponding (*.rft) files, while observed pressure data are loaded from well log files (*.las).\nCreate New RFT Plot There are several ways to create new RFT Plots.\nFrom the Project Tree in the Plot Main Window Select right-click command New RFT Plot for Well Path node or RFT Plots node. From the Project Tree in the 3D Main Window Select right-click command New RFT plot for a simulation well. From a 3D view Right-click a simulation well select Well Plots -\u003e New RFT Plot. Create Multiple RFT Plots ResInsight can automate the creation of multiple plots based on an already exising RFT plot.\nDescription of the workflow:\ncreate a RFT plot for one well on the right-click menu of this plot, select Create Multiple RFT Plots a list of available wells is displayed, and the user can select the wells click OK, and the plots for selected wells are created Import Observed RFT Data Pressure Depth Data\nA custom file format for Pressure Depth Data is supported.\nLAS Pressure Data\nTo be able to plot observed pressure data for a well in an RFT plot, at least one well log file from that well (e.g. *.las) has to be imported to ResInsight. This file must contain a pressure column, which must have the name PRESSURE or PRES_FORM. If the well log file itself does not contain a TVD column (named TVDMSL), a well path file (See Well Trajectories) for the same well must also be imported to ResInsight.\nIf no TVD data for a well is found when the user tries to plot a curve, ResInsight will present a warning dialog to the user.\nProperty Editor The property editor lets the user select which curves to display in the RFT plot.\nWell Name Select the well to display in the plot. Wells postfixed by ’(Well Path)’ have an associated well trajectory loaded.\nSources After a well has been selected in the Well Name field, the relevant sources for that well will appear in the sources field. The sources are placed in one of three different groups:\nRFT File Cases – Simulation cases may have associated formation pressure data in *.rft file(s). If the simulation case contains such files, those are imported together with the simulation case (See the keyword WRFTPLT for more information). Grid Cases – The PRESSURE property in the 3D grid. Observed Cases – Observed data imported from well log files. When the user selects one or more sources, a selection of their time steps appears in the Time Steps field.\nTime Steps The Time Steps field contains the relevant time steps according to the source selection. Time steps are deemed to be relevant by the following rules:\nIf a single source or sources of the same type are selected, all available time steps in those sources are shown. If sources from two or tree types are selected, the time steps are filtered: The time steps matching the observed case(s) time steps. If no time steps from a case match the observed time step, the two adjacent ones are shown. The first time step from any grid case(s) (as initial pressure reference). If the Observed data isn’t selected, the RFT data serves as filter reference. Each time step is postfixed by an indication of which source type(s) the time step is belonging to. This indication is displayed as one or more letters within square brackets. Examples: [ O ], [ R G ].\nO – Time step has observed data R – Time step has RFT data G – Time step has Grid data More than one letter for one single time step, means that the time steps comes from multiple case types.\nZonation/Formation Names This property editor lets the user control the visibility of formations lines. This is what it looks like in the RFT plot context.\nPlease see the full documentation on the formations property editor for details about formations.\nNote\rWhen the formation names property editor is used in the context of RFT plots, the fields Trajectory and Simulation Well are hidden because those values are given by the RFT plot definition.\nLegend and Axis This property editor lets the user control visual properties for the legend and axis.\nTitle and Legends Show Title – Toggle on/off title in plot Show Legends – Toggle on/off legend in plot Legend Orientation – Vertical or horizontal X Axis Settings Logarithmic Scale – Toggle between linear and logarithmic Min – Set X axis minimum value Max – Set X axis maximum value Show Grid Lines – Enable grid lines in background in plot Depth Axis Type – Toggle between True Vertical Depth (MSL) or Measured Depth (MD) Unit – Min – Set depth axis minimum value Max – Set depth axis maximum value Show Grid Lines – Enable grid lines in background in plot",
    "description": "An RFT (Repeated Formation Tester) plot is a special well plot for comparing observed formation pressure and simulated formation pressure. The curves are plotted as pressure against true vertical depth (TVD) or measured depth (MD). Simulated pressure data is retrieved directly from the grid model or from the corresponding (*.rft) files, while observed pressure data are loaded from well log files (*.las).",
    "tags": [],
    "title": "RFT Plot",
    "uri": "/plot-window/rftplot/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "RFT Segment Data can be plotted as horizontal Well Log Plots. RFT data can be imported based on a summary case or a grid case.\nCreate RFT Segment Plot Open a summary case with RFT data\nAdditional data from WSEGLINK Some cases require data from WSEGLINK keyword. When importing summary data, ResInsight will automatically search for the related *.DATA file. The identified file can be seen or changed from the Property Editor.\nCreate Default Plot From the right-click menu of the RFT Case object , select Create RFT Segment Plot or Create RFT Multi Phase Segment Plot\nSelect the generated Well Log Plot. Adjust the data source to desired well or branch. These settings are also available from the toolbar above the plot. Useful options to adjust for a curve is color, line style and area fill.\nAdditional settings and adjustments General Select the plot, and use Data Source to change wells, dates and branch numbers If TVD depth is plotted, optionally invert the Y-axis when the track is selected Add more tracks with to the same plot, and use copy/paste of a track for fast duplication. Stacking can be used when plotting curves for multiple phases. Axis and legend settings Control if the depth axis should be visible for a single or all track from Axis Visibility. Use the Plot Title group to adjust the text of the title. Define a Template Text for full flexibility. Available variable names can be seen when hoovering over the Template Text label. Define where the location of curve legend using the Legend Position control. Related documents Well Log Plots",
    "description": "RFT Segment Data can be plotted as horizontal Well Log Plots. RFT data can be imported based on a summary case or a grid case.\nCreate RFT Segment Plot Open a summary case with RFT data\nAdditional data from WSEGLINK Some cases require data from WSEGLINK keyword. When importing summary data, ResInsight will automatically search for the related *.DATA file. The identified file can be seen or changed from the Property Editor.",
    "tags": [],
    "title": "RFT Segment Plot",
    "uri": "/plot-window/rftsegmentplot/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Allan Diagrams displays the overlap of formations and layers across fault faces.\nSeparate Fault Result The Allan Diagram is dispayed by selecting the Separate Fault Result in the project tree. See Faults for more details.\nProperty Editor Settings Binary Formation Allan One color for all NNC areas with same formation on across fault, and one color for NNC with different formations across fault Formation Allan Formation colors are used, and a mix of the two formation colors are displayed if we have different formations across fault Mouse interaction When clicking on an NNC area multiple times, the highlighted cell switched from the cell in front of the formation and behind the fault. The Result Info text is updated when the selected cell is changed.\nOther related results Other useful NNC results are descrived in Derived Results",
    "description": "Allan Diagrams displays the overlap of formations and layers across fault faces.\nSeparate Fault Result The Allan Diagram is dispayed by selecting the Separate Fault Result in the project tree. See Faults for more details.\nProperty Editor Settings Binary Formation Allan One color for all NNC areas with same formation on across fault, and one color for NNC with different formations across fault Formation Allan Formation colors are used, and a mix of the two formation colors are displayed if we have different formations across fault Mouse interaction When clicking on an NNC area multiple times, the highlighted cell switched from the cell in front of the formation and behind the fault. The Result Info text is updated when the selected cell is changed.",
    "tags": [],
    "title": "Allan Diagram",
    "uri": "/3d-main-window/allandiagrams/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "This section will describe how to use formations for different k-layers of a case, and how to use well picks/zonations for ranges of measured depths of a well path.\nFormations for k-layers Formation information can be utilized in ResInsight as cell colors, used in property filters and are displayed in the Result info panel when selecting single cells.\nTo use this functionality you will need to :\nImport one or more Formation Names file(s) Select the correct Formation Names file in the Case of interest Import of Formation Names Files Formation Names files can be imported by using the command: File-\u003eImport-\u003eImport Formation Names.\nSupported Formation Names files are:\nFormation Names description files (*.lyr) FMU Layer Zone Table (layer_zone_table.txt) To select the appropriate file type, use the button to the right of file name in the Import Formation Names dialog. The imported Formation Names files are then listed in the Project Tree in a folder named Formations.\nFormation Names description files (*.lyr) Formation Names description files (*.lyr) consist of a list of entries containing formation name, k-range, and optionally a formation color. Formation color can be given as a World Wide Web Consortium SVG color keyword name or a six-digit, three-byte hexadecimal number used in HTML, CSS, SVG, and other computing applications to represent the red, green and blue components of the color, c.f. example below:\n-- Any text as comment 'My First Formation Name' 4 - 12 red 'My Second Formation Name' 15 - 17 green 'Formation spanning 3 k-layers, i.e. 18,19 and 20' 3 blue 'Last Formation Name' 21 - 21 #FFFF00\rFMU Layer Zone Table (layer_zone_table.txt) The FMU Layer Zone Table (layer_zone_table.txt) contains two columns to correlate each grid k-layer with a formation name. Below is an example of a layer_zone_table.txt file:\n1 UpperReek 2 UpperReek 3 UpperReek 4 UpperReek 5 UpperReek 6 MidReek 7 MidReek 8 MidReek 9 MidReek 10 MidReek 11 LowerReek 12 LowerReek 13 LowerReek 14 LowerReek\rSelect the Formation File in a Case If only one formation file is imported, the formation will automatically be set in the active view’s case. If more than one formation file is imported at once, or if a case must change formation file, the formation file for a case can be set later on. This option is available in the Property Editor for a case. The formation is selected in the combo box for property Formation Names File.\nReload of formation data If the formation file is modified outside ResInsight, the formation data can be imported again by the right-click menu Formations-\u003eReload. This command will import formations for the selected formation files.\nViewing the Formation Information Formations in 3D View The formations can be visualized as a result property in Cell Results, Cell Edge Result, and Separate Fault Result. When selected, a special legend displaying formation names is activated.\nProperty Filter Based on Formations Formation names are available in Property Filters as Result Type Formation Names. This makes it easy to filter geometry based on formation specifications.\nSee Cell Filters for details.\nPicking in 3D View Picking on a cell being part of a formation will display the formation name in the Result Info windows, in addition to other pick info for the cell.\nAnnotations on Plots Formation can be used to annotate the following plot types:\nWell Log Plots RFT Plots PLT Plots For RFT and PLT Plots, Zonation/Formation Names can be found in the plot’s Property Editor. Tick “Show Formations” and choose the case with the desired formations.\nIn Well Log Plots and Well Allocation Plots, Zonation/Formation Names can be found in the Property Editor for a Track or Branch. In addition to choosing case, the path to show formations for must also be selected, as each track can have curves with data from more than one path.\nWell Picks Well Picks can be set for a single well path, defined on measured depths of the well path. Unlike formations for k-layers, formations for a well path can only be used to annotate plots. A well pick can be either a fluid or a formation.\nImport of Well Pick Files Well Pick files can be imported by using the command: File-\u003eImport-\u003eWell Data-\u003eImport Well Picks. The user is asked to select *.csv files for import.\nThe imported Well Pick files will be added to their associated well path, if a match on well name can be found. If not, new paths will be created, and they can all be found in Wells in the Project Tree. The file path of the formations can be found in a well path’s Property Editor.\nA Well Pick file is a csv-file, which uses semicolon to separate entries in a table. Below is an example of such a file:\nWell name; Column name; Unit name; Top MD; Base MD\rB-3H; FLUID; GAS;2203.2;2317.4\rB-3H; FLUID; OIL;2317.4;2459\rB-3H; STRAT; FANGST GP. ;2203.399902;2223.350098\rB-3H; STRAT; Ile Fm. ;2203.399902;2223.350098\rB-3H; STRAT; Ile Fm. 3 ;2203.401123;2219.26001\rB-3H; STRAT; Ile Fm. 2 ;2219.26001;2222.399902\rB-3H; STRAT; Ile Fm. 2.2 ;2219.26;2219.350098\rB-3H; STRAT; Ile Fm. 2.1 ;2219.350098;2222.399902\rB-3H; STRAT; Ile Fm. 1 ;2222.399902;2223.350098\rB-3H; STRAT; BAAT GP. ;2223.350098;2979.28125\rB-3H; STRAT; Ror Fm. ;2223.350098;2285.199951\rB-3H; STRAT; Ror Fm. 2 ;2223.350098;2246\rB-3H; STRAT; Ror Fm. 1 ;2246;2285.199951\rB-2H; FLUID; GAS;2144.4;2338.5\rB-2H; FLUID; OIL;2338.5;2440\rB-2H; STRAT; FANGST GP. ;2144.199951;2158.389893\rB-2H; STRAT; Ile Fm. ;2144.199951;2158.389893\rB-2H; STRAT; Ile Fm. 2 ;2144.201416;2156.197266\rB-2H; STRAT; Ile Fm. 1 ;2156.197266;2158.38501\rThe file must have the columns “Well name”, “Unit name” (i.e. formation name), “Top MD” and “Base MD” (i.e. measured depth) to be regarded as a Well Pick file. They can be listed in any order, and all other columns will be ignorded.\nThe three unit names OIL, GAS and WATER are interpreted as fluids. Other unit names with only capital letters are groups. A unit name without an index is simply a formation. Unit names with one number is a formation 1, unit names with one punctuation is a formation 2, two punctuations, formation 3 and so on. Indentions in column name will be ignored.\nViewing the Well Picks See Annotations on plots. Annotations are added to plots in the same way as for k-layered formations, but the source is different.\nIn the Property Editor, choose Well Path as Source, and all well paths with formations will be shown in the drop-down list below. All disjoint well picks for the chosen well path is shown on default. To reduce the number of annotations, the Well Pick Filter can be used.\nThe Well Pick Filter will show formations down to the specified level. If more there are more than one formation within 0.1m of an MD, only the lowermost formation is shown. Well picks interpreted as Fluids are only shown by ticking the Show Fluids mark.",
    "description": "This section will describe how to use formations for different k-layers of a case, and how to use well picks/zonations for ranges of measured depths of a well path.\nFormations for k-layers Formation information can be utilized in ResInsight as cell colors, used in property filters and are displayed in the Result info panel when selecting single cells.",
    "tags": [],
    "title": " Zonations/Formations",
    "uri": "/3d-main-window/formations/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Export",
    "content": "ResInsight can create contour maps based on different forms of aggregation of 3D Eclipse data onto a 2D Plane. Any 3D result value can be aggregated, in addition to specialised results, such as oil, gas and hydrocarbon columns. A Contour Map is a specialised 2D view with many of the same features as the 3D views, including property filters, range filters and display of faults and wells.\nExport of Contour Map Data To export a contour map, invoke one of the following options (c.f. figure above):\nSelect right-click command Export Contour Map to text in the graphics window showing a contour map. Select right-click command Export Contour Map to text for a contour map in the Project Tree This initiates the following dialog for export options:\nAs seen, the dialog facilitates the following options:\nSetting the file name for export. Export of local coordinates, i.e. coordinates measured from local origo defined in lower, left corner of contour map. Default is export of full UTM coordinates. Defining a text label to exclude undefined values. Default label is NaN. Exclude undefined values based on the given label. Export file format The file format for export of contour maps supports use of Python and numpy. For instance, an exported file may can be imported into numpy using the loadtxt() function.\nMetadata is included as comments in the beginning of the file. The character # as first character denotes a comment line.\nIf local coordinates are exported, the UTM coordinate offset is included as a comment in the header of the export file (c.f. example file below). To anonymize the data, the UTM coordinate offset may be removed from file.\nExample file:\n# case name : 1_R001_REEK-0 # sampling points : nx=90 ny=100 # time and date : 01.Jan 2000 # property name : Arithmetic Mean, PRESSURE # UTM offset : x=456256 y=5.92663e+06 x y value 5209.20099 254.10737 341.09308 5336.25467 254.10737 341.13252 5463.30835 254.10737 341.36091 5590.36204 254.10737 341.62615 5717.41572 254.10737 341.70246 5082.14731 381.16105 340.56455 5209.20099 381.16105 340.79087 5336.25467 381.16105 341.02580 5463.30835 381.16105 341.40061 5590.36204 381.16105 341.86177 5717.41572 381.16105 342.34527 ... ... ...\rPython interface for export of contour maps The ResInsight Python API allows the user to access all contour maps belonging to a project. A Python script for exporting contour maps to a text file is included as one of the examples of the ResInsight Python API.",
    "description": "ResInsight can create contour maps based on different forms of aggregation of 3D Eclipse data onto a 2D Plane. Any 3D result value can be aggregated, in addition to specialised results, such as oil, gas and hydrocarbon columns. A Contour Map is a specialised 2D view with many of the same features as the 3D views, including property filters, range filters and display of faults and wells.",
    "tags": [],
    "title": "Contour Map Export",
    "uri": "/export/contourmapexport/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "ResInsight allows the user to create a ensemble RFT plot similar to summary ensemble plots. The functionality also computes statistics, e.g. P10, P90, and mean. When possible, ResInsight avoids loading the grid when reading ensemble RFT data.\nCreate New Ensemble RFT Plot When a summary ensemble has been imported, observed FMU data can be imported via right-clicking Observed Data in the Plot Project Tree, and selecting Import Observed FMU Data.\nTo create ensemble RFT plot, right-click RFT Plots and select New RFT Plot.\nProperty Editor The property editor lets the user select which curves to display in the RFT plot.\nWell Name Select the well to display in the plot. Wells postfixed by ’(Well Path)’ have an associated well trajectory loaded.\nSources Subsequent to selecting a well in the Well Name field, the relevant sources for that well will appear in the Sources field. The sources for this particular case are:\nEnsembles with RFT Data – List of ensembles which contain RFT data with check-boxes to activate display. Observed FMU data – Observed data imported from a FMU run. When the user selects one or more sources, a selection of their time steps appears in the Time Steps field.\nTime Steps The Time Steps field contains the relevant time steps according to the source selection. Time steps are deemed to be relevant by the following rules:\nIf a single source or sources of the same type are selected, all available time steps in those sources are shown. If sources from two or tree types are selected, the time steps are filtered: The time steps matching the observed case(s) time steps. If no time steps from a case match the observed time step, the two adjacent ones are shown. The first time step from any grid case(s) (as initial pressure reference). If the Observed data isn’t selected, the RFT data serves as filter reference. Each time step is postfixed by letter(s) to indicate source type(s) of each time step. The source types are indicated in square brackets:\nO – Time step has Observed data E – Time step has Ensemble data R – Time step has RFT data G – Time step has Grid data More than one letter for one single time step, means that the time step comes from multiple case types.\nZonation/Formation Names The display of formations lines is controlled in the same manner as for RFT plots. Please see the full documentation of the formations property editor for details about formations.\nLegend and Axis Visual properties of legend and axes is controlled in the same manner as for RFT plots.\nColor by Ensemble Parameter One ensemble parameter is selected to control coloring. The ensemble parameter value for each case is used to pick a color in a color range. In this case a color legend appears.\nImport of Observed Ensemble RFT data from FMU Observed RFT data as part of a FMU run is presupposed to be located in a folder which contains the following four file types:\nlayer_zone_table.txt \u003cwell_name\u003e.obs \u003cwell_name\u003e.txt well_date_rft.txt The purpose and format of the data files is explained below.\nNote\rThe data file well_date_rft.txt is required. If missing, no Observed FMU data will be imported.\nCorrelation of grid and formations The file layer_zone_table.txt can be used to correlate each grid k-layer with a formation name. This file is identical for all cases in the same ensemble.\nExample file layer_zone_table.txt:\n1 UpperReek 2 UpperReek 3 UpperReek 4 UpperReek 5 UpperReek 6 MidReek 7 MidReek 8 MidReek 9 MidReek 10 MidReek 11 LowerReek 12 LowerReek 13 LowerReek 14 LowerReek\rObserved pressure and error For a given well name, the file \u003cwell_name\u003e.obs is a data file containing two columns to specify observed pressure and error. Column one contains observed pressure and column two contains error. The observation data is valid for one and only one layer/formation.\nExample file for well OP_1, i.e. OP_1.obs:\n303.000 3.000 304.000 3.000 305.000 3.000\rObserved pressure and error - multiple observations for a well If there are multiple observations for a well at different dates, the naming of the files include a measurement ID\nExample file well_date_rft.txt:\nR_A2 2018-03-01 1 R_A2 2019-03-01 2\rMeasurement ID is the last column. The corresponding observations files are named as follows, the measurement ID is appended to the well name.\nR_A2_1.obs R_A2_1.txt R_A2_2.obs R_A2_2.txt\rReservoir zone name For a given well name, the file \u003cwell_name\u003e.txt is a data file containing five columns that specify its correlation with reservoir zones. Each line of data must contain:\nUtmx: x-coordinate in UTM Utmy: y-coordinate in UTM Measured Depth relative to the Kelly Bushing (MDRKB) True Vertical Depth referenced to Mean Sea Level (TVDMSL) Reservoir zone name Example file for well OP_1, i.e. OP_1.txt:\n461288.719 5933415.000 1816.200 1611.692 UpperReek 461288.685 5933415.027 1824.560 1620.052 MidReek 461288.683 5933415.029 1840.000 1635.492 LowerReek\rWell measurements - date format 1 The data file well_date_rft.txt contains well measurements. The file contains four columns for each well measurement:\nWell Name Date in two digit form \u003cDD\u003e Month in two digit form \u003cMM\u003e Year in four digit form \u003cYYYY\u003e Measurement index There can be multiple measurement for each well.\nExample file well_date_rft.txt:\nOP_1 01 02 2000 1 OP_2 01 02 2000 1 OP_4 01 01 2001 1 WI_1 01 02 2000 1 WI_3 01 03 2001 1\rWell measurements - date format 2 The data file well_date_rft.txt contains well measurements. The file contains four columns for each well measurement:\nWell Name Date on the format \u003cYYYY-MM-DD\u003e Measurement index There can be multiple measurement for each well.\nExample file well_date_rft.txt:\nR_A2 2018-03-01 1 R_A2 2019-03-01 2 R_A6 2018-11-07 1 R_A6 2018-11-07 2 R_A6 2018-11-07 3",
    "description": "ResInsight allows the user to create a ensemble RFT plot similar to summary ensemble plots. The functionality also computes statistics, e.g. P10, P90, and mean. When possible, ResInsight avoids loading the grid when reading ensemble RFT data.\nCreate New Ensemble RFT Plot When a summary ensemble has been imported, observed FMU data can be imported via right-clicking Observed Data in the Plot Project Tree, and selecting Import Observed FMU Data.",
    "tags": [],
    "title": "Ensemble RFT Plot",
    "uri": "/plot-window/ensemblerftplot/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight is used in many different ways. This section will describe some selected workflows describing how to solve specific tasks.",
    "description": "ResInsight is used in many different ways. This section will describe some selected workflows describing how to solve specific tasks.",
    "tags": [],
    "title": "Workflows",
    "uri": "/workflows/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data",
    "content": "ResInsight computes several derived results. In this section we will explain what they are, and briefly how they are calculated.\nDerived Results for Eclipse Cases ResInsight calculates several derived cell properties that is made available as Static or Dynamic cell properties. The derived results listed at the bottom of the Static result properties, are shown below.\nTransmissibility Normalized by Area The transmissibility for cells and Non-Neighbor Connections (NNCs) are dependent on both cell properties and geometry. ResInsight normalizes TRANX, TRANY and TRANZ with the overlapping flow area for both neighbor cells and NNC-cells. The results are named riTRANXbyArea, riTRANYbyArea and riTRANZbyArea respectively.\nThe normalized transmissibilities make it easier to compare and check the flow capacity visually. This can be useful when history matching pressure differences across a fault.\nOverall Transmissibility Multiplier Transmissibility can be set or adjusted with multiple keywords in an Eclipse data deck. To visualize the adjustments made, ResInsight calculates a multiplicator for the overall change. First unadjusted transmissibilities for all neighbor cells and NNCs are evaluated based on geometry and permeabilities, similar to the NEWTRAN algorithm in Eclipse. For x- and y-directions, the NTG parameter is also included. The results are named riTRANX, riTRANY and riTRANZ respectively.\nThe TRANX, TRANY and TRANZ used in the simulation are divided by the ResInsight calculated transmissibilities and the resulting multiplicators are named riMULTX, riMULTY and riMULTZ respectively. The derived properties are listed under Static properties. The riMULT-properties are useful for quality checking consistence in user input for fault seal along a fault plane.\nClassification of Cells having NNCs The static result riNncCells use 1 to represent cells having a NNC and 0 for other cells.\nDirectional Combined Results Cell properties with names ending in I, J, K, X, Y, or Z, and an optional “+” or “-” are combined into derived results post-fixed with IJK, or XYZ depending on their origin. (Eg. the static cell properties MULTX, MULTY, MULTZ, and their negatives are combined into the result MULTXYZ, while the dynamic cell properties FLRGASI, FLRGASJ, FLRGASK are combined to FLRGASIJK).\nThese combined cell properties visualize the property as a color in all directions combined when selected in as a Cell Result and Separate Fault Result.\nThe face of a cell is then colored based on the value associated with that particular face. The Positive I-face of the cell gets the cell X/I-value, while the J-face gets the Y/J-value etc. The negative faces, however, get the value from the neighbor cell on that side. The negative I-face gets the X-value of the IJK-neighbor in negative I direction, and so on for the J- and K-faces.\nThe directional combined parameters available are:\nStatic Properties TRANXYZ (inluding NNCs) MULTXYZ riTRANXYZ (inluding NNCs) riMULTXYZ (inluding NNCs) riTRANXYZbyArea (inluding NNCs) Dynamic Properties FLRWATIJK (inluding NNCs) FLROILIJK (inluding NNCs) FLRGASIJK (inluding NNCs) Generated Octave generated results with same name but ending with I,J and K will also be combined into a \u003cname\u003eIJK cell property. Completion Type The dynamic cell property named Completion Type is calculated from the intersections between Completions and the grid cells. All grid cells intersected by a completion will be assigned a color based on the type of completion that intersects the cell.\nIf a cell is completed with multiple completions, the following priority is used : Fracture, Fishbones, and Perforation Interval.\nIdentification of Questionable NNCs In the process of normalizing transmissibility by the overlapping flow area, the NNCs in the model without any shared surface between two cells are identified. These NNCs are listed in the Faults/NNCs With No Common Area folder. These NNCs are questionable since flow normally is associated with a flow area.\nWater Flooded PV Water Flooded PV, also called Number of flooded porevolumes shows the amount of flow from a selected set of simulation tracers into a particular cell, compared to the cells mobile pore volume. A value of 1.0 will tell that the tracers accumulated flow into the cell has reached a volume equal to the mobile pore volume in the cell.\nMobile Pore Volume Mobile Pore Volume MOBPORV is computed based on the grid cell properties PORV, SWCR and MULTPV.\nIf MULTPV is missing, MULTPV is set to 1.0. If SWCR is missing, SWCR is et to 0.0.\n$ MOBPORV = MULTPV * PORV * (1.0 - SWCR) $\nCell Volume The static property riCellVolume contains the geometrical volume of a cell.",
    "description": "ResInsight computes several derived results. In this section we will explain what they are, and briefly how they are calculated.\nDerived Results for Eclipse Cases ResInsight calculates several derived cell properties that is made available as Static or Dynamic cell properties. The derived results listed at the bottom of the Static result properties, are shown below.\nTransmissibility Normalized by Area The transmissibility for cells and Non-Neighbor Connections (NNCs) are dependent on both cell properties and geometry. ResInsight normalizes TRANX, TRANY and TRANZ with the overlapping flow area for both neighbor cells and NNC-cells. The results are named riTRANXbyArea, riTRANYbyArea and riTRANZbyArea respectively.",
    "tags": [],
    "title": "Derived Results - Eclipse",
    "uri": "/calculated-data/derivedresults/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data",
    "content": "Fault Distance When planning new well paths, it can be usedful to see the distance from the current cell to the closest fault. This result is available in Static-\u003eFAULTDIST\nCalculation The distance is calculated based on the distance from each cell face center to the closest fault face center. One value is calculated per each cell. The calculation is started when the FAULTDIST result is selected.",
    "description": "Fault Distance When planning new well paths, it can be usedful to see the distance from the current cell to the closest fault. This result is available in Static-\u003eFAULTDIST\nCalculation The distance is calculated based on the distance from each cell face center to the closest fault face center. One value is calculated per each cell. The calculation is started when the FAULTDIST result is selected.",
    "tags": [],
    "title": "Fault Distance",
    "uri": "/calculated-data/faultdistance/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "A PLT (Production Log Tool) plot is a special well plot for comparing observed production (well flow rates) and simulated production. The curves are plotted as production against measured depth (MD). Simulated production data is retrieved directly from the grid model or from the corresponding (*.rft) files, while observed production data are loaded from well log files (*.las).\nCreate New PLT Plot There are several ways to create new PLT Plots\nFrom Project Tree in the Plot Main Window\nSelect right-click command New PLT Plot for the PLT Plots node. From the Project Tree in the Main Window\nSelect right-click command New PLT Plot for a Well Path node or a Simulation Well node that has an associated well path. From the 3D view\nRight-click a well path, or a simulation well that has an associated well path, and select Well Plots -\u003e New PLT Plot. Plot Observed Data To be able to plot observed production data for a well, a well log file containing that data must be imported. Production data in a well log file is expected to have column names:\nComponent Names Oil QOZT, QOIL, xxxx_QOIL Gas QOZT, QGAS, xxxx_QGAS Water QGZT, QWAT, xxxx_QWAT Total QTZT, QTOT, xxxx_QTOT To be able to plot simulated data for a well, the trajectory for that well have to be imported. If no well trajectory is found, ResInsight will present a warning dialog to the user.\nProperty Editor The property editor lets the user select which curves to display in the PLT plot.\nWell Name Select the well to display in the plot. Only observed well paths are displayed.\nSources After a well has been selected in the Well Name field, sources for that well should appear in the sources field. The sources are placed in one of three different groups:\nRFT File Cases – Simulation cases may have associated PLT data in *.rft file(s). If the simulation case contains such files, those are imported together with the simulation case (See the keyword WRFTPLT for details) Grid Cases – Simulation cases Observed Cases – Observed data imported from well log files and well path files When the user selects a source, time steps for that source appears in the Time Steps field.\nTime Steps The Time Steps field contains available time steps for the selected source(s). Some combinations of selected sources may display a filtered list of time steps instead of the union of all time steps for all selected sources. The policy is as follows:\nExclusively grid cases selected. All available time steps for the selected grid cases are displayed. Grid case(s) and observed data case selected. Time steps shown are: The first time step from the merged time step list from all grid cases. If no time steps from grid cases match the observed time step, display the two adjacent grid case time steps. Grid case(s) and RFT File case(s) selected. Same display logic as point 2. All types of cases selected. Same display logic as point 2 with the exception that RFT File case time steps are treated as grid time steps. Each time step is postfixed by an indication of which source type(s) the time step is belonging to. This indication is displayed as one or more letters within square brackets. Examples: [ O ], [ R G ].\nO – Time step belongs to observed data R – Time step belongs to RFT data G – Time step belongs to Grid data More than one letter for one single time step, means that the time step belongs to multiple case types.\nCurve Selection The curve selection group lets the user control which component(s) of the PLT data to display.\nStandard Volume – Production data at standard conditions (normal air pressure) Reservoir Volume – Production data at reservoir pressure (high air pressure) Oil – The oil production component Gas – The gas production component Water – The water production component Total – Total production Zonation/Formation Names This property editor lets the user control how formations are handled. This is what it looks like in the PLT plot context.\nPlease see the full documentation on the formations property editor for details.\nNote\rWhen the formation names property editor is used in the context of PLT plots, the fields Trajectory and Simulation Well are hidden because those values are given by the PLT plot definition.\nLegend and Axis This property editor lets the user control visual properties for the legend and axis.\nTitle and Legends Show Title – Toggle on/off title in plot Show Legends – Toggle on/off legend in plot Legend Orientation – Vertical or horizontal X Axis Settings Logarithmic Scale – Toggle between linear and logarithmic Min – Set X axis minimum value Max – Set X axis maximum value Show Grid Lines – Enable grid lines in background in plot Depth Axis Type – Toggle between True Vertical Depth (MSL) or Measured Depth (MD) Unit – Min – Set depth axis minimum value Max – Set depth axis maximum value Show Grid Lines – Enable grid lines in background in plot Plot The PLT plot displays groups of curves. A group consists of the components oil, gas and water. The curves within a group are stacked, the biggest component first.",
    "description": "A PLT (Production Log Tool) plot is a special well plot for comparing observed production (well flow rates) and simulated production. The curves are plotted as production against measured depth (MD). Simulated production data is retrieved directly from the grid model or from the corresponding (*.rft) files, while observed production data are loaded from well log files (*.las).",
    "tags": [],
    "title": "PLT Plot",
    "uri": "/plot-window/pltplot/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Grid Import Performance ResInsight now offers the option to import geometry exclusively for active cells. This feature is particularly beneficial for large grids where active cells constitute only a small fraction of the total, significantly reducing memory usage. This optimization ensures efficient handling of large models while maintaining full functionality for active cells.\nPreferences\nPerformance Hints\nQuick Access View For large projects with numerous views and grid models, navigating to specific information can sometimes be time-consuming. To address this, we’ve introduced a dedicated dialog called Quick Access. This dialog displays selected information from a view, making it easier to find what you need efficiently.\nBy default, the Quick Access dialog is located to the right of the 3D views.\nQuick Access\nCloud Services When accessing cloud services, an authentication token is saved to a file in your home folder. Occasionally, this token may become invalid, leading to a failure in establishing a cloud connection. If this occurs, you can resolve the issue by using the Delete Token button in the Preferences menu. Once the token is deleted, the authentication dialog will appear the next time you attempt to access cloud services, and a new token will be generated automatically.\nCloud Services\nCloud Services Preferences\nFramework Updates Qt has been upgraded from version 5 to version 6, bringing significant changes that impact several aspects of ResInsight, particularly its application engine. This update affects certain visual features of the user interface:\nThe font system has been modernized, which may result in subtle differences in font appearance and size on some systems. Default spacing between interface elements has been slightly increased to improve layout consistency. Additionally, the build instructions have been updated to align with Qt 6. Building with Qt 5 is no longer supported.\nBuild Instructions Ubuntu\nOther improvements Summary Table: Add user option to set time range on x-axis #11803 When highlighting a curve, also highlight other curves for the same realization #11771 Add a vertical line indicating the selected time in Result Plot #11768 Plot scaled and unscaled relperm curves in the same plot #11684 Fix visibility control of curve legends #11966 Fixed issues with P10 and P90 curves for some wells #11941 Python API Make all features for Completion Export Parameters and Multi Segment Well Options available in Python. If a field is available in Python, the Python code to access this field can be copied using the right-click menu on the label in the Property Editor https://github.com/OPM/ResInsight/issues/11923 See Release Notes on GitHub for further details and information.",
    "description": "Grid Import Performance ResInsight now offers the option to import geometry exclusively for active cells. This feature is particularly beneficial for large grids where active cells constitute only a small fraction of the total, significantly reducing memory usage. This optimization ensures efficient handling of large models while maintaining full functionality for active cells.\nPreferences\nPerformance Hints\nQuick Access View",
    "tags": [],
    "title": "What's New in 2024.12",
    "uri": "/releases/release-notes/releasenotes_2024_12/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Cloud Services ResInsight has now support for import of data from two cloud services, ensemble summary data from SUMO and well path geometry from OSDU.\nCloud Services\nEnsemble Grid Case An ensemble of grid cases can be imported into a grid case ensemble. Creating a view in this ensemble will allow the user to quickly switch between realizations using a drop down menu.\nImport Grid Case Ensemble\nChange Data Source for View\nIf you have identical IJK for all grid cases, consider using Grid Case Group\nImproved VFP Plot The import of VFP data is changed, and the management of VFP Plots is now improved.\nVFP Plots\nPFLOTRAN Faults Import of faults defined in a PFLOTRAN simulation is now supported.\nFaults from PFLOTRAN\nSummary Curves Rate or Accumulated summary curve type is automatically derived from the summary address. The type can also manually be set by the user, and is often useful for Observed Data.\nSummary Curve Type\nGrid Import Improvements Several improvements has been done related to the opm-common grid importer, especially simulation well data and LGR support. We recommend using opm-common for best performance.\nPerformance Hints\nDepth Surface A flat surface at a specified depth can be created, useful to indicate oil-water contact depth.\nDepth Surface\nOther improvements Make sure summary ensemble statistics is calculated correctly if the first realization is partial Fix issue with display of connection results in RFT Segment plots Make sure regression curves works Observed Data Fixed issue with the layout system causing very thin dialogs at left and right side of screen Improved Performance Hints Python API Increased timeout when launching a process. When many processes are started at the same time, the launch time can increase significantly By default use the port number assigned by GRPC Look for the path to ResInsight executable in an optional JSON file See Release Notes on GitHub for further details and information.",
    "description": "Cloud Services ResInsight has now support for import of data from two cloud services, ensemble summary data from SUMO and well path geometry from OSDU.\nCloud Services\nEnsemble Grid Case An ensemble of grid cases can be imported into a grid case ensemble. Creating a view in this ensemble will allow the user to quickly switch between realizations using a drop down menu.",
    "tags": [],
    "title": "What's New in 2024.09",
    "uri": "/releases/release-notes/releasenotes_2024_09/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Grid Calculations Grid Property Calculations perform better for multiple (large) grid models\nPolygons Polygons are now available as project objects, and a can be displayed in 3D views. A polygon can also be used to define an intersection and polygon cell filters. Polygons can be imported from a file, or created from a selection of cells in the 3D view. Polygons can be exported to file. A polygon cell filter can now be configured to use a polyline to define intersected cells in addition to a closed polygon. Performance Tools and Improvements When working with multiple large grid models, it is possible to run into low memory issues. The memory consumption of ResInsight can be monitored using the new Memory Report Dialog . This will display the consumed memory for all cases in the project. Avoid allocation of formations data if no formations are present Added support for export of application log messages to file in addition to the Messages Window. Other improvements Wrong unit conversion for field units made Well Allocation Plot unreadable GitHub issue Improved plot names and ordering of Flow Diagnostics Plots Improve curve legend names for calculated curves Improve MSW and short valve well visualization GitHub issue Fix windows tiling issue Python API Added completion export parameters and multi segment well options GitHub issue See Release Notes on GitHub for further details and information.",
    "description": "Grid Calculations Grid Property Calculations perform better for multiple (large) grid models\nPolygons Polygons are now available as project objects, and a can be displayed in 3D views. A polygon can also be used to define an intersection and polygon cell filters. Polygons can be imported from a file, or created from a selection of cells in the 3D view. Polygons can be exported to file. A polygon cell filter can now be configured to use a polyline to define intersected cells in addition to a closed polygon. Performance Tools and Improvements When working with multiple large grid models, it is possible to run into low memory issues. The memory consumption of ResInsight can be monitored using the new Memory Report Dialog . This will display the consumed memory for all cases in the project.",
    "tags": [],
    "title": "What's New in 2024.03",
    "uri": "/releases/release-notes/releasenotes_2024_03/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Bugs fixed See Release Notes 2024.03.1\nSee Release Notes on GitHub for further details and information.",
    "description": "Bugs fixed See Release Notes 2024.03.1\nSee Release Notes on GitHub for further details and information.",
    "tags": [],
    "title": "What's New in 2024.03.1",
    "uri": "/releases/release-notes/releasenotes_2024_03_1/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Grid Calculations Grid Property Calculations can now be applied to multiple grid cases. A grid calculation can be used as data source for Grid Case Statistics. The data source for statistics computations can either be a cell property or a grid calculation expression. Time step selection is added to the Grid Case Statistics settings to reduce computation demand. Expressions can be stored to a file and loaded from a file. This makes it possible to reuse expressions in multiple projects. Aggregated Grid Calculations When using a aggregation expression like sum the resulting value will be available as a cell result (the single value is duplicated and displayed for all cells used in the calculation). If the calculation is applied to multiple grids, the aggregated value for each realization will be displayed in the Messages dialog. For each time step, the statistical values are also computed and displayed as text.\nAggregation of Grid Cell Values Example\nSummary Improvements The summary plot editor has been reworked to make it easier to use and to make it more consistent with the generated plots. The preview plot title is removed, and preview curves are using multiple axes similar to other plots. Space between curve icon and text in legend is increased to make it easier to read Fixed missing curve legend when clicking on curves (Happens on some Linux distributions) Added flag to optionally distribute a summary calculation to all cases Summary expressions can be stored to a file and loaded from a file. This makes it possible to reuse expressions in multiple projects. Automation of RFT PLots Multiple RFT plots can now be created using the Create Multiple RFT Plots menu item. The operation will create one plot for each RFT well.\nOther improvements Fixed a crash issue when using the summary toolbar Fixed a crash when toggling on Well Allocation Over Time plot Regression Analysis: Fixed crash after modifying the expression Completion export: Exclude COMPDAT for deactivated laterals See Release Notes on GitHub for further details and information.",
    "description": "Grid Calculations Grid Property Calculations can now be applied to multiple grid cases. A grid calculation can be used as data source for Grid Case Statistics. The data source for statistics computations can either be a cell property or a grid calculation expression. Time step selection is added to the Grid Case Statistics settings to reduce computation demand. Expressions can be stored to a file and loaded from a file. This makes it possible to reuse expressions in multiple projects. Aggregated Grid Calculations When using a aggregation expression like sum the resulting value will be available as a cell result (the single value is duplicated and displayed for all cells used in the calculation). If the calculation is applied to multiple grids, the aggregated value for each realization will be displayed in the Messages dialog. For each time step, the statistical values are also computed and displayed as text.",
    "tags": [],
    "title": "What's New in 2023.12",
    "uri": "/releases/release-notes/releasenotes_2023_12/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "A Vertical Flow Performance Plot (VFP Plot) shows the relationship between bottom hole well conditions and wellhead pressure describing a well’s ability to lift fluids to the surface. ResInsight can display both production and injection VFP plots:\nProduction VFP Plots show the outflow or downstream pressure based on the inlet or upstream pressure and the phases flowing. For a well, this means the table relates the flowing bottom-hole pressure (BHP) to the well’s tubing head pressure (THP) based on the oil, gas and water rates (and any artificial lift quantities like gas lift gas), or phases ratios, flowing up the wellbore. The data is read from files containing the VFPPROD Eclipse keyword.\nInjection VFP Plots show the outflow or downstream pressure based on the inlet or upstream pressure and the phases being injected into the system. For a well, this means the table relates the flowing bottom-hole pressure (BHP) to the well’s tubing head pressure (THP) based on the oil, gas or water injection rates. The data can be read from files containing the VFPINJ Eclipse keyword.\nImporting VFP data VFP Plot data can be imported by right-clicking the VFP Data item in Data Sources to select VFP data from either text files (.ecl or .vfp) or from simulator files (.data). Multi-selection of files is possible.\nAlternatively, VFP Plot data can be imported by right-clicking the VFP Plots item in Plot Project Tree.\nCreating VFP Plots Having imported VFP data, Data Sources lists all available VFP table numbers (c.f. VFPTAB keyword in Eclipse). A VFP plot can be created by right-clicking select VFP table entries.\nPlot data can be exported by right-clicking a VFP plot and selecting Show Plot Data.\nList of VFP Plots and settings The VFP Plots item in Plot Project Tree lists existing VFP plots.\nAvailable controls for each VFP plot are:\nX-Axis and Y-Axis: controls title, layout, fonts, and values of X- and Y-axes, respectively.\nCurve Colors: When curves are plotted, the curve color is taken from the depicted list of colors. The curve colors can be changed by the user.\nMost plot mouse interactions are available to VFP plots, c.f. Summary Plots. Notably, interactive value tracking and zoom is available and double-clicking a VFP plot resets zoom.\nProperty Editor Production VFP Plot Property Editor The Production VFP Plot Property Editor allows the following essential settings:\nConfiguration\n– Curve Matching Type: Defines curve matching, e.g. in case Table A: THP 200, 250, 300, 400 and Table B: THP 210, 300, 450.\n– Curve Value Options: Defines if the options in the currently selected Family variable is defined by the Main VFP table, or a union of family values from all selected tables.\n– Interpolated Variable: Y-axis variable.\n– Primary Variable: X-axis variable.\n– Family Variable: Variable for grouping of properties. Available values for Family Variable may differ if multiple tables are selected.\nTable Details\n– Table Number: The table number, c.f. VFPTAB keyword of Eclipse.\n– Reference Depth: The reference depth used to generate the table, i.e. VFPREF keyword of Eclipse.\n– Flowing Phase: The flowing phase in the system, i.e. FLO keyword of Eclipse.\n– Flowing Water Fraction: Corresponds to the WFR keyword of Eclipse.\n– Flowing Gas Fraction: Corresponds to the GFR keyword of Eclipse.\nComparison Tables: Enables plots for comparison with other VFP production table numbers.\nSelection Details: Check-boxes for selection of numeric values per variable.\nInjection VFP Plot Property Editor Referring to the detailing above, the injection VFP Plot Property Editor allows the following groups of settings:\nConfiguration\nTable Details\nComparison Tables",
    "description": "A Vertical Flow Performance Plot (VFP Plot) shows the relationship between bottom hole well conditions and wellhead pressure describing a well’s ability to lift fluids to the surface. ResInsight can display both production and injection VFP plots:\nProduction VFP Plots show the outflow or downstream pressure based on the inlet or upstream pressure and the phases flowing. For a well, this means the table relates the flowing bottom-hole pressure (BHP) to the well’s tubing head pressure (THP) based on the oil, gas and water rates (and any artificial lift quantities like gas lift gas), or phases ratios, flowing up the wellbore. The data is read from files containing the VFPPROD Eclipse keyword.",
    "tags": [],
    "title": "VFP Plot",
    "uri": "/plot-window/vfpplot/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Seismic View When working with seismic data, it is no longer required to have a grid model open. Import a seismic cube and surfaces, add some well paths and interact with seismic data.\nSeismic View\nSeismic Data\nSeismic Sections\nSummary Cross Plot Curves Summary Cross Plot curves are now easily available as part of a summary plot. Cross plot of ensemble curves is now supported, and Regression Curves can be created on both single cross plot curves and ensemble statistics curves.\nRegression Analysis for Grid Cross Plots Grid Cross Plots have now support for display of regression curves.\nPerformance improvements Huge performance improvements for summary cases with many objects (wells, groups, regions, …) Using the Polygon Cell Filter is now performing much better Stacking of Curves Fixed a crash when stacking was enabled Make sure all curves are visible when stacking is changed Improve performance when selecting multiple curves and toggle stacking state of all curves in one operation Other improvements Valve Import is now supported from Completor and Eclipse schedule files. Add text export using Show Plot Data for Analysis Plots and Correlation Plots. Text labels can be visualized on surface intersection lines Ensemble RFT plots are improved to handle horizontal wells by using 3D grid model data Avoid setting curve color to full white when highlighting a curve Make sure summary data type Network is available in summary data source Duplicate a well path to a user-defined well path that can be manipulated - Well Path Duplication See Release Notes on GitHub for further details and information.",
    "description": "Seismic View When working with seismic data, it is no longer required to have a grid model open. Import a seismic cube and surfaces, add some well paths and interact with seismic data.\nSeismic View\nSeismic Data\nSeismic Sections\nSummary Cross Plot Curves Summary Cross Plot curves are now easily available as part of a summary plot. Cross plot of ensemble curves is now supported, and Regression Curves can be created on both single cross plot curves and ensemble statistics curves.",
    "tags": [],
    "title": "What's New in 2023.10",
    "uri": "/releases/release-notes/releasenotes_2023_10/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Seismic Data ResInsight supports the following seismic file formats:\nSEGY: file format developed by the Society of Exploration Geophysicists for storing geophysical data VDS: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenVDS ZGY: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenZGY Seismic Data\nSeismic Sections\nSummary Table Summary Tables are a display of curve data based on Eclipse Summary Data as a color map in table format. It shows summary data of vectors for the selectable categories: Well, Group or Region.\nSummary tables are displayed with the summary vectors on each row, and time step values according to selected Date Resampling in each column - as shown with resampling Year in the screenshot above.\nSummary Tables\nProducer/Injector Connectivity Table Producer/Injector Connectivity Tables is a display of Flow Diagnostics Data as a color map in table format. The table either shows flow rate data for a single time step, or accumulated flow volume data over a range of time steps.\nCell Filters for Faults and Intersections Intersections and faults can now be visually filtered by using cell filters, and can be useful if faults and intersections obscure other interesting parts of the model. The filtering using cell filters is by default activated.\nIntersection Filters\nFault Filters\nRegression Analysis and Decline Curve Analysis Decline Curve Analysis\nRegression Analysis\nInteger Cell Results Integer Cell Results can now be visualized using Integer Color Legends and use custom color names that can be displayed in the 3D view.\nImproved Visualisation of Ensemble Curves The visual appearance of ensemble curves has been improved. Ensemble curves are displayed using a brighter color than the statistics curves.\nA color selection dialog can be opened by clicking on the color icon in the Project Tree. This feature is also supported for single summary curves. Other improvements Create a new well based on an existing well path Improve renaming of summary and ensemble models Show Python version in About Dialog Full screen mode to maximize screen space for 3D view Fault distance calculations performs faster In some models, the size of well targets was to small to work with. A scaling factor for Well Targets is now available. See Release Notes on GitHub for further details and information.",
    "description": "Seismic Data ResInsight supports the following seismic file formats:\nSEGY: file format developed by the Society of Exploration Geophysicists for storing geophysical data VDS: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenVDS ZGY: file format for fast random access to multi-dimensional volumetric data as supported by OSDU OpenZGY Seismic Data",
    "tags": [],
    "title": "What's New in 2023.06",
    "uri": "/releases/release-notes/releasenotes_2023_06/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Calculator Improvements A calculated summary vector is now by default available for all wells, all cases and all ensembles.\n[Summary Calculator] [Calculator Expressions] [Grid Calculator]\nRadial Grids Import of radial grids including local grid refinement(LGR) are now supported. Using I and J range filters will filter the grid case based on angle and radius (Theta and R).\nMulti Segment Well Improvements Multi Segmented Wells - MSW is updated with new features and improved visualization\nFixes wrong well geometry for some cases Added optional visualization of valves Well Allocation Over Time Use Well Allocation Over Time to see the allocation over multiple restart time steps.\nDepth Plot The [Depth Plot] can be used to display values for all K-cells for one or multiple selected IJ cells.\nSummary Plot Improvements Make sure on/off state for ensemble statistics is stable during source stepping Custom time axis tick marks [Custom Time Axis Properties] Show correct group name for group vectors Blank space around legend items has been reduced, makes it possible to show legends on less screen space Fixed issue for import of simulations for large time span into future (after year 2262) Default name for summary vector is now a descriptive text (Oil Production instead of FOPT) The settings for curve names can be controlled from [Curve Properties] Improved RFT Plotting [Pressure Depth Data] can be imported from a custom file format. More flexible RFT plotting; it is now possible to combine ensemble RFT data with single RFT curves and other observed curves. Other improvements Fixed parsing of GRDECL files if a comment is added on the same line after a keyword end character ‘/’ Fixed freeze during import of grid model (Progress bar freezes at 28%) New button next to file path to quickly copy text to clipboard Added more scaling factors to 3D view, and support for custom scale value in Preferences GRDECL export: Added option to export NOECHO and ECHO to generated text file CTRL-E as shortcut to open [Summary Plot Editor] Added slider to quickly switch between time step Improved user interface for range filters When clicking on a cell: Show center coordinates and corner coordinates [Result Info] See Release Notes on GitHub for further details and information.",
    "description": "Calculator Improvements A calculated summary vector is now by default available for all wells, all cases and all ensembles.\n[Summary Calculator] [Calculator Expressions] [Grid Calculator]\nRadial Grids Import of radial grids including local grid refinement(LGR) are now supported. Using I and J range filters will filter the grid case based on angle and radius (Theta and R).",
    "tags": [],
    "title": "What's New in 2023.03",
    "uri": "/releases/release-notes/releasenotes_2023_03/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Releases \u003e Release Notes",
    "content": "Summary Plotting Summary Plotting is updated with new features and improved workflows:\nImproved logarithmic legend and default ranges Visual appearance of curves is now stable when doing Source Stepping Curve name and plot name improvements Change Data Source by Clicking in 3D The data source for multiple plots can be updated by clicking on a well path in 3D. This feature can be useful for large fields with many wells and you want to investigate a small subset of wells.\nSource Stepping\nLinked Views Improvements It is now possible to get the result property values from all linked views when left-clicking on a cell in a view. Text is displayed in Result Info, and values from other properties can also be appended. Property filters can now be linked between views, and will also work between multiple cases.\nLinked Views\nCalculator Improvements The grid calculator and summary curve calculator is updated with more help and improved usability. The grid property calculations will now always calculate values for active cells and do nothing for other inactive cells.\nGrid Calculator\nSummary Calculator\nCalculator Expressions\nBreaking changes for user defined well paths The calculation of the geometry for a user defined well path had some defects. These issues are now fixed, and can affect the generated geometry of a user-defined well path. If the ResInsight project file was stored with a version before 2023.01, loading the project in version 2023.01 and later can potentially generate a slightly different well path geometry from the target at sea level to the first user-defined well target (the location of user-defined well targets are unchanged). The location of perforation intervals and completions are specified by measured depth, and could be shifted to a different location.\nThanks to https://github.com/EdmundStephens for reporting this issue.\nUser defined well paths\nDisplay of RFT segment curves RFT Segment Data can be plotted as horizontal Well Log Plots. This feature is now improved with more tracks and improved visual quality.\nRFT Segment plots\nImport of ROFF files (Preview) ROFF files with properties can be imported, both in ASCII and binary form. Grid geometry and properties per cell can be imported.\nROFF grid models\nOther improvements Wrong area for scaled fractures\nImproved Window Tiling\nSee Release Notes on GitHub for further details and information.",
    "description": "Summary Plotting Summary Plotting is updated with new features and improved workflows:\nImproved logarithmic legend and default ranges Visual appearance of curves is now stable when doing Source Stepping Curve name and plot name improvements Change Data Source by Clicking in 3D The data source for multiple plots can be updated by clicking on a well path in 3D. This feature can be useful for large fields with many wells and you want to investigate a small subset of wells.",
    "tags": [],
    "title": "What's New in 2023.01",
    "uri": "/releases/release-notes/releasenotes_2023_01/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "When clicking on cells in 3D, all values along the IJ column of the selected cells can be displayed in a depth plot. This can be combined with a Result Plot displaying the change for selected cells over time.\nResult Inspection",
    "description": "When clicking on cells in 3D, all values along the IJ column of the selected cells can be displayed in a depth plot. This can be combined with a Result Plot displaying the change for selected cells over time.\nResult Inspection",
    "tags": [],
    "title": "Depth Plot",
    "uri": "/3d-main-window/depthplot/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data",
    "content": "ResInsight computes several derived results. In this section we will explain what they are, and briefly how they are calculated.\nDerived Geomechanical results ResInsight calculates several of the presented geomechanical results based on the native results present in the odb-files.\nRelative Results (Time Lapse Results) ResInsight can calculate and display relative results, sometimes also referred to as Time Lapse results. When enabled, every result variable is calculated as:\n$Value_{[t-b]} = Value_{[t]} - Value_{[b]}$\nwhere:\n$b$ is the base time step, $t$ is the current time step Select the appropriate Base Time Step option in the Difference Options group to enable the time lapse result.\nNote: Relative Results calculated based on Gamma values and Stress Anisotropy are calculated slightly differently:\nGamma:\n$Gamma_{i[t-b]} = \\frac{ST_{i[t]} - ST_{i[b]}}{ POR_{[t]} - POR_{[b]} }$\nStress Anisotropy:\n$SA_{ij[t-b]} = 2 * \\frac{(ST_{i[t]} - ST_{i[b]}) - (ST_{j[t]} - ST_{j[b]})}{(ST_{i[t]} - ST_{i[b]}) + (ST_{j[t]} - ST_{j[b]})}$\nDerived Result Fields The calculated result fields are:\nNodal COMPACTION (Magnitude of compression) Element Nodal and Integration Points ST (Total Stress) All tensor components Principals, with directions ($S_iinc, S_iazi$) STM (Mean total stress) Q (Deviatoric stress) Gamma (Stress path) SE (Effective Stress) All tensor components Principals, with directions SEM (Mean effective stress) SFI FOS DSM E (Strain) All tensor components EV (Volumetric strain) ED (Deviatoric strain) Element Nodal On Face Plane Pinc (Face inclination angle) Pazi (Face azimuth angle) Transformed Total and Effective Stress SN (Stress component normal to face) TP (Total in-plane shear) TPinc (Direction of TP) TPH ( Horizontal in-plane shear component ) TPQV ( Quasi vertical in-plane shear component ) FAULTMOB PCRIT Definitions of Derived Results In this text the label Sa and Ea will be used to denote the unchanged stress and strain tensor respectively from the odb file.\nComponents with one subscript denotes the principal values 1, 2, and 3 which refers to the maximum, middle, and minimum principals respectively.\nComponents with two subscripts however, refers to the global directions 1, 2, and 3 which corresponds to X, Y, and Z and thus also easting, northing, and depth.\nInclination is measured from the downwards direction Azimuth is measured from the Northing (Y) Axis in Clockwise direction looking down. Case Constants Two constants can be assigned to a Geomechanical case:\nCohesion Friction angle In the following they are denoted s0 and fa respectively. Some of the derived results use these constants, that can be changed in the property panel of the Case.\nCOMPACTION Compaction is the difference in vertical displacement (U3) between a grid node and a specified reference K layer. The reference K layer is specified in the property editor.\nFor each node n in the grid, a node nref in the reference K layer is found by vertical intersection from the node n.\n$ If (Depth_n \u003c= Depth_{nref}) $\n$ \\space \\space COMPACTION_n = -(U3_n - U3_{nref})$\n$ else $\n$\\space \\space COMPACTION_n = -(U3_{nref} - U3_n )$\nST - Total Stress $ST_{ii} = -Sa_{ii} + POR (i= 1,2,3)$\nWe use a value of $POR=0.0$ where it is not defined.\n$ST_{ij} = -Sa_{ij} (i,j = 1,2,3 \\text{ and i $\\ne$ j})$\n$Sa_{ii}$ and $Sa_{ij}$ are the stresses calculated by Abaqus.\n$ST_i = \\text{Principal value i of ST}$\nSTM - Total Mean Stress $STM = \\frac{ST_{11} + ST_{22} + ST_{33}}{3} $\nQ - Deviatoric Stress $Q = \\sqrt {\\frac{3}{2} * ((ST_1 - STM)^2 + (ST_2 - STM)^2 + (ST_3 - STM)^2 }$\nDPN - Shear Slip Indicator Excess pore pressure parameter is defined as\n$DPN = \\frac{P_p - P_0} { \\sigma_v - P_0 }$\nWhere:\n$P_0$ is hydrostatic pore pressure, $P_p$ is pore pressure (at the time of the incident) and $\\sigma_v$ total vertical stress ($ ST_{33} $). Hydrostatic pore pressure is\n$ P_0 = \\rho_w * TVDMSL * g $\nWhere:\n$\\rho_w$ is (average) density of formation water (default = 1.03), TVDMSL is true vertical depth mean sea level and $g$ is gravity. Gamma - Stress Path $Gamma_{ii} = \\frac{ST_{ii}} {POR} (i= 1,2,3) $\n$Gamma_{i} = \\frac{ST_{i}} {POR} $\nIn these calculations we set Gamma to undefined if abs(POR) \u003e 0.01 MPa.\nSE - Effective Stress $SE_{ij} = -Sa_{ij} (i,j = 1,2,3 \\text{ where POR is defined})$\nwhere $Sa_{ij}$ is the stress calculated by Abaqus.\n$SE_i = \\text{Principal value i of SE} $\nSEM - Effective Mean Stress $SEM = \\frac{SE_{11} + SE_{22} + SE_{33}} {3} $\nSA - Stress Anisotropy $SA_{ij} = 2 \\frac{ST_{i} - ST_{j}}{ ST_{i} + ST_{j}} (i,j = 1,2,3 \\text{ and i $\\lt$ j})$\nThe same expressions are available for effective stresses (where SE replaces ST in the equation above).\nSFI $$SFI = \\frac{\\frac{S0}{tan(fa)} + 0.5 * (SE_1 + SE_3) * sin(fa)} {0.5*(SE_1-SE_3)} $$\nDSM $DSM = \\frac{tan(\\rho)} {tan(fa)} $\nwhere\n$$ \\rho = 2 * (arctan (\\sqrt \\frac{ SE_1 + a} {SE_3 + a}) \\space – \\frac {\\pi} {4}) $$ $$ a = \\frac {s0} {tan(fa)} $$\nFOS $FOS = \\frac{1}{DSM}$\nE - Strain $E_{ij} = -Ea_{ij}$\nEV - Volumetric Strain $EV = E_{11} + E_{22} + E_{33} $\nED - Deviatoric Strain $ED = 2*\\frac {E1-E3} {3} $\nElement Nodal On Face For each face displayed, (might be an element face or an intersection/intersection box face), a coordinate system is established such that:\nEz is normal to the face, named N - Normal Ex is horizontal and in the plane of the face, named H - Horizontal Ey is in the plane pointing upwards, named QV - Quasi Vertical The stress tensors in that particular face are then transformed to that coordinate system. The following quantities are derived from the transformed tensor named TS in the following:\nSN - Stress component Normal to face $SN = TS_{33}$\nTPH - Horizontal in-plane shear component $TPH = TS_{31} = TS_{ZX} $\nTNQV - Horizontal in-plane shear component $TPQV = TS_{32} = TS_{ZY}$\nTP - Total in-plane shear $TP = \\sqrt {(TPH^2 + TPQV^2)} $\nTPinc - Direction of TP Angle of the total in-plane shear relative to the Quasi Vertical direction\n$TPinc = acos (\\frac {TPQV} {TP}) $\nFAULTMOB $FAULTMOB = \\frac{TP}{tan(frictionAngle) * (TS_{ZZ} + \\frac{cohesion}{tan(frictionAngle)} )}$\nPCRIT $PCRIT = TS_{ZZ} - \\frac{TP}{tan(frictionAngle)} $\nPinc and Pazi - Face Inclination and Azimuth These are the directional angles of the face-normal itself.\nPore Compressibility Pore Compressibility Pore compressibility between a reference state and the current stress state is defined as:\n$ C_{p} = -\\frac{ \\alpha \\Delta\\epsilon_{vol}}{ \\Delta P_p \\phi_0} + \\frac{1}{K_s} ( \\frac{ \\alpha } { \\phi_0 } - 1) $\nWhere:\n$ \\alpha $ is the Biot coefficient, $ \\Delta\\epsilon_{vol} $ is volumetric strain change (EV in ResInsight) between curret state and reference state, $ \\phi_0 $ is porosity on the Geostatic step, $ \\Delta P_p $ is change in pore pressure between current state and reference state, $ K_s $ bulk modulus for the solid material (grain). The Biot porelastic coefficient ($\\alpha$) defines the compressibility of sand grains: $\\alpha = 1.0$ for incompressible grains, and $\\alpha \u003c 1.0$ for compressible grains. $\\alpha$ is not used for the initial (Geostatic) time step. The default value is 1.0, but values per element can be imported as an element property table.\nThe bulk modulus for solid material is defined as:\n$ K_s = \\frac{ K_{fr} }{ 1 - \\alpha}, K_{fr} = \\frac{ E }{ 3(1-2\\nu)} $\nWhere:\n$ E $ is the elastic modulus (Young’s modulus) from element property table MODULUS. $ \\nu $ is Poisson’s ratio imported from element property table RATIO. Vertical Compressibility $ C_{v} = - \\frac{ \\Delta\\epsilon_{\\nu}}{ \\alpha \\Delta P_p } $\n$ \\Delta\\epsilon_\\nu $ is the vertical strain change between current state and reference state (E33 in ResInsight).\nVertical Compressibility Ratio $ C_{vr} = \\frac{ C_v E(1-\\nu) } { (1+\\nu) ( 1 - 2\\nu) } $\nVertical Compression Ratio is the ratio between the real vertical compression and the compression in a uniaxial strain case. All parameters are described above.\nPorosity and Permeability Porosity Porosity change is defined as either total change in porosity between initial (geostatic) state and current state, or change in porosity between a reference state and the current state $ \\Delta\\phi $. The latter is given as\n$ \\Delta\\phi = \\phi_0(C_p \\Delta P_p + \\Delta\\epsilon_{vol}) $\nHere, $\\Delta\\phi_0$ is found from this equation with the reference state being the initial state (geostatic). The current porosity is then given as\n$ \\phi = \\phi_0 + \\Delta\\phi_0 $\nwith $ \\phi_0 $ being the porosity at the initial state, $\\Delta\\phi_0$ is porosity change between initial (geostatic) state current, $C_p$ is pore compressibility (between reference and current state), $\\Delta P_p$ is change in pore pressure and $\\Delta\\epsilon_{vol}$ is volumetric strain change.\nInitial Porosity Porosity at the initial state:\n$ \\phi_0 = \\frac{VOIDR} {1 + VOIDR} $\nWhere:\nVOIDR is void ratio from Abaqus. Permeability An expression for permeability is taken from Petunin (2011).\n$ k = k_0( \\frac{\\phi}{\\phi_0} )^A $\nWhere:\n$k_0$ is the permeability at the initial state (unit: mD), $\\phi$ is porosity at current state, $\\phi_0$ is initial porosity, $A$ is a constant Mud Weight Window Mud Weight Window (MWW) represents the difference between the minimum and the maximum possible mud weight between specific formation layers representing top and base of a fictitious well section.\nTo find MWW a two step procedure is needed:\nfirst find the limits per element, determine the MWW for each element based on the vertical column. Finding Upper and Lower Mud Weight Limit The upper mud weight limit (UMWL) and lower mud weight limit (LMWL) is found for each element intersected by the fictitious well. The UMWL is either the fracture gradient (FG) or minimum horizontal stress (SHmin) for both sand and shale. The LMWL is defined as the maximum of shear fracture gradient (SFG) and/or pore pressure in shale, and as pore pressure in sand.\nThe calculations for fracture gradient and shear fracture gradient, and the needed input, are described in detail in Well Bore Stability Plots.\nMud Weight Window Thereafter, the combined use of mud weight limits for all elements between the top and base (for a given IJ) determines the MWW parameters as will be further described below.\nA reference element index ($K_{ref}$) represents the base or the top of the fictitious well. Then for a set of elements with i = I, j = J and k = K to $K_{ref}$ the maximum LWML and the minimum UWML must be found from these element values. Then the difference between the two defines the MWW parameter.\nThus for a vertical stack of elements $element_{ijk} = K \\to K_{ref}$, $MWW_{ijk}$ is given as\n$ MWW_{ijk} = maximum(LMWL) - minimum(UMWL) (k = K \\to K_{ref}) $\nSimilar calculations are made below the reference layer, but then with the reference layer as the top layer.\nIn addition to the MWW parameter, the mud weight representing the middle of the drilling window (MWM) is calculated if MWW \u003e 0. Otherwise, MWM should is undefined.",
    "description": "ResInsight computes several derived results. In this section we will explain what they are, and briefly how they are calculated.\nDerived Geomechanical results ResInsight calculates several of the presented geomechanical results based on the native results present in the odb-files.\nRelative Results (Time Lapse Results) ResInsight can calculate and display relative results, sometimes also referred to as Time Lapse results. When enabled, every result variable is calculated as:\n$Value_{[t-b]} = Value_{[t]} - Value_{[b]}$",
    "tags": [],
    "title": "Derived Results - Geomechanical",
    "uri": "/calculated-data/derivedresultsgeomech/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "Flow Diagnostics Plots can be used to view well allocation, well inflow rates, cumulative saturation along time of flight and flow characteristics.\nThey are managed from the folder Flow Diagnostics Plots located in Plot Project Tree in the Plot Main Window.\nThis folder contains a default Flow Characteristics Plot and Well Allocation Plot. In addition, two folders with stored well allocation and flow characteristics plots will show up if there are any of those in the model.\nPlease refer to Cell Results-\u003e Flow Diagnostic Results for a description of the results and references to more information about the methodology.\nWell Allocation Plots Well allocation plots show the flow along a specified well, along with either phase distribution or the amount of support from/to other wells. The total phase or allocation is shown in the legend and as a pie chart, while the well flow is shown in a depth value vs flow graph.\nIn addition a Cumulative Saturation by Time of Flight plot may be shown. This little plot illustrates how the total saturation changes as you go from the well-connection-cells along increasing time of flight adding the cells as you go.\nBranches Each branch of the well will be assigned a separate Track. For normal wells this is based on the branch detection algorithm used for Well Pipe visualization, and will correspond to the pipe visualization with Branch Detection On ( See Well Pipe Geometry ). Multi Segment Wells will be displayed according to their branch information, but tiny branches consisting of only one connection are lumped into the main branch to make the visualization more understandable ( See Dummy branches ).\nCreating Well Allocation Plots To plot the Well allocation for a well, right-click the well in the Project Tree or in the 3D View and invoke the command Plot Well Allocation.\nThe command updates the default Well Allocation Plot with new values based on the selection and the settings in the active view. This plot can then be copied to the Stored Plots folder by the right-click command Add Stored Well Allocation Plot.\nOptions The Legend, Total Allocation pie chart, Cumulative Saturation, and the Well Flow/Allocation can be turned on or off from the toggles in the Project Tree. The other options are controlled from the property panel of a Well Allocation Plot:\nName – Auto generated name used as plot title Show Plot Title – Toggles whether to show the title in the plot Plot Data – Options controlling when and what the plot is based on Case – The case to plot data from Time Step – The selected time step Well – The simulation well to plot Options Plot Type Allocation – Plots Reservoir well flow rates along with how this well supports/are supported by other wells ( This option is only available for cases with Flux results available ) Well Flow – Plots Surface Well Flow Rates together with phase split between Oil, Gas, and Water Flow Type Accumulated – Plots an approximation of the accumulated flow along the well Inflow Rates – Plots the rate of flow from the connection into the well Group Small Contributions – Groups small well contributions into a group called Other Threshold – Threshold used by the Group Small Contributions option Depth Settings The depth value in the plot can be controlled by selecting the Accumulated Flow/Inflow Rates item in the Project Tree. This item represents the Well-Log-like part of the Well Allocation Plot and its properties are shown below:\nName – The plot name, updated automatically based on the Flow Type and well. Depth Type Pseudo Length – Use the length along the visualized simulation well pipe as depth. In this mode the curves are extended somewhat above zero depth keeping the curve values constant. This is done to make it easier to see the final values of the curves relative to each other.\nThe depth are calculated with Branch detection On and using the Interpolated well pipe geometry.\n( See Well Pipe Geometry ) TVD – Use True Vertical Depth on the depth-axis. This will produce distorted plots for horizontal or near horizontal wells. Connection Number – Use the number of connections counted from the top on the depth-axis. Visible Depth Range – These options control the depth zoom. Auto Scale – Toggles autoscale on/off. The plot is autoscaled when significant changes to its settings are made. Min, Max – Sets the visible depth range. These are updated when zooming using the mouse wheel etc. Accessing the Plot Data The command right-click command Show Plot Data will show a window containing the plot data in ascii format. The content of this window is easy to copy and paste into Excel or other tools for further processing.\nIt is also possible to save the ascii data to a file directly by using the right-click command Export Plot Data to Text File on the Accumulated Flow/Inflow Rates item in the Project Tree.\nThe total accumulation data can also be viewed in ascci format by the command Show Total Allocation Data.\nProducer/Injector Connectivity Table Use Producer/Injector Connectivity Table to see the flow diagnostics communication between producer and injector wells for selected time steps.\nWell Allocation Over Time Use Well Allocation Over Time to see the allocation over multiple restart time steps.\nCumulative Phase Distribution Plot A Cumulative Phase Distribution Plot shows the volumetric oil, gas, and water distribution from contributing wells to a target well. For producer B-2H, for instance, such a plot can be created by right-clicking its entry under Simulation Wells in Project Tree.\nA Cumulative Phase Distribution Plot can also be created by right-clicking a Cumulative Saturation plot, c.f. figure below.\nClicking its entry in Plot Project Tree, displays content and settings of the Cumulative Phase Distribution Plot.\nFlow Characteristics Plot This window displays three different graphs describing the overall behavior of the reservoir for each time step from a flow diagnostics point of view.\nLorenz Coefficient – This plot displays the Lorenz coefficient for the complete reservoir for each selected time step. The time step color is used as a reference for the time step in the other graphs. Flow Capacity vs Storage Capacity – This plot displays one curve for each time step of the F-phi curve for the reservoir. Sweep Efficiency – This plot displays one Sweep Efficiency curve for each selected time step. Settings Case – Selects the source case for the plot. Time Steps – These options selects the time steps to be used in the plot. All With Calculated FlowDiagnostics – Plot data from all the time steps already solved by the Flow Diagnostics Solver, but nothing more. The solver will be run implicitly when the user requests any Flow Diagnostics results on a particular time step using Cell Results, Well Allocation Plots, or Well Log Extraction Curves. Selected – Use the selected time steps only. Activating this options displays a listbox with all the available time steps in the 3D case. Time steps already solved by the Flow Diagnostics Solver are marked with an asterix *. Select the interesting time steps and press apply to invoke the solver for unsolved time steps, and to show them in the plot. Region – These group of options controls the cell region of interest for the plot. Cell Filter – Selects the type of cell filtering to apply. Sub-options are displayed depending on the selection. All Active Cells – Use all the active cells in the model (default) Visible Cells – Use the visible cells in a particular predefined view as cell region. This option will respect all the filter settings in the view, and use the correct cell set for each time step. View – The view to use as cell filter Injector Producer Communication – The region of communication between selected producers and injectors. See Flow Diagnostic Results Tracer Filter – Wild card based filter-text to filter the list of tracers list – Producer and injector tracers to select Show Region – Button to create (or edit) a 3D View showing the selected region of cells. Min communication – A threshold for the cells communication value. Cells with communication below this threshold is omitted from the region. Flooded by Injector/Drained by Producer – The region with a Time Of Flight from the selected tracers below the selected threshold. Tracer Filter/list/Show Region – See above. Max Time of Flight [days] – Only cells with a Time of Flight value less then this value are used. Options Legend – Toggles the legend on/off Aquifer Cell Threshold – This threshold can be used to exclude unwanted effects of aquifers. Cells are excluded if their pore volume are larger than threshold * total pore volume.",
    "description": "Flow Diagnostics Plots can be used to view well allocation, well inflow rates, cumulative saturation along time of flight and flow characteristics.\nThey are managed from the folder Flow Diagnostics Plots located in Plot Project Tree in the Plot Main Window.\nThis folder contains a default Flow Characteristics Plot and Well Allocation Plot. In addition, two folders with stored well allocation and flow characteristics plots will show up if there are any of those in the model.",
    "tags": [],
    "title": "Flow Diagnostics Plots",
    "uri": "/plot-window/flow-diagnostics-plots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window \u003e Flow Diagnostics Plots",
    "content": "Producer/Injector Connectivity Tables is a display of Flow Diagnostics Data as a color map in table format. The table either shows flow rate data for a single time step, or accumulated flow volume data over a range of time steps.\nThe table lists one producer per row and one injector per column. The cell data is the flow rate data or accumulated flow volume data based on the selected Time Step Type. This table data provides an overview of the communicating wells in the reservoir, and shows which injector contributes to which producer, and who are the largest contributors to production.\nThe table can be formatted by use of the Property Editor, shown below. The cell data type is controlled by Value Type and the rows/columns can be filtered by selectecting producers and injectors in the Tracer Selection. Columns are controlled by the selection of resampling, and rows are controlled by selected Threshold value and Exclude Rows.\nCreating Producer/Injector Connectivity Tables The Producer/Injector Connectivity Tables are a part of the Flow Diagnostics Plots. Click here for how to generate the plots from 3D view.\nEditing Table The settings for the Producer/Injector Connectivity Table is listed in the Property Editor.\nThe main controls for a Producer/Injector Connectivity Table is listed below:\nPlot Data The plot data can be configured, and controls are depending on selections in Filter by 3D View.\nFilter by 3D View - Utilize the active filters in 3D view (see Filter) to collect which wells are present in the visible cells. Time Step Type - Select between single time step or a range of time steps. Single Time Step - Shows flow rate - as raw value, fraction or percentage. Time Step Range - Shows accumulated flow volume - as raw value, fraction or percentage. Threshold - Set threshold value for injectors. Exclude columns (injectors) if no row in column has value above threshold. With filtering Disabled: Select Wells For Time Step(s) - Automatically select producer and injector wells present for selected time step(s): With filtering Enabled: Filter type - Select how to apply the 3D view filtering to the table data. Filter Producers - Select producer wells visible in selected Filter by 3D view, and synch communicating injectors. Filter Injectors - Select injector wells visible in selected Filter by 3D view, and synch communicating producers. Calculate By Visible Cells - Provide the cell filter to the calculation of well flow, and produce flow rate and accumulated flow volume data only using the cells present in the visible cells of 3D view. Flow Diagnostics Configuration The content of flow diagnostics configuration is dependent on the selected Time Step Type.\nValue Type - Select which value type to fill in table cells Single Time Step - Select between Flow Rate, Flow Rate Fraction and Flow Rate Percentage Time Step Range - Select between Accumulate Flow Volume, Accumulate Flow Volume Fraction and Accumulate Flow Volume Percentage Single Time Step: Value Type - Select which value type to fill in table cells: Flow Rate, Flow Rate Fraction and Flow Rate Percentage. Time Step - Select which time step to get data from Time Step Range: Value Type - Select which value type to fill in table cells: Accumulate Flow Volume, Accumulate Flow Volume Fraction and Accumulate Flow Volume Percentage From Time Step - Select time step to start range from. To Time Step - Select time step to end range on. Filter - Filter number of time steps to include: Show All Time Steps or Time Step Count. Number of Time Steps - Set number of time steps to include between From and To selection. Exclude Time Steps - Exclude specific time step if wanted. Tracer Selection Select which Producers and Injectors to include in the table. If no wells are selected, no filtering is active - thereby all producers and injectors present among the selected time steps are visible in the table when values are above threshold.\nAn example of applying a Slice Filter in Filter by 3D View and select Filter Type: Filter Producers, produces the following Tracer Selection and table view:\nNote: If a selected well does not exist among the selected time steps, it will not be present in the table.",
    "description": "Producer/Injector Connectivity Tables is a display of Flow Diagnostics Data as a color map in table format. The table either shows flow rate data for a single time step, or accumulated flow volume data over a range of time steps.\nThe table lists one producer per row and one injector per column. The cell data is the flow rate data or accumulated flow volume data based on the selected Time Step Type. This table data provides an overview of the communicating wells in the reservoir, and shows which injector contributes to which producer, and who are the largest contributors to production.",
    "tags": [],
    "title": "Producer/Injector Connectivity Tables",
    "uri": "/plot-window/flow-diagnostics-plots/producerinjectorconnectivitytable/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Seismic View Import of data is described in Seismic Data. A seismic view can be created based on a seismic cube. This view can display seismic data, wells and annotation object. To visualize both grid data and seismic data in the same view, see Seismic Sections.\nSeismic View features When seismic data is present, a new Seismic View can be created from the right-click menu of a seismic data source or the seismic views folder item. Seismic sections can be created for display of seismic data on intersections. See Seismic Sections for more details.\nSurfaces and surface intersection lines can optionally be visualized on the seismic intersections.",
    "description": "Seismic View Import of data is described in Seismic Data. A seismic view can be created based on a seismic cube. This view can display seismic data, wells and annotation object. To visualize both grid data and seismic data in the same view, see Seismic Sections.\nSeismic View features When seismic data is present, a new Seismic View can be created from the right-click menu of a seismic data source or the seismic views folder item. Seismic sections can be created for display of seismic data on intersections. See Seismic Sections for more details.",
    "tags": [],
    "title": "Seismic View",
    "uri": "/3d-main-window/seismicview/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window \u003e Flow Diagnostics Plots",
    "content": "Well Allocation Over Time Plot is a plot displaying the flow data of Well Allocation Plots over a range of time steps. The plot provides the union of wells existing across all time steps for the selected case.\nThe plot utilize the Flow Diagnostics to provide an overview of which well or phase contributes most to the flow in a selected well. One can e.g. see which injectors are contributing to production of a producing well, and vice versa, over the selected time step range. The plot can be configured with a From and To time step to create the defined time step range. One can either utilize all time steps in the defined range, or one can down sample the date resolution by defining a number of time steps to utilize. Specific time steps flow values can be excluded by selection - the flow rate value for next time step is then utilized for calculations for excluded time step.\nThe Plot Type can either be Allocation or Well Flow. Allocation shows flow data for wells contributing to the flow of the selected Well, whereas Well Flow shows the flow data for contributing phases (Oil, Water and Gas) for the selected Well.\nThe data values are controlled by Value Type, where one can select between:\nFlow Rates - [$m^{3}/day$] The flow rate at each time step. Flow Rate percentage - [$\\text{%}$] The flow rate contribution in percentage of total flow rate at each time step. Flow Volumes - [$m^{3}$] The flow volume between a time step and previous time step (flow rate multiplied with days between time steps). Accumulated Flow Volumes - [$m^{3}$] The flow volume accumulated for each time step. Accumulated Flow Volume Percentage - [$\\text{%}$] The flow volume accumulated for each time step in percentage of total accumulated flow volume at time step. Note that flow rates and flow volume is constant for a time step and back in time to previous time step in the selected time step range. Accumulated flow volume values are linear interpolated from the respective time step and to previous time step. Small contributors can be grouped into Other by enabling grouping and setting a Threshold value.\nFurther plot configuration is performed by use of the Property Editor, shown below.\nCreating Well Allocation Over Time Plot The Well Allocation Over Time Plot is a part of the Flow Diagnostics Plots. Click here for how to generate the plots from 3D view.\nEditing Table The settings for the Well Allocation Over Time Plot is listed in the Property Editor.\nThe main controls for a Well Allocation Over Time Plot is listed below:\nPlot Data Case - Select case to retrieve data from. Well - Which case well to calculate Flow Diagnostics over time for. Time Step From Time Step - Select time step to start range from. To Time Step - Select time step to end range on. Filter - Filter number of time steps to include: Show All Time Steps or Time Step Count. Number of Time Steps - Set number of time steps to include between From and To selection. Exclude Time Steps - Exclude specific time step if wanted (utilize flow rate value for next time step). Options Plot Type - Select between Allocation or Well Flow. Value Type - Select between: Flow Rates, Flow Rate percentage, Flow Volumes, Accumulated Flow Volumes and Accumulated Flow Volume Percentage Group Small Contributions - Enable to group small contributors in category Other Threshold - [$0, 1$] Contributor values below threshold is grouped into category Other when grouping is enabled.",
    "description": "Well Allocation Over Time Plot is a plot displaying the flow data of Well Allocation Plots over a range of time steps. The plot provides the union of wells existing across all time steps for the selected case.\nThe plot utilize the Flow Diagnostics to provide an overview of which well or phase contributes most to the flow in a selected well. One can e.g. see which injectors are contributing to production of a producing well, and vice versa, over the selected time step range. The plot can be configured with a From and To time step to create the defined time step range. One can either utilize all time steps in the defined range, or one can down sample the date resolution by defining a number of time steps to utilize. Specific time steps flow values can be excluded by selection - the flow rate value for next time step is then utilized for calculations for excluded time step.",
    "tags": [],
    "title": "Well Allocation Over Time Plot",
    "uri": "/plot-window/flow-diagnostics-plots/wellallocationovertimeplot/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Creating a Seismic Section Import of data is described in Seismic Data\nSeismic Sections are cross sections that cut a grid model in various ways to display seismic data. A Seismic Section is created by right-clicking the Seismic Section item in Project Tree\nThe following types of Seismic Sections are available:\nInline Section: A seismic line within a 3D survey parallel to the direction in which the data were acquired. Xline Section: A seismic line within a 3D survey perpendicular to the direction in which the data were acquired. Depth Slice: Horizontal slice through the volume data of a 3D survey at a specific depth. Polyline Section: Seismic section following a user defined polyline ontop a grid model for displaying volume data of a 3D survey, c.f. Polyline Intersection for specification of polyline. Well Path Section: Seismic section following a specific well path through the volume data of a 3D survey. Property Editor The Property Editor of a Seismic Section is shown below.\nThe properties are grouped as follows:\nGeneral: Enables the user to provide a description, select seismic data, type and position of a Seismic Section. Depth Filter: Enables filtering of a Seismic Section by setting Depth Filter properties: None: no depth filtering Above: show above the specified Depth Below: show below the specified Depth Between: show between the specified Upper Depth and the specified Lower Depth Outline: Specifying line thickness, line color, and display of seismic data outline. Show Image: Displays the Seismic Section in a separate 2D view.",
    "description": "Creating a Seismic Section Import of data is described in Seismic Data\nSeismic Sections are cross sections that cut a grid model in various ways to display seismic data. A Seismic Section is created by right-clicking the Seismic Section item in Project Tree\nThe following types of Seismic Sections are available:",
    "tags": [],
    "title": "Seismic Sections",
    "uri": "/3d-main-window/seismicsections/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Calculated Data",
    "content": "Grid Case Group’s are designed to make it easy to calculate statistics per cell and per time step of a large number of Eclipse simulation Cases with identical Grids (often labeled realizations).\nIf you have several Eclipse simulations with different input parameters available, you can put all the realizations into a Grid Case Group and easily calculate each of the cells mean value, range and max/min values at each time step. Grid calculations can optionally be used as a data source for computations.\nCreating Grid Case Groups From Files The easiest way to create a Grid Case Group is to use the Import command: File-\u003eImport-\u003eEclipse Cases-\u003eCreate Grid Case Group\nThis command will display the recursive file import dialog described on the Summary Plots page.\nResInsight then creates a Grid Case Group for you, and populates its Source Cases with the Cases you selected. Then the first of those Cases are read completely, while the others are just scanned to verify that the Grids match and to detect changes in the Active Cells layout. This makes it quite fast to load even a quite large number of realizations.\nManually A Grid Case Group can be created from the right-click menu of a Result Case, Input Case or a different Grid Case Group. Source Cases can then be added by using the mouse to drag and drop cases with equal grids into the Grid Case Group’s Source Case folder. This is useful if you want to create statistics based only on a subset of the source cases in an already created Grid Case Group.\nDrag and Drop of cases will normally copy the cases to the new destination, but moving them is possible by pressing and holding the Shift key while dropping.\nViewing Special Source Cases To reduce the number of views, only a view for the first case is created automatically. If you want to inspect the results of a particular source case, select New view from the right-click menu. A new 3D View will the be created on that particular case.\nNote\rHow to limit system resource allocation\rTo reduce memory usage, project loading time etc. remember to delete the 3D Views you do not need. 3D Views uses a lot of system resources.\rStatistics After creating a grid case group, an empty Statistics Case is created for you in the Derived Statistics folder of the Grid Case Group.\nSetting Up and Calculate Settings for grid case property statistics\nCompute – Starts to calculate requested statistical Properties. Edit – Deletes the calculated results, and makes the controls to edit the setup available. Summary of calculation setup – Summarizes what to calculate. Properties to consider – These options makes it possible to select what Eclipse properties to include in the Statistical calculations. Adding variables increase the memory usage and the computational time. Percentile Setup – Selects whether to calculate percentiles, what method and what percentile levels should be used. Turning this off speeds up the calculations. Well Data Source Case – This option selects which set of Simulation Wells to be shown along with the statistical results. You can select one of the Source Cases. Settings for grid cell calculations\nData Source – Defines either a cell property or a grid calculation expression to be used as data source for the statistical calculations. Grid Calculation – List of all defined calculations in the project. Filter By View – Limit the calculation to visible cells in a selected view. Cell values in a selection of cells can be aggregated as described in Aggregation of Grid Cell Values\nSettings for when statistics has been computed\nPercentile Methods Three Percentile methods are implemented:\nInterpolated Observation – The values are sorted, and the two observations representing the probabilities closest to the percentile are interpolated to find the value for the percentile. This is the default method. Nearest Observation – The values are sorted, and the first observation representing a probability higher or equal to the percentile probability is selected as the value for the percentile. This method is by some considered to be statistically more puristic. Histogram based estimate – A histogram is created and the percentile is calculated based on the histogram. This method will be faster when having a large number of realizations, because no value sorting is involved. You would however need several hundred realizations before this method should be considered. Viewing the Results When the computation is complete, you have to create a 3D View on the Statistics Case to view the results. Use the right-click menu of the Statistics Case to create it.\nAdding Statistics Cases A new statistical calculation can be created by activating the right-click menu for Derived Statistic-\u003eNew Statistics Case.",
    "description": "Grid Case Group’s are designed to make it easy to calculate statistics per cell and per time step of a large number of Eclipse simulation Cases with identical Grids (often labeled realizations).\nIf you have several Eclipse simulations with different input parameters available, you can put all the realizations into a Grid Case Group and easily calculate each of the cells mean value, range and max/min values at each time step. Grid calculations can optionally be used as a data source for computations.",
    "tags": [],
    "title": "Grid Case Groups and Statistics",
    "uri": "/calculated-data/casegroupsandstatistics/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "ResInsight supports the creation of scatter / cross plots of two Eclipse results against each other, with each cell in the grid representing one data point in the plot. The data points can be grouped by a third result, by time step or by Formations. giving a separate color and label for each group. The above example shows a classic Porosity vs Permeability plot, grouped by formations, showing different trends for each formation.\nFor continuous grouping parameters, the parameter will be divided into a set of equally sized intervals depending on the number of Color Legend intervals.\nEach cross plot can contain any number of Data Sets, representing a collection of cross plot points, where the Data Set can have a case source, time step and cell filter associated with it. This way, dynamic parameters for different time steps can be compared, or results from different case realizations.\nThe Grid Cross plots may have a Symbol Legend below the plot, separating the Data Sets, and a Color Legend within the plot separating between the different Grouping categories or intervals. In addition, an Info Box will be added to the upper right corner of the plot, showing the different data sets in the plot and the parameters used. The Color Legends and Info Box can be moved to other parts of the plot and will snap to edges and corners when moved close to them.\nCreating Grid Cross Plots Grid Cross Plots can be created in a couple of ways:\nSelect a 3D view or Cell Result in the main ResInsight window, right-click and select Create Grid Cross Plot from 3d View. The resulting cross plot will display the current 3d Result x DEPTH and only contain data points for the visible cells. Right-click on the Grid Cross Plots entry under Plots in the Plot Window. By default the plot will contain the result values PORO x PERMX and will be grouped by formations (if any are loaded in the project). Data for all active cells will be displayed. Having created a Grid Cross Plot, the appearance of the Legends, the Info box and the Plot Title can be set in the Property Editor of the Grid Cross Plot.\nThe plot also have some available settings for the two plot axes (X and Y), where the title position and font size can be altered plus the axis range may be controlled and the axis may be set as logarithmic and inverted so the smallest value is first (default for DEPTH on the Y-axis).\nRegression Curves A regression curve can be displayed for each data group. The display of regression curves is controlled from the Regression Curves folder.\nGrid Cross Plot Data Sets Further Grid Cross Plot data sets can be added to a Plot by right clicking on the plot in the Project Tree and selecting New Data Set.\nThe Data Sets contain all the parameters controlling the data source and types of data being plotted.\nThe available parameters are:\nParameter Description Case The Eclipse Case containing the data Time Step Show data for All Time Steps or just a specific time step Filter by 3d View Visibility Pick a view to use only the cells visible in that view. Allows the use of range and property filters Group Data by Group and color data points by Time Step, Result Property or Formations Data Grouping Property Available if grouping by Result Property and lets you pick any Eclipse result property and the number of intervals to divide the data into X-Axis Property The property representing the X-axis in the cross plot Y-Axis Property The property representing the Y-axis in the cross plot Name Configuration Add Case Name, Axis Variables, Time Step and/or Data Group to the name of the Data set Show Plot Data The data used to create the Cross Plot can be exported by either right-clicking on the Cross Plot in the project tree or right clicking on the plot itself and selecting Show Plot Data.\nEither method will bring up a dialog containing column-based text showing the X and Y result values, the Group index and Group Description (the latter two if Grouping is enabled). One tab in the dialog will be added for each Data Set. The data can be copied to the clipboard or exported to file by right-clicking on the text area.\nSwap Axes The X- and Y-axes can be swapped, both for invididual data sets, by choosing Swap Axis Properties from the right-click menu of the Grid Cross Plot Data Set, or for all data sets by right clicking on either the Cross Plot in the Project Tree or on the plot itself and selecting Swap Axis Properties for all Data Sets in Plot. The X- and Y-axis will swap place retaining the properties, such as Logarithmic or inverted axes.",
    "description": "ResInsight supports the creation of scatter / cross plots of two Eclipse results against each other, with each cell in the grid representing one data point in the plot. The data points can be grouped by a third result, by time step or by Formations. giving a separate color and label for each group. The above example shows a classic Porosity vs Permeability plot, grouped by formations, showing different trends for each formation.",
    "tags": [],
    "title": "Grid Cross Plots",
    "uri": "/plot-window/gridcrossplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "One or more views can be linked together to allow some settings like camera position and range filters, propagate from one view to another.\nEstablish Linked Views To establish a link between views, select Link Visible Views from the View toolbar. This will open a dialog where the Master View is selected. When pressing Ok in this dialog, the Linked Views items are displayed in the top of the Project Tree.\nIt is also possible to link specific views by selecting them and choosing Link Selected Views from the right-click menu. The following image shows the linking of a regular view with a Contour Map. Note that contour maps can never be the Master View.\nLinked View Options When selecting a linked view in the project tree, the different options are available in the Property Editor.\nLink Options Camera – Navigation in any of the views where this option is active will be applied to the other linked views with this option set. This option is not available for Contour Maps. Show Cursor – Shows the position of the mouse cursor in the other views as a cross-hair. This option is not available for Contour Maps. Time Step – Change of time step in any of the views where this option is active will be applied to the other linked views with this option set. Cell Color Result – Change of cell result in the master view will be applied to all dependent views where this option is active. Cell Color Result is only supported between views of the same type. Legend Definition – Links the legend between views already linking the Cell Results Color. Link Cell Filters Range Filters – Range filters in master view will be applied to all dependent views where this option is active. Normally this is done by a direct copy, but if the master and dependent view is of different types (Eclipse and Geomechanical views) and the Eclipse case is within the bounds of the Geomechanical case, ResInsight tries to map the range filters to the corresponding cells in the other case. Property Filters – Property filters in master view will be applied to all dependent views where this option is active. Toggle Linking from the Project Tree A linked view can temporarily be disabled by unchecking the linked view. To disable all linked views temporarily, uncheck the top level item Linked Views.\nProject Tree right-click menu Right-clicking one of the linked view entries in the Project Tree displays the following menu entries:\nOpen All Linked Views – Open all the views which is part of the linked view group. Delete All Linked Views – Delete the linked views group, and thereby unlink all the views. Delete – Remove an individual view from the group of linked views. 3D View right-click menu To activate the menu items for a linked view, right-click inside the 3D view anywhere outside the model. Depending on whether the view is a dependent-, or an unlinked view, some of the following commands are available:\nShow Link Options – Activate the linked view item in the project tree, and show its properties. Set As Master View – Use the view as Master View. This option is not available for Contour Maps. Link View – Add the view to list of linked views. Unlink View – Delete the view from list of linked views. Master views have no available linking commands.",
    "description": "One or more views can be linked together to allow some settings like camera position and range filters, propagate from one view to another.\nEstablish Linked Views To establish a link between views, select Link Visible Views from the View toolbar. This will open a dialog where the Master View is selected. When pressing Ok in this dialog, the Linked Views items are displayed in the top of the Project Tree.",
    "tags": [],
    "title": "Linked Views",
    "uri": "/3d-main-window/linkedviews/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e Plot Main Window",
    "content": "A Saturation Pressure Plot a plot displaying bubble and dew point pressures, together with initial pressure in model, versus depth. Fluid contacts (GOC and/or OWC) are displayed as annotation lines in the generated plots. One Saturation Pressure Plot is created for each equilibrium region.\nTo be able to create these plots, output of saturation pressures need to be specified in the SOLUTION section of the Eclipse “.DATA” file.\nTo create these plots, right click on the view in the Property Editor, and select Create Saturation Pressure Plots. It is also possible to create these plots by right click on the item Saturation Pressure Plots in the Property Editor in the Plot Window.",
    "description": "A Saturation Pressure Plot a plot displaying bubble and dew point pressures, together with initial pressure in model, versus depth. Fluid contacts (GOC and/or OWC) are displayed as annotation lines in the generated plots. One Saturation Pressure Plot is created for each equilibrium region.\nTo be able to create these plots, output of saturation pressures need to be specified in the SOLUTION section of the Eclipse “.DATA” file.",
    "tags": [],
    "title": "Saturation Pressure Plots",
    "uri": "/plot-window/saturationpressureplots/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight offers a Comparison View to compare two existing views in terms of grid geometry, results, intersections and more. The Comparison View allows comparison of information of different grids and different solutions on the same grid in a single view. This improves efficiency and simplifies the workflow when working with related but different models.\nThe figure above exemplifies a Comparison View for comparison of two different simulations models and results. The left hand side is used to display grid and results of an Eclipse simulation while the right hand side displays an ABAQUS grid and simulation results from geomechanical analysis.\nA different way to use the Comparison View is to compare the same geometrical grid with different Cell Results. Thus two cell results can easily be seen together in the same view.\nCreating a Comparison View A Comparison View can be created as follows:\nIn Project Tree, select a view and specify Comparison View in the Viewer section of Property Editor Right-click a 3D View, and select Compare To… Comparison View Divider In the figure below, the Comparison View is used to compare two different grids in the same view, one to the left and the other to the right of the divider between them. The screen aligned divider is possible to drag right and left by clicking the handle marked by a green circle.\nView Properties and Settings Properties of an individual view included in a Comparison View are controlled by their respective settings, notably 3D Views, Cell Results, Result Color Legend, Cell Filters, and Intersections.\nSetting up Linked Views may also be relevant, e.g. to syncronize cell results and cell filters.\nNote\rPolyline Intersections does not facilitate picking points across the Comparison View divider. However, an intersection can be copied betweens views, see Intersections for details.",
    "description": "ResInsight offers a Comparison View to compare two existing views in terms of grid geometry, results, intersections and more. The Comparison View allows comparison of information of different grids and different solutions on the same grid in a single view. This improves efficiency and simplifies the workflow when working with related but different models.\nThe figure above exemplifies a Comparison View for comparison of two different simulations models and results. The left hand side is used to display grid and results of an Eclipse simulation while the right hand side displays an ABAQUS grid and simulation results from geomechanical analysis.",
    "tags": [],
    "title": "Comparison View",
    "uri": "/3d-main-window/comparisonview/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Flow Results lets the user investigate flow properties and fluxes in a reservoir, e.g. by flow vector visualizations selecting and combining different fluids and directions.\nFlow Vectors Flow vectors are computed based on the Eclipse properties FLRGASI/J/K FLRWATI/J/K FLROILI/J/K. Visualization of flow vector results always use velocity instead of rate. Velocity is computed as flow rate divided by cell face area.\nIn order to show flow vectors, check the checkbox next to Flow Vector Result in Project Tree.\nThis updates the 3D View with arrows visualizing the fluxes for the given time step or animation. The directions, data source fluids, color, scale and threshold can be adjusted in the Property Editor.\nThe legend in 3D View maps the Flow Vector colors to their respective result values. By default it shows the max values for all time steps. The legend settings can be changed in the Color Legend sub item of the Flow Vector Result item in Project Tree.\nNote\rWhen combining several fluids, the max value shown in legend is an aggregation of the single max values of each selected fluid. This means that this number might be higher than the result of any flow vector.\nFlow Vector Settings The Property Editor controls the following settings:\nFluids: Selection of fluids for displaying fluxes as aggregated vectors in 3D view.\nVisibility\n– View Vectors: Select Per Face to show one flow vector per cell face or Cell Center Total to show only one vector per cell center (as an aggregation of all single direction vectors).\n– Vectors Touching Surface: Select At Vector Anchor to display vectors starting at cell faces or At Vector Center to center vectors at cell faces. Vectors Touching Surface is enabled when View vectors is set to Per Face.\n– I/J/K: Use flows in I/J/K direction for computing vectors.\n– Show NNC data: Visualize flows between non-neighbouring cells.\n– Threshold: All vectors with flow result values below this number are hidden.\nAppearance: Select Result Colors to color vectors according to Element Vector Result legend in 3D View or Uniform for uniform color. Use Size Scale to scale vector length.\nCell Result View ResInsight may visualize intercell flows, flow rates, and transmissibilities as Cell Results optionally divided by face area, c.f. check-box Divide By Area below. For instance, the option enables comparison of horisontal and vertical flow velocities as alternative to flow rates as the latter is typically influenced by significant differences in cell face areas.\nSpecifically, the check-box Divide By Area is applicable to Eclipse properties FLROIL, FLRGAS, FLRWAT, FLOOIL, FLOGAS, FLOWAT, and transmissibilities TRAN and riTRAN. These results are listed in ResInsight postfixed by IJK+- or XYZ as shown above. As seen, checking Divide By Area is reflected by text /A in legend.",
    "description": "Flow Results lets the user investigate flow properties and fluxes in a reservoir, e.g. by flow vector visualizations selecting and combining different fluids and directions.\nFlow Vectors Flow vectors are computed based on the Eclipse properties FLRGASI/J/K FLRWATI/J/K FLROILI/J/K. Visualization of flow vector results always use velocity instead of rate. Velocity is computed as flow rate divided by cell face area.",
    "tags": [],
    "title": "Flow Results",
    "uri": "/3d-main-window/flowvectorresult/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Streamlines lets the user investigate the flow of different phases through a reservoar. It allows for selecting both an individual phase or a combination of phases colored by the dominant phase or velocity. The visualization and animation of streamlines requires the Eclipse properties FLRGASI/J/K FLRWATI/J/K FLROILI/J/K.\nDisplaying Streamlines To display streamlines, select a time step and check the Streamlines checkbox in Project Tree.\nProperty Editor The display and animation of streamlines is controlled by the Property Editor.\nThe following groups of settings control the content, display and animation of streamlines:\nData Selection\nPhase: Selection of an individual phase (Oil, Gas, Water) or Combined display. Flow Threshold: Minimum flow threshold calculated as I/J/K flow rate divided by corresponding face area. Minimum Length: Minimum length of streamlines in meters. Resolution: Resolution of streamline animation in days (governing the number of individual animation steps). Max Days: Maximum calculation range in days for streamline animation. Well Selection\nInjector Wells: Calculate streamlines stemming from injector wells. Producer Wells: Calculate streamlines backtracing from producer wells. Visualization Settings\nVisualization Mode: Perform an animation of streamlines or manually control the display. Colors: Color the streamlines by dominant phase or by velocity. Animation Speed: Adjust the speed of streamline animation. Tracer Length: Adjust the length of the individual tracers pertinent to a streamline. In case Visualization Mode is set to Manual control, the setting Animation Index replaces the two latter settings. Animation Index allows for displaying an individual animation step.\nAlgorithm in brief Streamlines are generated by starting in open injector well cells and tracing out through the face with the largest flow rate (in m/day) into the next cell and so on. If flow rates above the given threshold exists for multiple cell faces, additional trace branches are spawned off for those faces. The distance between each point added to a trace is controlled by the resolution, as $ distance = rate * resolution $. The trace ends when either:\nthe flow goes below the user specified threshold the maximum number of days since the start of the trace have been reached a cell that already has a trace in it is encountered an active well cell is encountered Streamlines could also be generated using production wells as starting cells. In that case, the flow is reversed and the flow is traced backwards from the starting well using the same algorithm as for injector wells. Once reaching the end, the trace is reversed again to have the flow go into the production well in the final streamline.",
    "description": "Streamlines lets the user investigate the flow of different phases through a reservoar. It allows for selecting both an individual phase or a combination of phases colored by the dominant phase or velocity. The visualization and animation of streamlines requires the Eclipse properties FLRGASI/J/K FLRWATI/J/K FLROILI/J/K.\nDisplaying Streamlines To display streamlines, select a time step and check the Streamlines checkbox in Project Tree.",
    "tags": [],
    "title": "Streamlines",
    "uri": "/3d-main-window/streamlines/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight supports measurements in the 3D views. To enter measurement mode, press the ruler toolbar button or the keyboard shortcut Ctrl-M. This mode can also be activated from the right-click menu in a 3D view.\nWhen ResInsight is in measurement mode, clicking on an surface in the 3D view will set the first measurement point. Clicking on a different surface will set the second measurement point, and display a label with measurements. Additional clicking will start a new measurement between two points.\nThe measurement label contains the following:\nLength - The length of the measurement segment Horizontal Length - The length of the measurement segment projected onto the XY plane ResInsight also supports measuring a polyline (a set of line segments), which can be activated with the polyline ruler toolbar button or Ctrl-Shift-M. The measurement label will now contain additional measurements.\nThe measurement label contains several lengths.\nSegment Length - The length of the last segment Segment Horizontal Length - The length of the last segment projected onto the XY plane Total Length - The total length of the measurement polyline Total Horizontal Length - The total length of the measurement polyline projected onto the XY plane Horizontal area - The area of the polyline projected onto the XY plane To leave measurement modes, press the toolbar button, press the Esc button or press the keyboard shortcut used to activate the mode again.",
    "description": "ResInsight supports measurements in the 3D views. To enter measurement mode, press the ruler toolbar button or the keyboard shortcut Ctrl-M. This mode can also be activated from the right-click menu in a 3D view.\nWhen ResInsight is in measurement mode, clicking on an surface in the 3D view will set the first measurement point. Clicking on a different surface will set the second measurement point, and display a label with measurements. Additional clicking will start a new measurement between two points.",
    "tags": [],
    "title": "Measurement",
    "uri": "/3d-main-window/measurement/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight supports displaying a few types of annotations in 3D views and Contour Map view.\nText annotations Reach circle annotations Polyline annotations User defined polylines Polylines imported from file Global scope vs local scope annotations Global annotations may be displayed in all views and are located in the Annotations project tree node right below Grid Models (Global annotations sub tree). Local annotations are associated with a specific view and are located in the Annotations project tree node below the view node (Local annotations sub tree). All annotation types except text annotations are global only. Text annotation may be either global or local.\nAll global annotations also have a representation in the local Annotation tree node in order to toggle visibilty per view. Those annotations are located in tree nodes starting with Global.\nLocal annotations sub tree\nGlobal annotations sub tree\nText Annotations There are two ways of creating a new text annotation.\nRight click Annotations or Text Annotations tree node in either the global annotatyion sub tree or the local annotations sub tree. The scope of the annotation depends on which node was clicked. When text annotations are created this way, all text annotation fields must be entered manunally in the property editor. Right click on an object in the view and select Create Text Annotation. ResInsight will then create a text annotation at the clicked point. In this case, only th text must be entered manually in the property editor. When creating a text annotation this way, it will become a local annotation by default. Anchor Point - The interesting point in the view Label Point - The point where the text label is placed Text - The text to display. Multiline supprted. The first line will be the name of the annotation in the project tree Text appearance - Set font size, font color, background color and anchor line color When a text annotation tree node is selected, target markers in each end of the anchor line are displayed. The targets can be clicked and dragged. Clicking the blue part lets the user drag the target vertically (along Z axis). Clicking the magenta part lets the user drag the target in the XY plane.\nReach Circle Annotations To create a reach circle annotation, right click Annotations or Reach Circle Annotations tree node in the global annotations sub tree. Then enter values in the property editor.\nName - Name of the circle annotation Center Point - Center point of the circle. Format ‘x-pos y-pos depth’ Radius - Circle radius Line Appearance - Set circle color and line thickness User Defined Polyline Annotations To create a user defined polyline annotation, right click Annotations or User Defined Polyline Annotations tree node in the global annotations sub tree. The property editor for the newly created annotation is displayed and is in picking points mode. The user may now click on objects in the view to create polyline points. When finished, click Stop Picking Points in the property editor.\nTargets - Polyline points. Can be edited in the table or interactively in the view Start Picking Points / Stop Picking Points - Button to start / stop picking mode Line Appearance - Set line color and thickness When a user defined polyline annotation tree node is selected, the polyline target markers become visible. Those can be dragged around as decribed above.\nPolyline Imported From File To import a polyline annotation from file, right click Annotations or Polylines From File tree node in the global annotations sub tree. Then select the file to import and click OK. Imported polyline annotations are not editable.\nFile - Name of the imported file Line Appearance - Set line color and line thickness Polyline File format Define each point as three double per line (X Y Depth). Comment lines are supported by using # at the start of the line\n# This is a comment # This is a comment 58177.76 732.7 1643.6 58260.83 732.8 1596.6 57985.66 732.7 1542.0 59601.45 732.4 3639.0 59422.01 732.2 3639.0 59793.41 732.2 3639.0 999 999 999 # starting polyline 2 58260.83 732.8 1596.6 57985.66 732.7 1542.0 59601.45 732.4 3639.0 Annotations visibility Local annotations visibility is controlled by the check boxes in the local annotations sub tree only. Global annotations visibility, on the other hand, is controlled by the check boxes in both the global and local annotations sub trees. So in order to display a global annotation in a specific view, both the annotation tree note itself and its representation in the local sub tree must have visibilty enabled.",
    "description": "ResInsight supports displaying a few types of annotations in 3D views and Contour Map view.\nText annotations Reach circle annotations Polyline annotations User defined polylines Polylines imported from file Global scope vs local scope annotations Global annotations may be displayed in all views and are located in the Annotations project tree node right below Grid Models (Global annotations sub tree). Local annotations are associated with a specific view and are located in the Annotations project tree node below the view node (Local annotations sub tree). All annotation types except text annotations are global only. Text annotation may be either global or local.",
    "tags": [],
    "title": "Annotations",
    "uri": "/3d-main-window/annotations/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "Tensors are arrows showing the average principal vectors in an element, shown on every visible face of the element.\nThe tensor results editor is found in a geo mechanical model’s View in the project tree as seen below.\nVisualization The tensor arrows visualize the principal vectors in three directions. Each colored pair of arrows represents a principal. In the example above, the orange and blue arrows represent pressures and the white arrows represent a tension.\nProperties Value Tensor Results of an element can be calculated from one of the three result values SE, ST and E.\nVisibility Choose which of the three principals to be shown. The threshold removes all principals with an absolute value less than or equal to the threshold value.\nVector Colors Choose which color palette to use for the three arrows. The colors appear in “correct” order (first color = principal 1).\nThe vector color Result Colors is special. By choosing this color type, a new legend will appear. This legend is defined by the values in the Legend definition of the Element Tensor Results. The extreme values of the color mapper are the extremes of the three principals combined. In the example below, the color result is SE-S1. The largest arrow (principal 1) is quite similar to the cell color, as expected.\nVector Size Scale method Result scales the arrows relative to the maximum result value of all components in the model. With scale method Constant, all the arrows are set to an equal constant size. The overall arrow size can be adjusted by using the Size Scale.",
    "description": "Tensors are arrows showing the average principal vectors in an element, shown on every visible face of the element.\nThe tensor results editor is found in a geo mechanical model’s View in the project tree as seen below.\nVisualization",
    "tags": [],
    "title": "Tensor Results",
    "uri": "/3d-main-window/tensors/index.html"
  },
  {
    "breadcrumb": "ResInsight \u003e 3D Main Window",
    "content": "ResInsight 3D Views has an info box in the upper right corner displaying statistics for the current view. A more detailed version of this information may also be displayed in a separate dialog window. Right click on the 3D view background and select Grid Statistics to bring up the dialog.\nGrid Statistics Dialog Fields The dialog consist of three information parts.\nInfo text Histogram Cumulative Histogram Info Text The Info Text field shows general info about the case, the selected results, and some statistics.\nHistogram The histogram shows a histogram of the complete time series of the currently loaded Cell Result together with:\nThe mean value ( a blue line ) P10 and P90 ( red lines ) Cumulative Histogram The cumulative histogram shows av accumulated version of the histogram above.\nGrid Statistics Configuration A grid statistics dialog is always connected to the 3D view from where it was opened. When the contents of the 3D view changes due to user interactions, the grid statistics dialog contents will be updated automatically along with the info box. The Statistics Options of the info box is shown in the figure below with default settings. These settings become available by clicking in the info box or the info box node in Project Tree.\nThe options in the Visibility group apply to the info box only and do not affect the Grid Statistics dialog, while the options in the Statistics Options group affect both.\nStatistics Options Statistics Time Range -– Controls whether all time steps or only the current time step are included when statistics is computed. Flow Diagnostic results can only use the current time step option. Statistics Cell Range -– Controls if visible cells or all active cells is included when statistics is computed. Snapshot The Grid Statistics dialog has a toolbar containing two buttons for snapshot functionality. The leftmost button copies a snapshot of the dialog contents to the operating system’s clipboard, while the rightmost button creates a file containing the snapshot.\nNote\rThe main window also has a snapshot toolbar containing the button Snapshot All Views. This button will include a snapshot of the Grid Statistics dialog if opened.",
    "description": "ResInsight 3D Views has an info box in the upper right corner displaying statistics for the current view. A more detailed version of this information may also be displayed in a separate dialog window. Right click on the 3D view background and select Grid Statistics to bring up the dialog.\nGrid Statistics Dialog Fields The dialog consist of three information parts.",
    "tags": [],
    "title": "Grid Statistics Dialog",
    "uri": "/3d-main-window/gridstatisticsdialog/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight is an open source, cross-platform 3D visualization, curve plotting and post processing tool for Eclipse reservoir models and simulations. It can also be configured to visualize geomechanical simulations from ABAQUS.\nThe system also constitutes a framework for further development and can be extended to support new data sources and visualization methods, e.g. additional solvers, seismic data, CSEM, and more.\nEfficient User Interface The user interface is tailored for efficient interpretation of reservoir simulation data with specialized visualizations of properties, faults and wells. It enables easy handling of a large number of realizations and calculation of statistics. To be highly responsive, ResInsight exploits multi-core CPUs and GPUs. Efficient plotting of well log plots and summary vectors is available through selected plotting features.\nData Support The main input data is *.GRID and *.EGRID files along with their *.INIT and restart files *.XNNN and *.UNRST. Summary vectors can be imported from *.SMSPEC files. ResInsight also supports selected parts of Eclipse input files and can read grid information and corresponding cell property data sets from *.GRDECL files. Well log data can be imported from *.LAS files.\nResInsight can also be built with support for Geomechanical models from ABAQUS in the *.odb file format.\nUpdating and Refining Eclipse simulation models ResInsight contains several pre-processing tools for updating and improving Eclipse reservoir models, including but not limited to:\nAdding Well Path Completions such as fractures, fishbones and perforations to well paths, including transmissibility calculations to allow for simulation in Eclipse. Easily and visually generate setup files for Local Grid Refinement (LGR) The generation of Eclipse Multi Segment Well-models for well path completions. Flow Diagnostics Flow diagnostics calculations are embedded in the user interface and allows instant visualization of several well-based flow diagnostics properties, such as : Time of flight, flooding and drainage regions, well pair communication, well tracer fractions, well allocation plots and well communication lines. The calculations are performed by a library called opm-flowdiagnostics developed by SINTEF Digital. More…\nOctave Integration Integration with GNU Octave enables powerful and flexible result manipulation and computations. Derived results can be returned to ResInsight for further handling and visualization. Eventually, derived and computed properties can be directly exported to Eclipse input formats for further simulation cycles and parameter studies.\nProject organization ResInsight is developed by Ceetron Solutions in collaboration with with Equinor.\nResInsight is a part of the Open Porous Media Initiative. The software is hosted at GitHub, and the development progress can be monitored there. The GitHub issue tracker is heavily used to organize the development process.\nLicensing The software is licensed under GPL 3+, see Licensing details.\nWeb site programming and design Web site is built with Grav and Hugo",
    "description": "ResInsight is an open source, cross-platform 3D visualization, curve plotting and post processing tool for Eclipse reservoir models and simulations. It can also be configured to visualize geomechanical simulations from ABAQUS.\nThe system also constitutes a framework for further development and can be extended to support new data sources and visualization methods, e.g. additional solvers, seismic data, CSEM, and more.\nEfficient User Interface The user interface is tailored for efficient interpretation of reservoir simulation data with specialized visualizations of properties, faults and wells. It enables easy handling of a large number of realizations and calculation of statistics. To be highly responsive, ResInsight exploits multi-core CPUs and GPUs. Efficient plotting of well log plots and summary vectors is available through selected plotting features.",
    "tags": [],
    "title": "About",
    "uri": "/about/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Categories",
    "uri": "/categories/index.html"
  },
  {
    "breadcrumb": "",
    "content": "ResInsight • 3D viewer and post processing of reservoir models\r3D viewer and post processing of reservoir models Fast and Free Open Source Efficient user interface Handles large simulation cases Plotting of summary vectors Embedded Flow Diagnostics Python API for scripting Unique Features NNC visualization Cell Edge Coloring Detailed MSW visualization Supports geomechanical ABAQUS simulations Getting Started Download and Release Info\nGetting Started",
    "description": "ResInsight • 3D viewer and post processing of reservoir models\r3D viewer and post processing of reservoir models Fast and Free Open Source Efficient user interface Handles large simulation cases Plotting of summary vectors Embedded Flow Diagnostics Python API for scripting Unique Features NNC visualization Cell Edge Coloring Detailed MSW visualization Supports geomechanical ABAQUS simulations Getting Started Download and Release Info",
    "tags": [],
    "title": "ResInsight",
    "uri": "/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "For inquiries for new features, enhancements or support and maintenance agreements, please contact us for an offer.\nPhone : +47 73 60 43 00 e-mail : info@ceetronsolutions.com\nBug reports and general feature requests can be filed directly on GitHub\nCeetron Solutions AS - Digitalization and visualization for engineers",
    "description": "For inquiries for new features, enhancements or support and maintenance agreements, please contact us for an offer.\nPhone : +47 73 60 43 00 e-mail : info@ceetronsolutions.com\nBug reports and general feature requests can be filed directly on GitHub\nCeetron Solutions AS - Digitalization and visualization for engineers",
    "tags": [],
    "title": "Support",
    "uri": "/support/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Tags",
    "uri": "/tags/index.html"
  },
  {
    "breadcrumb": "ResInsight",
    "content": "ResInsight Introduction Course Content 3D visualization of Eclipse models including faults, intersections, surfaces, and contour maps Eclipse Summary plots, ensemble plots and observed data RFT plots, correlation plots, and analysis plots Flow Diagnostics Linking and comparison of views Course goals Proficiency in evaluating Eclipse simulation results by 3D visualization and plotting in ResInsight.\nPrerequisites Knowledge about Eclipse reservoir simulations.\nNotes The course is offered online on both Windows and Linux systems.\nContact information Please contact Ceetron Solutions for requests, phone +47 73 60 43 00, e-mail: info@ceetronsolutions.com\nResInsight Advanced Course Content Data analysis, grid properties cross-plotting, grid statistics across ensemble of models Import and create well paths, extraction and plotting of grid data along well Sector model export Create well completions with perforations, Fishbones and hydraulic fractures (StimPlan import) ResInsight project file format Course goals Proficiency in analyzing grid data, make sector models, visualize well data and create well completions using ResInsight.\nNotes The course is offered online on both Windows and Linux systems.\nPrerequisites Knowledge about Eclipse reservoir simulations. Experience with basic use of ResInsight (c.f. ResInsight Introduction course). Contact information Please contact Ceetron Solutions for requests, phone +47 73 60 43 00, e-mail: info@ceetronsolutions.com",
    "description": "ResInsight Introduction Course Content 3D visualization of Eclipse models including faults, intersections, surfaces, and contour maps Eclipse Summary plots, ensemble plots and observed data RFT plots, correlation plots, and analysis plots Flow Diagnostics Linking and comparison of views Course goals Proficiency in evaluating Eclipse simulation results by 3D visualization and plotting in ResInsight.\nPrerequisites Knowledge about Eclipse reservoir simulations.\nNotes The course is offered online on both Windows and Linux systems.",
    "tags": [],
    "title": "Training Courses",
    "uri": "/training/index.html"
  }
]
