# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "dev" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "dev" ]
  workflow_dispatch:
  schedule:
    # Once every night
    - cron: '0 1 * * * '

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp']
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support
        config:
        - {
            name: "Ubuntu 20.04",
            os: ubuntu-20.04,
            cc: "gcc", cxx: "g++",
            vcpkg-response-file: vcpkg_x64-linux.txt,
            vcpkg-triplet: x64-linux,
            cmake-toolchain: 'ThirdParty/vcpkg/scripts/buildsystems/vcpkg.cmake'
          }

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
        
    - name: Cache Qt        
      id: cache-qt
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/Qt/
        key: ${{ matrix.config.os }}-QtCache-5-12-12
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.12.12
        modules: qtscript qtcharts
        dir: '${{ github.workspace }}/Qt/'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
    - name: Install Linux dependencies
      if: "contains( matrix.config.os, 'ubuntu')"
      run: sudo apt-get install libxkbcommon-x11-0 libgl1-mesa-dev mesa-common-dev libglfw3-dev libglu1-mesa-dev libhdf5-dev
    - name: Set vcpkg's response file path used as part of cache's key.
      uses: lukka/set-shell-env@master
      with:
        VCPKGRESPONSEFILE: ${{ github.workspace }}/${{ matrix.config.vcpkg-response-file }}
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v7
      id: runvcpkg
      with:
        vcpkgArguments: '@${{ github.workspace }}/${{ matrix.config.vcpkg-response-file }}'
        vcpkgDirectory: '${{ github.workspace }}/ThirdParty/vcpkg'
         # Ensure the cache key changes any time the content of the response file changes.
        appendedCacheKey: ${{ hashFiles(env.VCPKGRESPONSEFILE) }}-clang-tidy-v01        

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    #   If the Autobuild fails above, remove it and uncomment the following three lines. 
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh
    
    - name: Build ResInsight
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_TOOLCHAIN_FILE=${{ matrix.config.cmake-toolchain }} ..
        make -j8

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
